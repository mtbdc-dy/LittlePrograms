// Mozilla User Preferences

// DO NOT EDIT THIS FILE.
//
// If you make changes to this file while the application is running,
// the changes will be overwritten when the application exits.
//
// To change a preference value, you can either:
// - modify it via the UI (e.g. via about:config in the browser); or
// - set it within a user.js file in your profile.

user_pref("accessibility.typeaheadfind.flashBar", 0);
user_pref("app.normandy.first_run", false);
user_pref("app.normandy.startupExperimentPrefs.dom.push.alwaysConnect", true);
user_pref("app.normandy.startupRolloutPrefs.extensions.fxmonitor.enabled", true);
user_pref("app.normandy.user_id", "b6e20e39-cbce-450e-996a-eda7827db652");
user_pref("app.update.download.attempts", 0);
user_pref("app.update.elevate.attempts", 0);
user_pref("app.update.lastUpdateTime.addon-background-update-timer", 1545920721);
user_pref("app.update.lastUpdateTime.background-update-timer", 1545920481);
user_pref("app.update.lastUpdateTime.blocklist-background-update-timer", 1545920841);
user_pref("app.update.lastUpdateTime.browser-cleanup-thumbnails", 1545921081);
user_pref("app.update.lastUpdateTime.experiments-update-timer", 1530434497);
user_pref("app.update.lastUpdateTime.recipe-client-addon-run", 1545920361);
user_pref("app.update.lastUpdateTime.search-engine-update-timer", 1545921693);
user_pref("app.update.lastUpdateTime.services-settings-poll-changes", 1545920601);
user_pref("app.update.lastUpdateTime.telemetry_modules_ping", 1545480534);
user_pref("app.update.lastUpdateTime.xpi-signature-verification", 1545920961);
user_pref("browser.bookmarks.restore_default_bookmarks", false);
user_pref("browser.cache.disk.capacity", 1048576);
user_pref("browser.cache.disk.filesystem_reported", 1);
user_pref("browser.cache.disk.smart_size.first_run", false);
user_pref("browser.ctrlTab.migrated", true);
user_pref("browser.ctrlTab.recentlyUsedOrder", false);
user_pref("browser.download.lastDir", "C:\\Users\\Administrator\\Downloads");
user_pref("browser.download.panel.shown", true);
user_pref("browser.feeds.showFirstRunUI", false);
user_pref("browser.laterrun.bookkeeping.profileCreationTime", 1527414855);
user_pref("browser.laterrun.bookkeeping.sessionCount", 20);
user_pref("browser.migration.version", 76);
user_pref("browser.newtabpage.activity-stream.impressionId", "{c2044722-fff9-42fe-8544-5362bc61ab6f}");
user_pref("browser.newtabpage.activity-stream.migrationExpired", true);
user_pref("browser.newtabpage.activity-stream.migrationLastShownDate", 1527523200);
user_pref("browser.newtabpage.activity-stream.migrationRemainingDays", 1);
user_pref("browser.newtabpage.storageVersion", 1);
user_pref("browser.pageActions.persistedActions", "{\"version\":1,\"ids\":[\"bookmark\",\"bookmarkSeparator\",\"copyURL\",\"emailLink\",\"sendToDevice\",\"addSearchEngine\",\"webcompat-reporter_mozilla_org\"],\"idsInUrlbar\":[\"bookmark\"]}");
user_pref("browser.pagethumbnails.storage_version", 3);
user_pref("browser.places.smartBookmarksVersion", 8);
user_pref("browser.rights.3.shown", true);
user_pref("browser.safebrowsing.provider.baidu.lastupdatetime", "1545920338424");
user_pref("browser.safebrowsing.provider.baidu.nextupdatetime", "1545926395424");
user_pref("browser.safebrowsing.provider.google4.lastupdatetime", "1545922880503");
user_pref("browser.safebrowsing.provider.google4.nextupdatetime", "1545924669503");
user_pref("browser.safebrowsing.provider.mozcn.lastupdatetime", "1545920339046");
user_pref("browser.safebrowsing.provider.mozcn.nextupdatetime", "1546006739046");
user_pref("browser.safebrowsing.provider.mozilla.lastupdatetime", "1545920338000");
user_pref("browser.safebrowsing.provider.mozilla.nextupdatetime", "1545923938000");
user_pref("browser.search.countryCode", "CN");
user_pref("browser.search.region", "CN");
user_pref("browser.sessionstore.upgradeBackup.latestBuildID", "20181206201918");
user_pref("browser.shell.checkDefaultBrowser", false);
user_pref("browser.shell.didSkipDefaultBrowserCheckOnFirstRun", true);
user_pref("browser.slowStartup.averageTime", 1342);
user_pref("browser.slowStartup.samples", 4);
user_pref("browser.startup.homepage_override.buildID", "20181206201918");
user_pref("browser.startup.homepage_override.mstone", "64.0");
user_pref("browser.uiCustomization.state", "{\"placements\":{\"widget-overflow-fixed-list\":[],\"PersonalToolbar\":[\"personal-bookmarks\",\"mozcn-mobile-bookmarks-button\"],\"nav-bar\":[\"back-button\",\"forward-button\",\"stop-reload-button\",\"home-button\",\"customizableui-special-spring1\",\"urlbar-container\",\"customizableui-special-spring2\",\"downloads-button\",\"library-button\",\"sidebar-button\",\"cpmanager_mozillaonline_com-browser-action\"],\"TabsToolbar\":[\"tabbrowser-tabs\",\"new-tab-button\",\"alltabs-button\"],\"toolbar-menubar\":[\"menubar-items\"]},\"seen\":[\"mozcn-mobile-bookmarks-button\",\"cpmanager_mozillaonline_com-browser-action\",\"developer-button\",\"webide-button\",\"feed-button\"],\"dirtyAreaCache\":[\"PersonalToolbar\",\"nav-bar\",\"TabsToolbar\",\"toolbar-menubar\"],\"currentVersion\":15,\"newElementCount\":2}");
user_pref("browser.urlbar.placeholderName", "百度");
user_pref("browser.urlbar.timesBeforeHidingSuggestionsHint", 0);
user_pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 2);
user_pref("datareporting.policy.dataSubmissionPolicyNotifiedTime", "1527414862503");
user_pref("devtools.debugger.ignore-caught-exceptions", false);
user_pref("devtools.debugger.pending-selected-location", "{\"sourceId\":\"server1.conn9.child1/source35\",\"sourceUrl\":null,\"url\":\"https://39.134.87.216:31943/pm/themes/default/pm/app/js/history_pm_alone.js\"}");
user_pref("devtools.debugger.prefs-schema-version", "1.0.3");
user_pref("devtools.debugger.tabs", "[{\"id\":\"server1.conn7.child1/source187\",\"url\":\"https://39.134.87.216:31943/pm/themes/default/pm/app/js/history_pm_alone.js\",\"sourceMapURL\":null,\"isBlackBoxed\":false,\"isPrettyPrinted\":false,\"isWasm\":false,\"text\":\"var scope_;\\nvar tableIdArrCache=[];\\nhistoryPmCtrl = function ($scope) {\\n    scope_=$scope;\\n\\t/********************************************************  Var NEW ADD Begin***************************************************/\\n\\t// 把国际化资源附给scope\\n\\t$scope.i18n = window.iemp.ui.pm.Utils.getI18n(\\\"history_pm\\\");\\n\\t$scope.i18n.Export = iemp.i18n.translate('com.huawei.i2000.pm.export');\\n\\t$scope.i18n.confirm = iemp.i18n.translate('i2000.pm.monitoringview.confirm.button');\\n\\t$scope.i18n.cancle = iemp.i18n.translate('i2000.pm.monitoringview.cancel.button');\\n\\t\\n\\t// 全局变量\\n\\t/**\\n\\t * 标记选择资源页面是否已经初始化了\\n\\t */\\n\\tvar isSelectResourceInit = false;\\n\\n\\t/**\\n\\t * 标记收缩面板的展开与收缩\\n\\t */\\n\\tvar isCollapsePanelOpen =  true;\\n\\t\\t\\n\\t/**\\n\\t * 传给资源选择页面的\\n\\t */\\n\\tvar tmpSelectedData;\\n\\t\\n\\t/**\\n\\t * 按设备(选择资源),资源变量\\n\\t */\\n\\tvar dn2Index = [];\\n\\n\\t/**\\n\\t * 按对象(选择资源),资源变量\\n\\t */\\n\\tvar obj2Index = [];\\n\\n\\t/**\\n\\t * 按设备(选择资源),资源变量 详细信息\\n\\t */\\n\\tvar deviceAllInfo = [];\\n\\n\\t/**\\n\\t * 表明当前选择资源页面是按设备还是按对象(另一个值:ByMeasObjectPage)\\n\\t */\\n\\tvar selectPageFlag = \\\"byDevicePage\\\";\\n\\t/******************************************************** Var NEW ADD End***************************************************/\\n\\t\\n\\t/********************************************************   iemp begin  ***************************************************/\\n\\tvar utils = window.iemp.ui.pm.Utils;\\n\\t\\n\\t// 把国际化资源附给scope\\n\\tvar historyTranslator = utils.getTranslator(\\\"history_pm\\\");\\n\\tvar pollerTranslator = utils.getTranslator(\\\"poller\\\");\\n\\tvar realtimeTranslator = utils.getTranslator(\\\"real_time_pm\\\");\\n\\t\\n\\t// 借别的模块的国际化资源\\n\\t$scope.i18n.export_label = historyTranslator(\\\"export\\\");\\n\\t$scope.i18n.by_nes_radio_label = pollerTranslator(\\\"nes_radio_label\\\");\\n\\t$scope.i18n.by_nes_label = pollerTranslator(\\\"nes_button_label\\\");\\n\\t$scope.i18n.by_objects_radio_label = pollerTranslator(\\\"objects_radio_label\\\");\\n\\t$scope.i18n.by_objects_label = pollerTranslator(\\\"objects_button_label\\\");\\n\\t$scope.i18n.index_label = realtimeTranslator(\\\"index_label\\\");\\n\\t$scope.i18n.monitorView_layout=iemp.i18n.translate('com.huawei.i2000.pm.monitorView.layout');\\n\\t$scope.i18n.curve_radio_label = iemp.i18n.translate('com.huawei.i2000.pm.layout.curve_radio_label');\\n\\t$scope.i18n.form_radio_label = iemp.i18n.translate('com.huawei.i2000.pm.layout.form_radio_label');\\n\\t$scope.i18n.both_radio_label = iemp.i18n.translate('com.huawei.i2000.pm.layout.both_radio_label');\\n\\t$scope.i18n.hisTableNoData = iemp.i18n.translate('com.huawei.i2000.pm.history.table.nodata.description');\\n\\t$scope.i18n.yAxis_isSync = iemp.i18n.translate('com.huawei.i2000.pm.monitorView.yAxis.isSync');\\n\\t$scope.i18n.counter_adjust=iemp.i18n.translate('com.huawei.i2000.pm.counter.adjust');\\n\\t\\n\\tvar validation = window.iemp.ui.pm.validation;\\n\\t\\n\\tvar dialog = $(\\\"#PM_HistoryPmWidget_Content\\\");\\n\\tvar selectViewResourceDialog = null;\\n\\t\\n\\tvar portletTitle = '';\\n\\tvar portletDesc = '';\\n\\t\\n\\t// 缓存measInfo信息\\n\\tvar measInfo_map = [];\\n\\t\\n\\t// 缓存每个图信息\\n\\tvar chartsCache = [];\\n\\t\\n\\t// 缓存去勾选图例之后的图信息\\n\\tvar chartsPartCache = [];\\n\\t\\n\\t// 缓存去勾选图例之后的图信息\\n\\tvar chart_series_map = [];\\n\\t\\n\\t// 异步加载iframe临时存数据\\n\\tvar selectedDataToFrame = null;\\n\\t\\n\\t// 异步加载iframe临时存数据\\n\\tvar needAyncFrame = false;\\n\\t\\n\\tvar objFrameAsync = '<iframe id=\\\"measObjectFrame\\\" name=\\\"measObjectFrame\\\" src=\\\"./i2000_queryHistoryData.html\\\" style=\\\"width: 100%; height: 635px;\\\" scrolling=\\\"no\\\" marginheight=\\\"0\\\" marginwidth=\\\"0\\\" frameborder=\\\"0\\\"></iframe>';\\n\\tvar devFrameAsync = '<iframe id=\\\"deviceFrame\\\" name=\\\"deviceFrame\\\" src=\\\"./i2000_queryHistoryData_Device.html\\\" style=\\\"width: 100%; height: 635px;\\\" scrolling=\\\"no\\\" marginheight=\\\"0\\\" marginwidth=\\\"0\\\" frameborder=\\\"0\\\"></iframe>';\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\n\\t/**\\n\\t * 记住TimeLine的长度(防止死循环调用resize)\\n\\t */\\n\\tvar last_TimeLine_length = 0;\\n\\t\\n\\t/**\\n\\t * 获取数据的jqXHR对象\\n\\t */\\n\\tvar jqXHR = null;\\n\\t\\n\\t/**\\n\\t * HTML模板\\n\\t */\\n\\tvar HTML_TEMPLATES = {\\n\\t\\t// 时间选项\\n\\t\\t\\\"timeRangeItem\\\" : \\\"<span style='cursor:pointer;'><a id=\\\\\\\"{{id}}\\\\\\\" name=\\\\\\\"timeRangeItem\\\\\\\" time-space=\\\\\\\"{{timeSpace}}\\\\\\\" {{#if startTime}} start-time=\\\\\\\"{{startTime}}\\\\\\\" {{/if}}  {{#if endTime}}end-time=\\\\\\\"{{endTime}}\\\\\\\" {{/if}}>{{label}}</a></span>\\\",\\n\\t\\t// slider的dom结构\\n\\t\\t\\\"sliderDom\\\" : \\\"<div><div class=\\\\\\\"slider\\\\\\\"></div></div>\\\",\\n\\t\\t// 查询扩展页签\\n\\t\\t\\\"queryExtTab\\\" : \\\"<span id=\\\\\\\"PM_HistoryPm_Span_{{id}}\\\\\\\" style=\\\\\\\"margin-right: 10px;\\\\\\\" target-panel=\\\\\\\"{{id}}Panel\\\\\\\"><input id=\\\\\\\"{{id}}\\\\\\\" type=\\\\\\\"radio\\\\\\\" name=\\\\\\\"tabTitlesRadio\\\\\\\"><label src=\\\\\\\"{{url}}\\\\\\\" for=\\\\\\\"{{id}}\\\\\\\" title=\\\\\\\"{{truncate_title name len=maxNameLen}}\\\\\\\">{{truncate_name name len=maxNameLen}}</label></span>\\\",\\n\\t\\t// 查询扩展页签面板\\n\\t\\t\\\"queryExtTabPanel\\\" : \\\"<div id=\\\\\\\"{{id}}Panel\\\\\\\" class=\\\\\\\"tab-panel\\\\\\\" style=\\\\\\\"display: none;\\\\\\\"><iframe frameborder=\\\\\\\"0\\\\\\\" style=\\\\\\\"min-height: 100px; width: 100%; border: none;\\\\\\\" src=\\\\\\\"{{url}}\\\\\\\"/></div>\\\"\\n\\t};\\n\\t\\n\\tvar CHART_TEMPLATE = ('<div class=\\\"myportlet inlineblock\\\" style=\\\"margin: 0 0 15px 0;border-radius: 3px;background-color: #fdfdfd;border: 0px solid #eee;width:100%\\\">' +\\n\\t\\t'<div class=\\\"iemp_zbox\\\" style=\\\"border: 1px solid #eee;\\\">' +\\n\\t\\t'  <div class=\\\"iemp_zbox_tit\\\" style=\\\"margin: 0 20px 0 20px;\\\">' +\\n\\t\\t'    <span class=\\\"i_portlet_drag_zone\\\" style=\\\"cursor: default;\\\">' +\\n\\t\\t'        <div class=\\\"iemp_zbox_tit_cin\\\">' +\\n\\t\\t'          <div class=\\\"iemp_zbox_tit_text\\\">' +\\n\\t\\t'            <span id=\\\"PM_HistroyPm_Span_Title\\\" class=\\\"tit_text portlet_title ellipsis\\\" style=\\\"display: inline-block; width: 99%; cursor: default;\\\">{{title}}</span>' +\\n\\t\\t'          </div>' +\\n\\t\\t'        </div>' +\\n\\t\\t'    </span>' +\\n\\t\\t'  </div>' +\\n\\t\\t'  <div class=\\\"inlineblock\\\" style=\\\"width:100%;\\\">' +\\n\\t\\t'  <div class=\\\"history_chart\\\" style=\\\"width:50%;float: left;\\\">' +\\n\\t\\t'      <div class=\\\"PM_HistoryPm_Div_ChartContainer_s eview_chart_Container\\\" style=\\\"padding: 0 5px 20px 5px;margin-left:20px;margin-right:20px;\\\"> ' +\\n\\t\\t'        <div id=\\\"PM_HistoryPm_EviewContainer_{{i}}\\\" class=\\\"pm_common_chart_container\\\"> ' +\\n\\t\\t'        </div> ' +\\n\\t\\t'      </div> ' +\\n\\t\\t'  </div>' +\\n\\t\\t'  <div class=\\\"history_box\\\" style=\\\"width:50%;float: left;\\\">' +\\n\\t\\t'      <div class=\\\"PM_HistoryPm_Div_TableContainer_s eview_chart_Container\\\" style=\\\"padding: 0 0px 20px 0px;margin-left:20px;margin-right:20px;padding-top:30px\\\"> ' +\\n\\t\\t'        <div id=\\\"PM_HistoryPm_TableContainer_{{i}}\\\" class=\\\"pm_common_chart_container\\\" ng-controller=\\\"historyPm_tableController_{{i}}\\\">' +\\n\\t\\t'        </div> ' +\\n\\t\\t'      </div> ' +\\n\\t\\t'  </div>' +\\n\\t\\t'  </div>' +\\n\\t\\t'</div>' +\\n\\t\\t'</div>'),\\n\\t\\n\\tTABLE_TEMPLATE = ('<div class=\\\"myportlet groupItem\\\">' +\\n\\t\\t'<div class=\\\"iemp_zbox\\\">' +\\n\\t\\t'  <div class=\\\"iemp_zbox_tit\\\">' +\\n\\t\\t'    <span class=\\\"i_portlet_drag_zone\\\" style=\\\"cursor: default;\\\">' +\\n\\t\\t'        <div class=\\\"iemp_zbox_tit_cin\\\">' +\\n\\t\\t'          <div class=\\\"iemp_zbox_tit_text\\\">' +\\n\\t\\t'            <span id=\\\"PM_HistroyPm_Span_Title1\\\" class=\\\"tit_text portlet_title ellipsis\\\" title=\\\"{{title}}\\\" style=\\\"display: inline-block; width: 99%; cursor: default;\\\">{{title}}</span>' +\\n\\t\\t'          </div>' +\\n\\t\\t'        </div>' +\\n\\t\\t'    </span>' +\\n\\t\\t'  </div>' +\\n\\t\\t'  <div class=\\\"portlet_content\\\">' +\\n\\t\\t'      <div id=\\\"PM_HistoryPm_Div_TableContainer_{{i}}\\\" class=\\\"eview_chart_Container\\\"> ' +\\n\\t\\t'        <div id=\\\"PM_HistoryPm_TableContainer_{{i}}\\\" ng-controller=\\\"historyPm_tableController_{{i}}\\\">' +\\n\\t\\t'        </div> ' +\\n\\t\\t'      </div> ' +\\n\\t\\t'  </div>' +\\n\\t\\t'</div>' +\\n\\t\\t'</div>');\\n\\t\\n\\t/**\\n\\t * 要操作的DOM对象的集合\\n\\t */\\n\\tvar DOMS = {\\n\\t\\t// 右侧图的容器\\n\\t\\t\\\"containerCharts\\\" : $(\\\"#containerCharts\\\"),\\n\\t\\t// 对象输入框\\n\\t\\t\\\"textMos\\\" : $(\\\"#textMos\\\"),\\n\\t\\t// 时间范围选择容器\\n\\t\\t\\\"containerTimeRange\\\" : $(\\\"#timeRangeContainer\\\"),\\n\\t\\t// 欢迎面板\\n\\t\\t\\\"panelWelcome\\\" : $(\\\"#welcomeInfoDiv\\\"),\\n\\t\\t// 加载中面板\\n\\t\\t\\\"panelLoading\\\" : $(\\\"#loadingContainerDiv\\\"),\\n\\t\\t// 木有数据面板\\n\\t\\t\\\"panelNoData\\\" : $(\\\"#noDataContainerDiv\\\"),\\n\\t\\t// 错误面板\\n\\t\\t\\\"panelError\\\" : $(\\\"#errorContainerDiv\\\"),\\n\\t\\t// 全局的时间拖动条容器\\n\\t\\t\\\"containerGlobalChartSlider\\\" : $(\\\"#timeSlider\\\"),\\n\\t\\t// 产品扩展查询条件的tab标签容器\\n\\t\\t\\\"containerTabs\\\" : $(\\\"#tabTitiles\\\"),\\n\\t\\t// 产品扩展查询条件的tab面板容器\\n\\t\\t\\\"containerTabPanels\\\" : $(\\\"#tabPanels\\\"),\\n\\t\\t// 分页器\\n\\t\\t\\\"paginator\\\" : $(\\\"#pm_historypm_div_paginator\\\"),\\n\\t\\t\\n\\t\\t//产品扩展面板\\n\\t\\t\\\"extendIFrame\\\" : $(\\\"#extIFrame\\\")\\n\\t\\t\\n\\t},\\n\\t\\n\\t/**\\n\\t * 网元级对象最大选择个数\\n\\t */\\n\\tMAX_SELECT_LENGTH = 6,\\n\\t\\n\\t/**\\n\\t * 数组的分隔字符，这个以后要做到前后台统一\\n\\t */\\n\\tARR_SAPERATOR = \\\",\\\",\\n\\t\\n\\t/**\\n\\t * y轴个数\\n\\t */\\n\\tGROUP_COUNT = 2,\\n\\t\\n\\t/**\\n\\t * 图的容器的id的前缀\\n\\t */\\n\\tCHART_ID_PREFIX = \\\"iemp_real_time_pm_chart_\\\",\\n\\t\\n\\t/**\\n\\t * 画图实现的名称\\n\\t */\\n\\tCHART_IMPL_NAME = \\\"SimpleChartJqplotImpl\\\",\\n\\t\\n\\t/**\\n\\t * 指标选择最大个数\\n\\t */\\n\\tMAX_SELECT_MEASTYPE_LENGTH = 10,\\n\\t\\n\\t/**\\n\\t * 时间常量\\n\\t */\\n\\tTIME_SPACE = {\\n\\t\\t\\\"LAST_ONE_HOUR\\\" : 1,\\n\\t\\t\\\"LAST_THREE_HOURS\\\" : 3,\\n\\t\\t\\\"LAST_SIX_HOURS\\\" : 6,\\n\\t\\t\\\"LAST_TWELVE_HOURS\\\" : 12,\\n\\t\\t\\\"LAST_ONE_DAY\\\" : 24,\\n\\t\\t\\\"LAST_THREE_DAY\\\" : 24 * 3,\\n\\t\\t\\\"LAST_ONE_WEEK\\\" : 24 * 7,\\n\\t\\t\\\"DAYS_OF_ONE_MONTH\\\" : 24 * 30, // just a flag, to mark the last XXX month\\n\\t\\t\\\"CUSTOMIZE\\\" : 0\\n\\t},\\n\\t\\n\\t/**\\n\\t * 时间线拖动的step\\n\\t */\\n\\tTIME_LINE_STEP_INTERVAL = 7200,\\n\\t\\n\\t/******* 常量定义结束 **********/\\n\\t\\n\\t/******* 辅助函数定义开始，以后这些函数要考虑移动到工具类里面去 **********/\\n\\t\\n\\t/**\\n\\t * 导入的工具类\\n\\t */\\n\\trender = window.iemp.ui.pm.Utils.render,\\n\\t\\n\\ttimeRangeItemObj = window.iemp.ui.pm.Utils.compile(HTML_TEMPLATES.timeRangeItem),\\n\\t/**\\n\\t * 获取时间范围选项(initTimeRange调用)\\n\\t */\\n\\tgetTimeRangeItemDom = function (index, timeRange) {\\n\\t\\tvar result;\\n\\t\\t\\n\\t\\tif (timeRange.startTime && timeRange.endTime) {\\n\\t\\t\\tresult = $(timeRangeItemObj({\\n\\t\\t\\t\\t\\t\\t\\\"id\\\" : \\\"timerange_\\\" + index,\\n\\t\\t\\t\\t\\t\\t\\\"timeSpace\\\" : timeRange.timeSpace,\\n\\t\\t\\t\\t\\t\\t\\\"startTime\\\" : timeRange.startTime,\\n\\t\\t\\t\\t\\t\\t\\\"endTime\\\" : timeRange.endTime,\\n\\t\\t\\t\\t\\t\\t\\\"label\\\" : timeRange.name\\n\\t\\t\\t\\t\\t}));\\n\\t\\t} else {\\n\\t\\t\\tresult = $(timeRangeItemObj({\\n\\t\\t\\t\\t\\t\\t\\\"id\\\" : \\\"timerange_\\\" + index,\\n\\t\\t\\t\\t\\t\\t\\\"timeSpace\\\" : timeRange.timeSpace,\\n\\t\\t\\t\\t\\t\\t\\\"label\\\" : timeRange.name\\n\\t\\t\\t\\t\\t}));\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn result;\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取slider的Dom结构(无调用)\\n\\t */\\n\\tgetSliderDom = function () {\\n\\t\\treturn $(render(HTML_TEMPLATES.sliderDom));\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取查询扩展页签的DOM结构(initQueryTabs)\\n\\t */\\n\\tgetQueryExtTabDom = function (id, name, src, maxNameLen) {\\n\\t\\treturn $(render(HTML_TEMPLATES.queryExtTab, {\\n\\t\\t\\t\\t\\\"id\\\" : id,\\n\\t\\t\\t\\t\\\"name\\\" : name,\\n\\t\\t\\t\\t\\\"url\\\" : src,\\n\\t\\t\\t\\t\\\"maxNameLen\\\" : maxNameLen\\n\\t\\t\\t}));\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取查询扩展面板的DOM结构(无调用)\\n\\t */\\n\\tgetQueryExtTabPanelDom = function (id, url) {\\n\\t\\treturn $(render(HTML_TEMPLATES.queryExtTabPanel, {\\n\\t\\t\\t\\t\\\"id\\\" : id,\\n\\t\\t\\t\\t\\\"url\\\" : url\\n\\t\\t\\t}));\\n\\t},\\n\\t\\n\\t/**\\n\\t * 事件注册方法\\n\\t */\\n\\tsetEventsHandlers = function (container, events) {\\n\\t\\t// 事件类型\\n\\t\\tvar eventType = \\\"\\\",\\n\\t\\t// 子元素的选择器\\n\\t\\tsubSelector = \\\"\\\",\\n\\t\\t// 获取事件类型与子元素的选择器的正则表达式\\n\\t\\tregExp = /(\\\\S+)\\\\s+(.+)/,\\n\\t\\t// 正则表达式匹配结果\\n\\t\\tresult = null,\\n\\t\\t// 遍历的key\\n\\t\\tkey = \\\"\\\",\\n\\t\\t// 该事件的事件处理程序\\n\\t\\thandler = null;\\n\\t\\t\\n\\t\\t// 把事件都委托到container中去\\n\\t\\t// 遍历events\\n\\t\\tfor (key in events) {\\n\\t\\t\\t// 匹配正则表达式\\n\\t\\t\\tresult = regExp.exec(key);\\n\\t\\t\\tif (result) {\\n\\t\\t\\t\\t// 匹配，第一个分组就是事件类型\\n\\t\\t\\t\\teventType = result[1];\\n\\t\\t\\t\\t// 第二个分组就是子元素的选择器\\n\\t\\t\\t\\tsubSelector = result[2];\\n\\t\\t\\t\\t// 值就是事件处理程序\\n\\t\\t\\t\\thandler = events[key];\\n\\t\\t\\t\\t// 注册事件处理程序\\n\\t\\t\\t\\t$(container).on(eventType, subSelector, handler);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * 格式化日期(已被formatDate2替换)\\n\\t */\\n\\tformatDate = function (date, formatter) {\\n\\t\\tvar years = date.getFullYear(),\\n\\t\\tmonth = date.getMonth() + 1,\\n\\t\\tday = date.getDate(),\\n\\t\\thours = date.getHours(),\\n\\t\\tminutes = date.getMinutes();\\n\\t\\t\\n\\t\\treturn years + \\\"-\\\" +\\n\\t\\t((month < 10) ? \\\"0\\\" + month : month) + \\\"-\\\" +\\n\\t\\t((day < 10) ? \\\"0\\\" + day : day) + \\\" \\\" +\\n\\t\\t((hours < 10) ? \\\"0\\\" + hours : hours) + \\\":\\\" +\\n\\t\\t((minutes < 10) ? \\\"0\\\" + minutes : minutes);\\n\\t},\\n\\t\\n\\t// updateHistoryTimeData调用\\n\\tformatDate2 = function (date, isDst) {\\n\\t\\tvar years = date.getFullYear();\\n\\t\\tvar month = date.getMonth();\\n\\t\\tvar day = date.getDate();\\n\\t\\tvar hours = date.getHours();\\n\\t\\tvar minutes = date.getMinutes();\\n\\t\\tvar seconds = date.getSeconds();\\n\\t\\t\\n\\t\\treturn years + \\\"-\\\" + month + '-' + day + '-' +\\n\\t\\thours + '-' + minutes + '-' + seconds + '-' + String(isDst) + '-' + globalDstOffset;\\n\\t},\\n\\t\\n\\t/**\\n\\t * 查询参数 - mos，对象\\n\\t */\\n\\tmos = [],\\n\\t\\n\\t/**\\n\\t * 查询参数 - meastypes，指标集合\\n\\t */\\n\\tmeasTypes = [],\\n\\t\\n\\t/**\\n\\t * 按查询按钮之前的对象查询参数\\n\\t */\\n\\ttempMos = [],\\n\\t\\n\\t/**\\n\\t * 按查询按钮之前的测量对象查询参数\\n\\t */\\n\\ttempCollectObjects = [],\\n\\t\\n\\t/**\\n\\t * 按查询按钮之前的指标查询参数\\n\\t */\\n\\ttempMeasTypes = [],\\n\\t\\n\\t/**\\n\\t * 开始时间\\n\\t */\\n\\tbeginTime = 0,\\n\\t\\n\\t/**\\n\\t * 结束时间\\n\\t */\\n\\tendTime = 0,\\n\\t\\n\\t// 时区\\n\\tzoneOffset = 0,\\n\\t//用来记录懒加载的时候所需要初始化时间控件的timezone\\n\\tinitTimeZone = null,\\n\\t// 夏令时\\n\\tdstOffSet = 0,\\n\\t// utc时间\\n\\tutcTime = 0,\\n\\t\\n\\tglobalDstOffset = 3600000,\\n\\t\\n\\t/**\\n\\t * timeSpace\\n\\t */\\n\\ttimeSpace = TIME_SPACE.CUSTOMIZE,\\n\\t\\n\\t/**\\n\\t * the selected time range item\\n\\t */\\n\\tselectedTimeRangeItem,\\n\\t\\n\\t/**\\n\\t * 记录每个图的信息，其中每项的具体信息为：\\n\\t * jqplotObj，记录这个图的jqplot对象\\n\\t * mos，记录这个图的对象查询参数\\n\\t * measTypes，记录这个图的指标查询参数，图中的线的索引与这个数组的索引保持一致\\n\\t */\\n\\tcharts = [],\\n\\t\\n\\t/**\\n\\t * 资源类型\\n\\t */\\n\\tresourceType = \\\"\\\";\\n\\t\\n\\t/**\\n\\t * 产品扩展的URL\\n\\t */\\n\\tvar objectSelectPageUrl = \\\"\\\";\\n\\t\\n\\t/**\\n\\t * 信息提示框，统一用于错误与消息提示\\n\\t */\\n\\tvar msgBox = null,\\n\\t\\n\\t/**\\n\\t * 时间范围\\n\\t */\\n\\ttimeRanges = [],\\n\\t\\n\\t/**\\n\\t * 全局的时间拖动条\\n\\t */\\n\\tglobalChartSlider = null,\\n\\t\\n\\t/**\\n\\t * 当前查询条件的缓存\\n\\t */\\n\\tlatestQueryCondition = null,\\n\\t\\n\\t/**\\n\\t * 查询时间范围的缓存\\n\\t */\\n\\tqueryTimeRange = null,\\n\\t\\n\\t/**\\n\\t * 分页器\\n\\t */\\n\\tpaginator = null,\\n\\t\\n\\t/**\\n\\t * 当前页码\\n\\t */\\n\\tpageIndex = 1,\\n\\t\\n\\t/**\\n\\t * 当前是否空图状态\\n\\t */\\n\\tisEmptyChart = false,\\n\\t\\n\\t/**\\n\\t * 是否显示选择测量对象面板\\n\\t */\\n\\tisShowCollectObjectsPanel = false,\\n\\t\\n\\t/**\\n\\t * 是否显示分页器\\n\\t */\\n\\tisShowPaginator = false,\\n\\t\\n\\t/**\\n\\t * 是否禁止最近一天、最近一个月等搜索\\n\\t */\\n\\tisDisabledTimeRangeSearch = false;\\n\\t\\n\\t/**\\n\\t * initStatus第一分支变量\\n\\t */\\n\\tmoIndexs = null,\\n\\t\\n\\t/**\\n\\t * 获取指标id集合(queryHistoryTimeData的latestQueryCondition.indexIds)\\n\\t */\\n\\tgetMeasTypeIds = function () {\\n\\t\\treturn $.map(measTypes, function (el) {\\n\\t\\t\\treturn el.id;\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取临时指标id集合(两种选择资源dialog的index参数)\\n\\t */\\n\\tgetTempMeasTypeIds = function () {\\n\\t\\treturn $.map(tempMeasTypes, function (el) {\\n\\t\\t\\treturn el.id;\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 显示加载中的对话框(无调用)\\n\\t */\\n\\tshowLoading = function () {\\n\\t\\twindow.iemp.ui.pm.msgbox.alert($scope.i18n.loading_label);\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置指标(已选框)\\n\\t */\\n\\tsetMeasTypes = function () {\\n\\t\\tvar measTypeNames = $.map(tempMeasTypes, function (el) {\\n\\t\\t\\t\\treturn el.name;\\n\\t\\t\\t});\\n\\t\\t// 设置输入框的内容\\n\\t},\\n\\t\\n\\tgetServerTime = function (time, offset, dOffset) {\\n\\t\\treturn time + offset + dOffset - ( - (new Date()).getTimezoneOffset() * 60 * 1000);\\n\\t},\\n\\t\\n\\t//把从timeline获取到的时间转成真正的后台时间\\n\\tgetClientTime = function (time, offset, dOffset) {\\n\\t\\treturn time - offset - dOffset + ( - (new Date()).getTimezoneOffset() * 60 * 1000);\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取最近半年内每月的时间范围选项(getTimeRanges调用)\\n\\t */\\n\\tgetLastSixMonth = function (index, time) {\\n\\t\\t// 当前时间\\n\\t\\tvar current = new Date(getServerTime(time.utcTime, time.zoneOffSet, time.dstOffSet)),\\n\\t\\t__ = iemp.i18n.translate,\\n\\t\\t\\n\\t\\t// 开始时间\\n\\t\\tstart = new Date(),\\n\\t\\tend = new Date(),\\n\\t\\tyear,\\n\\t\\tmonth;\\n\\t\\t\\n\\t\\t// 设置开始时间\\n\\t\\tstart.setFullYear(current.getFullYear());\\n\\t\\tstart.setDate(1);\\n\\t\\tstart.setHours(0);\\n\\t\\tstart.setMinutes(0);\\n\\t\\tstart.setSeconds(0);\\n\\t\\tstart.setMilliseconds(0);\\n\\t\\tstart.setMonth(current.getMonth() - index);\\n\\t\\t\\n\\t\\tyear = start.getFullYear();\\n\\t\\tmonth = start.getMonth();\\n\\t\\t\\n\\t\\treturn {\\n\\t\\t\\t\\\"timeSpace\\\" : TIME_SPACE.DAYS_OF_ONE_MONTH * (index + 1),\\n\\t\\t\\t\\\"startTime\\\" : Date.UTC(year, month),\\n\\t\\t\\t\\\"endTime\\\" : Date.UTC(year, month + 1),\\n\\t\\t\\t\\\"name\\\" : __(\\\"com.huawei.oms.pm.history_pm.sixmonth_label\\\", year, month + 1)\\n\\t\\t};\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取时间范围参数\\n\\t */\\n\\tgetTimeRanges = function (time, callback) {\\n\\t\\ttimeRanges = [];\\n\\t\\t// 遍历次数\\n\\t\\tvar monthLength = 6;\\n\\t\\t\\n        if (!isHistoryQueryTimeIntervalEnable()) {\\n            // 最近一小时\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_ONE_HOUR,\\n                \\\"name\\\" : $scope.i18n.time_last_one_hour\\n            });\\n            \\n            // 最近三小时\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_THREE_HOURS,\\n                \\\"name\\\" : $scope.i18n.time_last_three_hours\\n            });\\n            \\n            // 最近六小时\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_SIX_HOURS,\\n                \\\"name\\\" : $scope.i18n.time_last_six_hours\\n            });\\n            \\n            // 最近十二小时\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_TWELVE_HOURS,\\n                \\\"name\\\" : $scope.i18n.time_last_twelve_hours\\n            });\\n            \\n            // 最近一天\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_ONE_DAY,\\n                \\\"name\\\" : $scope.i18n.time_last_one_day\\n            });\\n            \\n            // 最近三天\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_THREE_DAY,\\n                \\\"name\\\" : $scope.i18n.time_last_three_day\\n            });\\n            \\n            // 最近一周\\n            timeRanges.push({\\n                \\\"timeSpace\\\" : TIME_SPACE.LAST_ONE_WEEK,\\n                \\\"name\\\" : $scope.i18n.time_last_one_week\\n            });\\n        }\\n\\t\\t\\n\\t\\twindow.iemp.ui.pm.resource.HistorySupportCustomTimeRangeRes.get({\\n\\t\\t\\t\\\"param\\\" : \\\"{}\\\"\\n\\t\\t}, function (result) {\\n\\t\\t\\tif (result && result.isSupportCustomTimeRange) {\\n\\t\\t\\t\\ttimeRanges.push({\\n\\t\\t\\t\\t\\t\\\"timeSpace\\\" : TIME_SPACE.CUSTOMIZE,\\n\\t\\t\\t\\t\\t\\\"name\\\" : $scope.i18n.time_custom_range\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t// 设置时区\\n\\t\\t\\t\\tsetTimezone(time);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tcallback(timeRanges);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// 半年内每月\\n\\t\\t\\t\\tfor (var i = 0; i < monthLength; i++) {\\n\\t\\t\\t\\t\\ttimeRanges.push(getLastSixMonth(i, time));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcallback(timeRanges);\\n\\t\\t\\t}\\n\\t\\t}, function () {\\n\\t\\t\\t// 半年内每月\\n\\t\\t\\tfor (var i = 0; i < monthLength; i++) {\\n\\t\\t\\t\\ttimeRanges.push(getLastSixMonth(i, time));\\n\\t\\t\\t}\\n\\t\\t\\tcallback(timeRanges);\\n\\t\\t});\\n\\t},\\n\\t\\n\\t// 设置时区\\n\\tsetTimezone = function (time) {\\n\\t\\tvar mOffset = time.zoneOffSet / (1000 * 60);\\n\\t\\tvar hZone = Math.abs(parseInt(mOffset / 60, 10)) < 10 ? \\\"0\\\" + Math.abs(parseInt(mOffset / 60, 10)) : Math.abs(parseInt(mOffset / 60, 10));\\n\\t\\tvar mZone = Math.abs((mOffset % 60)) < 10 ? \\\"0\\\" + Math.abs((mOffset % 60)) : Math.abs((mOffset % 60));\\n\\t\\tvar zone = \\\"UTC\\\" + (time.zoneOffSet >= 0 ? \\\"+\\\" : \\\"-\\\") + hZone + \\\":\\\" + mZone;\\n\\t\\tif ($scope.cusStartTime && $scope.cusEndTime) {\\n\\t\\t\\t$scope.cusStartTime.attr(\\\"timezone\\\", zone);\\n\\t\\t\\t$scope.cusEndTime.attr(\\\"timezone\\\", zone);\\n\\t\\t}\\n\\t},\\n\\t\\n\\t// 时区(main)\\n\\tgetTimezone = function (time) {\\n\\t\\tvar mOffset = time.zoneOffSet / (1000 * 60);\\n\\t\\tvar hZone = Math.abs(parseInt(mOffset / 60, 10)) < 10 ? \\\"0\\\" + Math.abs(parseInt(mOffset / 60, 10)) : Math.abs(parseInt(mOffset / 60, 10));\\n\\t\\tvar mZone = Math.abs((mOffset % 60)) < 10 ? \\\"0\\\" + Math.abs((mOffset % 60)) : Math.abs((mOffset % 60));\\n\\t\\tvar zone = \\\"UTC\\\" + (time.zoneOffSet >= 0 ? \\\"+\\\" : \\\"-\\\") + hZone + \\\":\\\" + mZone;\\n\\t\\treturn zone;\\n\\t}\\n\\t\\n\\t/**\\n\\t * 初始化时间范围(仅在main方法调用)\\n\\t */\\n\\tinitTimeRange = function (callback) {\\n\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\tparam : JSON.stringify({\\n\\t\\t\\t\\ta : 'b'\\n\\t\\t\\t})\\n\\t\\t}, function (time) {\\n\\t\\t\\tzoneOffset = time.zoneOffSet;\\n\\t\\t\\tdstOffSet = time.dstOffSet;\\n\\t\\t\\t\\n\\t\\t\\tinitTimeZone = time;\\n\\t\\t\\t\\n\\t\\t\\tgetTimeRanges(time, function (ranges) {\\n\\t\\t\\t\\t// 获取时间范围参数\\n\\t\\t\\t\\tvar timeRanges = ranges;\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 清空原来的时间范围容器\\n\\t\\t\\t\\tDOMS.containerTimeRange.empty();\\n\\t\\t\\t\\t// 按照时间范围参数填充时间范围选择容器\\n\\t\\t\\t\\t$.each(timeRanges, function (index, timeRange) {\\n\\t\\t\\t\\t\\tvar item = getTimeRangeItemDom(index, timeRange);\\n\\t\\t\\t\\t\\t// 默认选中第一项\\n\\t\\t\\t\\t\\tif (0 === index) {\\n\\t\\t\\t\\t\\t\\titem.find(\\\"a\\\").addClass(\\\"a4\\\");\\n\\t\\t\\t\\t\\t\\t// TODO\\n\\t\\t\\t\\t\\t\\titem.removeClass(\\\"pl20\\\");\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tDOMS.containerTimeRange.append(item);\\n\\t\\t\\t\\t});\\n                \\n                if (isHistoryQueryTimeIntervalEnable()) {\\n                    timeSpace = TIME_SPACE.CUSTOMIZE;\\n                } else {\\n                    timeSpace = TIME_SPACE.LAST_ONE_HOUR;\\n                }\\n\\n\\t\\t\\t\\tif ($.isFunction(callback)) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t});\\n\\t\\t\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置对象(这个是text框显示已选的,后面应该不用了)\\n\\t */\\n\\tsetMos = function () {\\n\\t\\t// 设置输入框的内容\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置搜索按钮是否可用\\n\\t */\\n\\tsetBtnSearchDisabled = function (disabled) {\\n\\t\\t$scope.btnSearch.attr(\\\"disable\\\", disabled, true);\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置搜索按钮是否可用\\n\\t */\\n\\tsetBtnSettingDisabled = function (disabled) {\\n\\t\\t$scope.btnSetting.attr(\\\"disable\\\", disabled, true);\\n\\t},\\t\\n\\t\\t\\n\\t/**\\n\\t * 设置时间范围按钮是否可用\\n\\t */\\n\\tsetBtnTimeRangeDisabled = function (disabled) {\\n\\t\\tif (disabled) {\\n\\t\\t\\t// 删除事件响应\\n\\t\\t\\tisDisabledTimeRangeSearch = true;\\n\\t\\t} else {\\n\\t\\t\\t// 添加事件响应\\n\\t\\t\\tisDisabledTimeRangeSearch = false;\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置导出按钮是否可用\\n\\t */\\n\\tsetBtnExportDisabled = function (disabled) {\\n\\t\\t$scope.btnExportData.attr(\\\"disable\\\", disabled, true);\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置另存为portlet按钮是否可用\\n\\t */\\n\\tsetBtnShowSavePortletDialogDisabled = function (disabled) {\\n\\t\\tqueryTimeRange = getTimeRangeArr();\\n\\t\\tif (!$.isNumeric(queryTimeRange) || parseInt(queryTimeRange, 10) > TIME_SPACE.LAST_ONE_WEEK || parseInt(queryTimeRange, 10) == TIME_SPACE.CUSTOMIZE) {\\n\\t\\t\\tdisabled = true;\\n\\t\\t}\\n\\t\\t\\n\\t\\t$scope.btnShowSavePortletDialog.attr(\\\"disable\\\", disabled, true);\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置选择对象按钮是否可用\\n\\t */\\n\\tsetBtnShowObjectsDialogDisabled = function (disabled) {\\n\\t\\t\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置选择对象按钮是否可用\\n\\t */\\n\\tsetBtnShowCollectObjectsDialogDisabled = function (disabled) {\\n\\t\\t\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取默认的portlet标题(仅在showSavePortletDialog调用)\\n\\t */\\n\\tgetDefaultPortletTitle = function () {\\n\\t\\tvar title = \\\"\\\",\\n\\t\\tchart = charts[0],\\n\\t\\tindexNames = [],\\n\\t\\tmoNames = [],\\n\\t\\tgrepedIndexNames = [],\\n\\t\\tgrepedMoNames = [];\\n\\t\\t\\n\\t\\t$.each(chart.seriesList.series, function (index, serie) {\\n\\t\\t\\tindexNames.push(serie.indexName);\\n\\t\\t\\tmoNames.push(serie.moName);\\n\\t\\t}),\\n\\t\\t\\n\\t\\t// 过滤掉重复的指标名称\\n\\t\\t$.each(indexNames, function (index, name) {\\n\\t\\t\\tif ($.inArray(name, grepedIndexNames) < 0) {\\n\\t\\t\\t\\tgrepedIndexNames.push(name);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t$.each(moNames, function (index, name) {\\n\\t\\t\\tif ($.inArray(name, grepedMoNames) < 0) {\\n\\t\\t\\t\\tgrepedMoNames.push(name);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\treturn grepedMoNames.join(\\\", \\\") + \\\" \\\" + grepedIndexNames.join(\\\", \\\");\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取选中的时间范围常量\\n\\t */\\n\\tgetTimeRangeArr = function () {\\n\\t\\treturn parseInt(DOMS.containerTimeRange.find(\\\"a.a4[name='timeRangeItem']\\\").attr(\\\"time-space\\\"), 10);\\n\\t},\\n\\t\\n\\t/**\\n\\t * get timerange item's start-time attribute(1处:queryHistoryTimeData的latestQueryCondition.beginTime),这个是自定义时间的\\n\\t */\\n\\tgetTimeRangeStartTimeArr = function () {\\n\\t\\treturn parseInt(DOMS.containerTimeRange.find(\\\"a.a4[name='timeRangeItem']\\\").attr(\\\"start-time\\\"), 10);\\n\\t},\\n\\t\\n\\t/**\\n\\t * get timerange item's end-time attribute(1处:queryHistoryTimeData的latestQueryCondition.endTime),这个是自定义时间的\\n\\t */\\n\\tgetTimeRangeEndTimeArr = function () {\\n\\t\\treturn parseInt(DOMS.containerTimeRange.find(\\\"a.a4[name='timeRangeItem']\\\").attr(\\\"end-time\\\"), 10);\\n\\t},\\n\\t\\n\\t// 只在新的showSavePortletDialog调用\\n\\tgetChartMoIndexs = function (chart) {\\n\\t\\tvar tmoIndexs = [];\\n\\t\\t$.each(chart.seriesList.series, function (index, serie) {\\n\\t\\t\\ttmoIndexs.push({\\n\\t\\t\\t\\t\\\"dn\\\" : serie.dn,\\n\\t\\t\\t\\t\\\"displayValue\\\" : serie.displayValue,\\n\\t\\t\\t\\t\\\"indexId\\\" : serie.indexId\\n\\t\\t\\t});\\n\\t\\t});\\n\\t\\t\\n\\t\\treturn tmoIndexs;\\n\\t},\\n\\t\\n\\t// 只在showSavePortletDialogOld调用(已不用)\\n\\tgetChartMos = function (chart) {\\n\\t\\tvar mos = [];\\n\\t\\t\\n\\t\\t$.each(chart.seriesList.series, function (index, serie) {\\n\\t\\t\\tvar exist = false;\\n\\t\\t\\t\\n\\t\\t\\t$.each(mos, function (moIndex, mo) {\\n\\t\\t\\t\\tif (serie.displayValue) {\\n\\t\\t\\t\\t\\tif (mo.dn === serie.dn && mo.displayValue === serie.displayValue) {\\n\\t\\t\\t\\t\\t\\texist = true;\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif (mo.dn === serie.dn) {\\n\\t\\t\\t\\t\\t\\texist = true;\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\tif (!exist) {\\n\\t\\t\\t\\tmos.push({\\n\\t\\t\\t\\t\\t\\\"dn\\\" : serie.dn,\\n\\t\\t\\t\\t\\t\\\"displayValue\\\" : serie.displayValue\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t});\\n\\t\\t\\n\\t\\treturn mos;\\n\\t},\\n\\t\\n\\t// 只在showSavePortletDialogOld调用(已不用)\\n\\tgetChartMeasTypes = function (chart) {\\n\\t\\tvar tmeasTypes = [];\\n\\t\\t\\n\\t\\t$.each(chart.seriesList.series, function (index, serie) {\\n\\t\\t\\tvar exist = false;\\n\\t\\t\\t\\n\\t\\t\\t$.each(measTypes, function (measTypeIndex, measType) {\\n\\t\\t\\t\\tif (measType.id === serie.indexId) {\\n\\t\\t\\t\\t\\texist = true;\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\tif (!exist) {\\n\\t\\t\\t\\ttmeasTypes.push({\\n\\t\\t\\t\\t\\t\\\"id\\\" : serie.indexId\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\treturn measTypes;\\n\\t},\\n\\t\\n\\t/**\\n\\t * 打开另存为porltet对话框(老的,已无地方调用)\\n\\t */\\n\\tshowSavePortletDialogOld = function () {\\n\\t\\tvar startTime = $scope.cusStartTime ? $scope.cusStartTime.getUTCDateTime() : new Date().valueOf();\\n\\t\\tvar endTime = $scope.cusEndTime ? $scope.cusEndTime.getUTCDateTime() : new Date().valueOf();\\n\\t\\t\\n\\t\\tif ($.isFunction(window.iemp.ui.pm.history.Util.showSavePortletDialog)) {\\n\\t\\t\\twindow.iemp.ui.pm.history.Util.showSavePortletDialog({\\n\\t\\t\\t\\t\\\"title\\\" : getDefaultPortletTitle(),\\n\\t\\t\\t\\t\\\"mos\\\" : getChartMos(charts[0]),\\n\\t\\t\\t\\t\\\"measTypes\\\" : getChartMeasTypes(charts[0]),\\n\\t\\t\\t\\t\\\"timeRange\\\" : getTimeRangeArr(),\\n\\t\\t\\t\\t\\\"startTime\\\" : startTime,\\n\\t\\t\\t\\t\\\"endTime\\\" : endTime,\\n\\t\\t\\t\\t\\\"queryType\\\" : $scope.pm_history_input_byNes.attr(\\\"checked\\\") ? \\\"ne\\\" : \\\"object\\\"\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * 打开另存为porltet对话框\\n\\t */\\n\\tshowSavePortletDialog = function () {\\n\\t\\tvar startTime = $scope.cusStartTime ? $scope.cusStartTime.getUTCDateTime() : new Date().valueOf();\\n\\t\\tvar endTime = $scope.cusEndTime ? $scope.cusEndTime.getUTCDateTime() : new Date().valueOf();\\n\\t\\tvar options = {\\n\\t\\t\\tparams : {\\n\\t\\t\\t\\t\\\"title\\\" : getDefaultPortletTitle(),\\n\\t\\t\\t\\t\\\"moIndexs\\\" : getChartMoIndexs(charts[0]),\\n\\t\\t\\t\\t\\\"timeRange\\\" : getTimeRangeArr(),\\n\\t\\t\\t\\t\\\"startTime\\\" : startTime,\\n\\t\\t\\t\\t\\\"endTime\\\" : endTime,\\n\\t\\t\\t\\t\\\"queryType\\\" : (selectPageFlag == \\\"byDevicePage\\\") ? \\\"ne\\\" : \\\"object\\\"\\n\\t\\t\\t},\\n\\t\\t\\tevents : {\\n\\t\\t\\t\\tok : function (data) {\\n\\t\\t\\t\\t\\twindow.iemp.ui.pm.msgbox.success($scope.i18n.save_porlet_success_content);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\t\\n\\t\\tsavePortletDialog = new window.iemp.ui.pm.common.SavePortletDialog(options);\\n\\t\\t\\n\\t\\tsavePortletDialog.show();\\n\\t},\\n\\t\\t\\n\\t/**\\n\\t * 获取对象查询条件(queryHistoryTimeData调用,返回值用于latestQueryCondition.mos)\\n\\t */\\n\\tgetMos = function () {\\n\\t\\tvar result = [];\\n\\t\\t\\n\\t\\tvar currentMos = [];\\n\\t\\t\\n\\t\\t// 这个地方要继续改\\n\\t\\tif(tempMos && tempMos.length !== 0)\\n\\t\\t{\\n\\t\\t\\tcurrentMos = tempMos;\\n\\t\\t}\\n\\t\\telse if(tempCollectObjects&& tempCollectObjects.length !== 0)\\n\\t\\t{\\n\\t\\t\\tcurrentMos = tempCollectObjects;\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tcurrentMos = mos;\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 遍历每个mos对象\\n\\t\\tresult = $.map(currentMos, function (el) {\\n\\t\\t\\t\\tif (el.oid || el.objectId) {\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t// dn\\n\\t\\t\\t\\t\\t\\t\\\"dn\\\" : el.dn,\\n\\t\\t\\t\\t\\t\\t// 测量对象的displayvalue\\n\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : el.displayValue ? el.displayValue : undefined,\\n\\t\\t\\t\\t\\t\\t\\\"oid\\\" : el.oid ? parseInt(el.oid) : parseInt(el.objectId)\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t// dn\\n\\t\\t\\t\\t\\t\\t\\\"dn\\\" : el.dn,\\n\\t\\t\\t\\t\\t\\t// 测量对象的displayvalue\\n\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : el.displayValue ? el.displayValue : undefined\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\treturn result;\\n\\t},\\n\\t\\n\\t/**\\n\\t * 回收垃圾\\n\\t */\\t\\n\\t collectGarbageUtil = function(el){\\n\\t\\tif(el && el.parentNode)\\n\\t \\t{\\n\\t\\t\\tel.parentNode.removeChild(el);\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * 清除右侧所有图以及DOM对象\\n\\t */\\n\\tclearCharts = function () {\\n\\t\\t// 初始化图的信息\\n\\t\\tif (chartComps) {\\n\\t\\t\\t//clear current charts\\n\\t\\t\\t$.each(chartComps, function (i, comp) {\\n\\t\\t\\t \\t// 回收节点\\n\\t\\t\\t\\tcollectGarbageUtil(comp.element[0]);\\n\\t\\t\\t\\tcomp.destroy();\\n\\t\\t\\t\\tdelete comp;\\n\\t\\t\\t\\tcomp = null;\\n\\t\\t\\t\\t// 回收节点\\n\\t\\t\\t\\tcollectGarbageUtil($(\\\"#PM_HistoryPm_EviewContainer_\\\" + i)[0]);\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\tif (!!eview && $.isFunction(eview.garbageCollect)) {\\n\\t\\t\\t\\t$(\\\"#PM_HistoryPm_Div_Charts>div\\\").each(function (i, el) {\\n\\t\\t\\t\\t\\t// 回收节点\\n\\t\\t\\t\\t\\tcollectGarbageUtil(el);\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\tcharts = [];\\n\\t\\tchartComps = [];\\n\\t\\tchartsPartCache = [];\\n\\t\\tchartsCache = [];\\n\\t\\tDOMS.containerCharts.hide();\\n\\t},\\n\\t\\n\\tchartComps = [],\\n\\t\\n\\t// handleHistoryData调用(1处)\\n\\tgetChartsPartCache = function (charts) {\\n\\t\\t//这里的深拷贝不需要全量拷贝。会很慢\\n\\t\\tvar chartsPartCache = [];\\n\\t\\tif (charts) {\\n\\t\\t\\t$.each(charts, function (i, chart) {\\n\\t\\t\\t\\tvar newChart = {};\\n\\t\\t\\t\\tnewChart.id = chart.id;\\n\\t\\t\\t\\tnewChart.axes = $.extend(true, {}, chart.axes);\\n\\t\\t\\t\\tnewChart.seriesList = {};\\n\\t\\t\\t\\tnewChart.seriesList.id = chart.seriesList.id;\\n\\t\\t\\t\\tnewChart.seriesList.threshold = chart.seriesList.threshold ? $.extend(true, [], chart.seriesList.threshold) : null;\\n\\t\\t\\t\\tnewChart.seriesList.thresholdList = chart.seriesList.thresholdList;\\n\\t\\t\\t\\tnewChart.seriesList.series;\\n\\t\\t\\t\\tif (chart.seriesList.series) {\\n\\t\\t\\t\\t\\tnewChart.seriesList.series = [];\\n\\t\\t\\t\\t\\tvar tempSerie = null,\\n\\t\\t\\t\\t\\ttempData = null;\\n\\t\\t\\t\\t\\t$.each(chart.seriesList.series, function (i, serie) {\\n\\t\\t\\t\\t\\t\\ttempData = serie.data;\\n\\t\\t\\t\\t\\t\\tserie.data = null;\\n\\t\\t\\t\\t\\t\\ttempSerie = $.extend(true, {}, serie, {\\n\\t\\t\\t\\t\\t\\t\\t\\tdata : null\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\tserie.data = tempData;\\n\\t\\t\\t\\t\\t\\tnewChart.seriesList.series.push(tempSerie);\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\ttempSerie = null;\\n\\t\\t\\t\\t\\ttempData = null;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tchartsPartCache.push(newChart);\\n\\t\\t\\t})\\n\\t\\t}\\n\\t\\treturn chartsPartCache\\n\\t},\\n\\t\\n\\t/**\\n\\t * 处理数据(查询、更新、画空图三个地方调用)\\n\\t */\\n\\thandleHistoryData = function (data) {\\n\\t\\tDOMS.panelLoading.hide();\\n\\t\\tDOMS.panelNoData.hide();\\n\\t\\tDOMS.containerCharts.show();\\n\\t\\tif ($.isArray(data.groupQueryData) && data.groupQueryData.length > 0) {\\n\\t\\t\\t//根据时间范围，确认日期格式化样式。通过options参数传入\\n\\t\\t\\tvar options = {\\n\\t\\t\\t\\t\\\"formatter\\\" : \\\"\\\"\\n\\t\\t\\t};\\n\\t\\t\\t\\n\\t\\t\\tif (timeSpace === TIME_SPACE.LAST_ONE_HOUR || timeSpace === TIME_SPACE.LAST_THREE_HOURS ||\\n\\t\\t\\t\\ttimeSpace === TIME_SPACE.LAST_SIX_HOURS || timeSpace === TIME_SPACE.LAST_ONE_DAY) {\\n\\t\\t\\t\\toptions.formatter = \\\"%H:%M\\\";\\n\\t\\t\\t} else if (timeSpace === TIME_SPACE.LAST_THREE_DAY || timeSpace === TIME_SPACE.CUSTOMIZE) {\\n\\t\\t\\t\\toptions.formatter = \\\"%m-%d %H:%M\\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\toptions.formatter = \\\"%m-%d\\\";\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t//除了最小刻度外，默认显示6个刻度\\n\\t\\t\\tvar yAxisCount = data.yAxisScaleCount ? (data.yAxisScaleCount - 1) : 6;\\n\\t\\t\\t\\n\\t\\t\\t// 记录数据\\n\\t\\t\\tcharts = window.iemp.ui.pm.history.Util.getHistoryChartsByGroupQueryData(data, [latestQueryCondition.beginTime, latestQueryCondition.endTime], options, yAxisCount);\\n\\t\\t\\tchartsCache = charts;\\n\\t\\t\\tvar counter = 0;\\n\\t\\t\\t// Clear Table Scope \\n\\t\\t\\tHISTORTTABLESCOPEARRAY = [];\\n\\t\\t\\tchangeChartLegends(charts);\\n\\t\\t\\t$.each(charts, function (i, chart) {\\n\\t\\t\\t\\tvar chartWrapper = utils.render(CHART_TEMPLATE, {\\n\\t\\t\\t\\t\\t\\t\\\"title\\\" : chart.title,\\n\\t\\t\\t\\t\\t\\t\\\"i\\\" : i\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t$(\\\"#PM_HistoryPm_Div_Charts\\\").append(chartWrapper);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 隐藏点 chart.hidePoints = true;\\n\\t\\t\\t\\tchart.parentContainer = \\\"PM_HistoryPm_EviewContainer_\\\" + i;\\n\\t\\t\\t\\tchart.width = \\\"100%\\\";\\n\\t\\t\\t\\tchart.height = \\\"400\\\";\\n\\t\\t\\t\\tchart.listeners = {\\n\\t\\t\\t\\t\\tafterrender : function (e) {\\n\\t\\t\\t\\t\\t\\tcounter++;\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tif (counter === charts.length) {\\n\\t\\t\\t\\t\\t\\t\\t// 启用按钮\\n\\t\\t\\t\\t\\t\\t\\tsetBtnStatus();\\n\\t\\t\\t\\t\\t\\t\\tif ($scope.pm_historypm_timeline) {\\n\\t\\t\\t\\t\\t\\t\\t\\t$scope.pm_historypm_timeline.attr('ngDisabled', false);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tif (isShowPaginator) {\\n\\t\\t\\t\\t\\t\\t\\t\\tDOMS.paginator.show();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tutils.resizeFrame();\\n\\t\\t\\t\\t\\t\\t\\t/* 取消 if ($.isFunction(iemp.portlet.unlock)) {\\n\\t\\t\\t\\t\\t\\t\\t   取消 \\t iemp.portlet.unlock();\\n\\t\\t\\t\\t\\t\\t\\t} */\\n\\t\\t\\t\\t\\t\\t\\t//让timeline再次获取焦点\\n\\t\\t\\t\\t\\t\\t\\t$(\\\"#pm_historypm_timelinehead_1\\\").focus();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tchart.axesId = chart.axes.id;\\n\\t\\t\\t\\tchart.legend = {\\n\\t\\t\\t\\t\\tid : 'legendId_' + i,\\n\\t\\t\\t\\t\\tshow : true,\\n\\t\\t\\t\\t\\tautoLegend : true,\\n\\t\\t\\t\\t\\tlocation : \\\"s\\\",\\n\\t\\t\\t\\t\\tplacement : 'outsideGrid',\\n\\t\\t\\t\\t\\tcols : 2,\\n\\t\\t\\t\\t\\tseriesToggle : true,\\n\\t\\t\\t\\t\\tonupdateShowSeries : false,\\n\\t\\t\\t\\t\\tlegendToggleDrawChart : true,\\n\\t\\t\\t\\t\\tlegendToggleDrawChartCallback : function (e) {\\n\\t\\t\\t\\t\\t\\tif (!chartsPartCache || chartsPartCache.length === 0) {\\n\\t\\t\\t\\t\\t\\t\\tchartsPartCache = getChartsPartCache(charts)\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// remember which series is hide\\n\\t\\t\\t\\t\\t\\tsetChartSeriesMap(e);\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\twindow.iemp.ui.pm.history.Util.refreshYAxis(chartComps, chartsCache, chartsPartCache, e);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif (chart.seriesList && chart.seriesList.series && chart.seriesList.series.length < 2) { //只有一条数据的话， legend显示1列\\n\\t\\t\\t\\t\\tchart.legend.cols = 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tTABLEID = i + \\\"_historyDataTable\\\";\\t\\t\\n\\t\\t\\t\\tif ($.inArray(TABLEID, tableIdArrCache) == -1) {\\n\\t\\t\\t\\t\\ttableIdArrCache.push(TABLEID);\\t\\t\\n\\t\\t\\t\\t}\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tvar axes = [$.extend(true, {}, chart.axes.x)];\\n\\t\\t\\t\\taxes[0].max = null;\\n\\t\\t\\t\\taxes[0].min = null;\\n\\t\\t\\t\\taxes[0].type = \\\"xaxis\\\";\\n\\t\\t\\t\\taxes[0].renderType = \\\"date\\\";\\n\\t\\t\\t\\taxes[0].auto = false;\\n\\t\\t\\t\\t$.each(chart.axes.y, function (yi, yaxis) {\\n\\t\\t\\t\\t\\tyaxis.unitDisplay = yaxis.showunit;\\n\\t\\t\\t\\t\\tyaxis.type = \\\"yaxis\\\";\\n\\t\\t\\t\\t\\taxes.push(yaxis);\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tvar yaxes = chart.axes.y;\\n\\t\\t\\t\\tvar xaxes = chart.axes.x;\\n\\t\\t\\t\\tchart.axes = axes;\\n\\t\\t\\t\\t$.each(chart.axes, function (i, axe) {\\n\\t\\t\\t\\t\\taxe.labelField = \\\"label\\\";\\n\\t\\t\\t\\t\\taxe.field = \\\"value\\\";\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t$scope.markeroptions = {\\n\\t\\t\\t\\t\\tstyle : 'filledCircle',\\n\\t\\t\\t\\t\\tsize : 5\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tchart.yaxes = yaxes;\\n\\t\\t\\t\\tchart.xaxes = xaxes;\\n\\t\\t\\t\\t$.each(chart.seriesList.series, function (si, serie) {\\n\\t\\t\\t\\t\\tserie.xfield = \\\"x\\\";\\n\\t\\t\\t\\t\\tserie.yfield = \\\"y\\\";\\n\\t\\t\\t\\t\\tserie.xaxis = \\\"xaxis\\\";\\n\\t\\t\\t\\t\\tserie.tips = $scope.tooltip1;\\n\\t\\t\\t\\t\\tserie.marker = $scope.markeroptions;\\n\\t\\t\\t\\t\\tserie.type = \\\"line\\\";\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t//  绘制表格的\\n\\t\\t\\t\\trenderTable(data, chart, i);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tvar chartComp = new eview.Chart($(\\\"#PM_HistoryPm_EviewContainer_\\\" + i), chart);\\n\\t\\t\\t\\t//去掉95线\\n\\t\\t\\t\\t// 去掉 if(chartComp.options&&chartComp.options.seriesList&&chartComp.options.seriesList.threshold){\\n\\t\\t\\t\\t// 去掉\\tchartComp.options.seriesList.threshold = null;\\n\\t\\t\\t\\t// 去掉 }\\n\\t\\t\\t\\tchartComps.push(chartComp);\\n\\t\\t\\t\\tchartComp.create();\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\t// after Render All Tables\\n\\t\\t\\tvar nowLayOut = $scope.pm_monitorView_layout.getCheckedValue();\\n\\t\\t\\tsetLayout(nowLayOut);\\n\\t\\t\\t// asyncIframe\\n\\t\\t\\tdealIframeAfterChart();\\n\\t\\t\\t// add eview Tip\\n\\t\\t\\tinitTemplateTips();\\n\\t\\t} else {\\n\\t\\t\\t// 画个空图\\n\\t\\t\\tdrawEmptyChart();\\n\\t\\t}\\n\\t},\\n\\t\\n\\t// queryHistoryTimeData 和 updateHistoryTimeData, 查询后台返回后,\\n\\tgetIndexesInfo = function (result, callback) {\\n\\t\\tif (result && $.isArray(result.groupQueryData)) {\\n\\t\\t\\tvar indexIds = [];\\n\\t\\t\\t$.each(result.groupQueryData, function (i, series) {\\n\\t\\t\\t\\t$.each(series, function (index, serie) {\\n\\t\\t\\t\\t\\tindexIds.push(serie.indexId);\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t\\tindexIds = utils.unique(indexIds, function (obj) {\\n\\t\\t\\t\\t\\treturn obj + \\\"\\\";\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t// if from taskmgr Page\\t\\n\\t\\t\\tif (needAyncFrame && measInfo_map.totalNum > 0) {\\n\\t\\t\\t\\t$.each(result.groupQueryData, function (i, series) {\\n\\t\\t\\t\\t\\t$.each(series, function (index, serie) {\\n\\t\\t\\t\\t\\t\\tserie.dataType = measInfo_map.indexes[\\\"indexId_\\\" + serie.indexId].dataType;\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tcallback(result);\\t\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\twindow.iemp.ui.pm.resource.CollectIndexesRes.get({\\n\\t\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\t\\t\\\"basicCondition\\\" : {\\n\\t\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"operator\\\" : \\\"in\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"value\\\" : JSON.stringify(indexIds)\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"relateCondition\\\" : {},\\n\\t\\t\\t\\t\\t\\t\\\"sortCondition\\\" : [],\\n\\t\\t\\t\\t\\t\\t\\\"fields\\\" : [],\\n\\t\\t\\t\\t\\t\\t\\\"pageNum\\\" : 1,\\n\\t\\t\\t\\t\\t\\t\\\"pageSize\\\" : 1000\\n\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t}, function (r) {\\n\\t\\t\\t\\t\\tif (r && $.isArray(r.indexes) && r.indexes.length > 0) {\\n\\t\\t\\t\\t\\t\\t$.each(r.indexes, function (i, index) {\\n\\t\\t\\t\\t\\t\\t\\tr.indexes[\\\"indexId_\\\" + index.indexId] = index;\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t$.each(result.groupQueryData, function (i, series) {\\n\\t\\t\\t\\t\\t\\t\\t$.each(series, function (index, serie) {\\n\\t\\t\\t\\t\\t\\t\\t\\tserie.dataType = r.indexes[\\\"indexId_\\\" + serie.indexId].dataType;\\n\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\tcallback(result);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcallback(result);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}, function () {\\n\\t\\t\\t\\t\\tcallback(result);\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tcallback(result);\\n\\t\\t}\\n\\t};\\n\\t\\n\\tvar legendDataCache = [];\\n\\tvar getPortletLegend = function(){\\n\\t\\tvar portletId = window.iemp.ui.pm.Utils.getUrlParam(\\\"monitorPortletID\\\", window.location.search);\\n\\t\\tif(portletId == null && portletId == \\\"\\\")\\n\\t\\t{\\n\\t\\t\\treturn ;\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar condition={\\n\\t\\t\\t\\\"viewId\\\": portletId,\\n\\t\\t};\\n\\t\\n\\t\\tvar setting = {\\n\\t\\t\\turl : \\\"/rest/pm/monitorview/legend\\\",\\n\\t\\t\\tasync : false,\\n\\t\\t\\tdataType : \\\"JSON\\\",\\n\\t\\t\\tdata : {\\n\\t\\t\\t\\tparam:JSON.stringify(condition)\\n\\t\\t\\t},\\n\\t\\t\\tsuccess : function (serverInfo) {\\n\\t\\t\\t\\tif (serverInfo&&serverInfo.result&&serverInfo.result.legends) {\\n\\t\\t\\t\\t\\tlegendDataCache = serverInfo.result.legends;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t},\\n\\t\\t\\terror : function (XMLHttpRequest, textStatus, errorThrown) {\\n\\t\\t\\t\\tif (\\\"error\\\" == textStatus && \\\"\\\" == errorThrown) \\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\tiemp.http.get(setting);\\t\\n\\t};\\t\\n\\t\\n\\tvar getCondKey = function (chartId, serieId, seriesData) {\\n\\t\\tif (seriesData && seriesData.dn) {\\n\\t\\t\\treturn pmPortletId + \\\"_\\\" + seriesData.dn + \\\"_\\\" + (seriesData.displayValue || \\\"null\\\") + \\\"_\\\" + seriesData.indexId;\\n\\t\\t}\\n\\t\\tvar result = null;\\n\\t\\t$.each(charts, function (i, chart) {\\n\\t\\t\\tif (chart.id == chartId) {\\n\\t\\t\\t\\t$.each(chart.seriesList.series, function (si, serie) {\\n\\t\\t\\t\\t\\tif (serie.id === serieId) {\\n\\t\\t\\t\\t\\t\\tresult = pmPortletId + \\\"_\\\" + serie.dn + \\\"_\\\" + (serie.displayValue || \\\"null\\\") + \\\"_\\\" + serie.indexId;\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn result;\\n\\t};\\n\\t\\n\\tvar changeChartLegends = function(charts){\\n\\t\\tif(legendDataCache == null || legendDataCache.length == 0)\\n\\t\\t{\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\t\\n\\t\\tfor(var k = 0; k < charts.length; k++)\\n\\t\\t{\\n\\t\\t\\tvar series = charts[k].seriesList.series;\\n\\t\\t\\tfor(var j = 0; j < series.length; j++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar sList = series[j];\\n\\t\\t\\t\\tvar value = null;\\n\\t\\t\\t\\tvar tlabel = sList.label;\\n\\t\\t\\t\\tvar legendTemp = legendDataCache;\\n\\t\\t\\t\\tfor (var i = 0; i < legendTemp.length; i++) \\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (legendTemp[i].showStatistics) {\\n\\t\\t\\t\\t\\t\\tif (legendTemp[i].displayValue && legendTemp[i].displayValue != \\\"\\\" && sList.displayValue) {\\n\\t\\t\\t\\t\\t\\t\\tif (sList.dn == legendTemp[i].dn && legendTemp[i].collectIndexId == sList.indexId && legendTemp[i].displayValue == sList.displayValue) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue = legendTemp[i].legendName + \\\"\\\" + tlabel.substring(tlabel.indexOf(sList.indexName), tlabel.length).replace(sList.indexName, \\\"\\\");\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tif (sList.dn == legendTemp[i].dn && legendTemp[i].collectIndexId == sList.indexId) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue = legendTemp[i].legendName + \\\"\\\" + tlabel.substring(tlabel.indexOf(sList.indexName), tlabel.length).replace(sList.indexName, \\\"\\\");\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\tif (sList.dn == legendTemp[i].dn && legendTemp[i].collectIndexId == sList.indexId && legendTemp[i].displayValue == sList.displayValue) {\\n\\t\\t\\t\\t\\t\\t\\tvalue = legendTemp[i].legendName + \\\"\\\";   // 去掉最大最小值\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tif (sList.dn == legendTemp[i].dn && legendTemp[i].collectIndexId == sList.indexId) {\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue = legendTemp[i].legendName + \\\"\\\" + tlabel.substring(tlabel.indexOf(sList.indexName), tlabel.length).replace(sList.indexName, \\\"\\\");\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif(value)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tsList.label = value;\\n\\t\\t\\t\\t\\t\\t// 避单位重复\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t};\\n\\t\\t\\n\\t/**\\n\\t * 更新所有图(拖动时间条时调用)\\n\\t */\\n\\tupdateHistoryTimeData = function (range) {\\n\\t\\t// TODO 禁用缩放条\\n\\t\\tif ($scope.pm_historypm_timeline) {\\n\\t\\t\\t$scope.pm_historypm_timeline.attr('ngDisabled', true);\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 禁用搜索和导出按钮\\n\\t\\tsetBtnStatus({\\n\\t\\t\\t\\\"search\\\" : true,\\n\\t\\t\\t\\\"exports\\\" : true,\\n\\t\\t\\t\\\"showSavePortletDialog\\\" : true\\n\\t\\t});\\n\\t\\t\\n\\t\\t// 先把上一次的请求停掉\\n\\t\\tif (jqXHR) {\\n\\t\\t\\tjqXHR.abort();\\n\\t\\t}\\n\\t\\t// 隐藏错误面板\\n\\t\\tDOMS.panelError.hide();\\n\\t\\t// 隐藏没有数据面板\\n\\t\\tDOMS.panelNoData.hide();\\n\\t\\t// 显示加载中面板\\n\\t\\tDOMS.panelLoading.show();\\n\\t\\t// 隐藏分页器\\n\\t\\tDOMS.paginator.hide();\\n\\t\\t\\n\\t\\tisShowPaginator = false;\\n\\t\\t\\n\\t\\tvar beginTimestamp = formatDate2(range[0], range[2]);\\n\\t\\tvar endTimestamp = formatDate2(range[1], range[3]);\\n\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\ttimestampstr : beginTimestamp\\n\\t\\t\\t})\\n\\t\\t}, function (begin) {\\n\\t\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\ttimestampstr : endTimestamp\\n\\t\\t\\t\\t})\\n\\t\\t\\t}, function (end) {\\n\\t\\t\\t\\tlatestQueryCondition.beginTime = begin.timestamp;\\n\\t\\t\\t\\tlatestQueryCondition.endTime = end.timestamp;\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tlatestQueryCondition.historyTimeRange = TIME_SPACE.CUSTOMIZE;\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 增加了一个参数,后台判断查询来自历史性能\\n\\t\\t\\t\\tlatestQueryCondition.pmViewPage = \\\"historyPm\\\";\\n                \\n                // 增加了一个参数，后台判断查询是否需要按时间间隔来查询\\n                latestQueryCondition.isQueryOriginal = isHistoryQueryTimeIntervalEnable();\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 调用资源获取这个图的历史数据\\n\\t\\t\\t\\tjqXHR = window.iemp.ui.pm.resource.HistoryRes.post({\\n\\t\\t\\t\\t\\t\\t\\\"param\\\" : JSON.stringify(latestQueryCondition)\\n\\t\\t\\t\\t\\t}, function (result) {\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tgetIndexesInfo(result, function (result) {\\n\\t\\t\\t\\t\\t\\t\\tisEmptyChart = false;\\n\\t\\t\\t\\t\\t\\t\\t// 清除之前的数据\\n\\t\\t\\t\\t\\t\\t\\tclearCharts();\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\thandleHistoryData(result);\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t// after handle the data , set series hide or show\\n\\t\\t\\t\\t\\t\\t\\thandleChartSeries();\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t// TODO 启用缩放条\\n\\t\\t\\t\\t\\t\\t\\tif (1 < result.totalPage) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// 显示分页器\\n\\t\\t\\t\\t\\t\\t\\t\\tsetPaginator(result);\\n\\t\\t\\t\\t\\t\\t\\t\\tif (isShowPaginator) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tDOMS.paginator.show();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t// 隐藏分页器\\n\\t\\t\\t\\t\\t\\t\\t\\tDOMS.paginator.hide();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}, function (desc) {\\n\\t\\t\\t\\t\\t\\t// 处理错误\\n\\t\\t\\t\\t\\t\\thandleServerError(desc);\\n\\t\\t\\t\\t\\t\\t// TODO 启用缩放条\\n\\t\\t\\t\\t\\t\\t// 画个空图\\n\\t\\t\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t\\t\\t\\t// 隐藏分页器\\n\\t\\t\\t\\t\\t\\tDOMS.paginator.hide();\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 销毁全局的时间拖动条\\n\\t */\\n\\tdestroyGlobalChartSlider = function () {\\n\\t\\t// 隐藏\\n\\t\\tDOMS.containerGlobalChartSlider.hide();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 拖动条的事件处理程序\\n\\t */\\n\\tchartSliderChangeHandler = function (selectedDate) {\\n\\t\\t// 重画所有的图\\n\\t\\tupdateHistoryTimeData(selectedDate);\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取时间线的数据模型\\n\\t */\\n    getTimelineModal = function (minStr, minUtc, maxStr, maxUtc, step) {\\n        var minDateInfo = parseDate(minStr);\\n        var minDate = getServerDateByUtc(minUtc);\\n        var isMinDst = minDateInfo[1];\\n\\n        var maxDateInfo = parseDate(maxStr);\\n        var maxDate = getServerDateByUtc(maxUtc);\\n\\t\\tvar isMaxDst = maxDateInfo[1];\\n\\t\\t\\n\\t\\tvar obj = {};\\n\\t\\tobj.minDate = new Date(minDate);\\n\\t\\tobj.maxDate = new Date(maxDate);\\n\\t\\tobj.isDisplayStartDst = isMinDst;\\n\\t\\tobj.displayStartDate = obj.minDate;\\n\\t\\tobj.isDisplayEndDst = isMaxDst;\\n\\t\\tobj.displayEndDate = obj.maxDate;\\n\\t\\tobj.selectedStartDate = obj.minDate;\\n\\t\\tobj.isSelectedStartDst = isMinDst;\\n\\t\\tobj.selectedEndDate = obj.maxDate;\\n\\t\\tobj.isSelectedEndDst = isMaxDst;\\n\\t\\tobj.stepInterval = TIME_LINE_STEP_INTERVAL;\\n\\t\\t\\n\\t\\treturn obj;\\n\\t},\\n\\t\\n\\t/**\\n\\t * 初始化全局的时间拖动条\\n\\t */\\n\\tinitGlobalChartSlider = function (dstStart, dstEnd, duration) {\\n\\t\\t// 时间拖动条的开始时间\\n\\t\\tvar min = 0,\\n\\t\\t// 时间拖动条的结束时间\\n\\t\\tmax = 0,\\n\\t\\t// 移动的步数，以小时为单位\\n\\t\\tstep = 1000 * 60 * 60;\\n\\t\\t\\n\\t\\t// 清空拖动条\\n\\t\\tdestroyGlobalChartSlider();\\n\\t\\t\\n\\t\\tif ($.isArray(charts) && charts.length > 0) {\\n\\t\\t\\t// 显示\\n\\t\\t\\tDOMS.containerGlobalChartSlider.show();\\n\\t\\t\\t// 当有需要画图的时候初始化拖动条\\n\\t\\t\\tmin = parseInt(charts[0].xaxes.min, 10);\\n\\t\\t\\tmax = parseInt(charts[0].xaxes.max, 10);\\n\\t\\t\\t\\n\\t\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\ttimestamp : min\\n\\t\\t\\t\\t})\\n\\t\\t\\t}, function (minInfo) {\\n\\t\\t\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\t\\ttimestamp : max\\n\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t}, function (maxInfo) {\\n                    // 构造timeline需要的数据结构\\n                    var timelineModal = getTimelineModal(minInfo.timestampStr, min, maxInfo.timestampStr, max, step);\\n\\t\\t\\t\\t\\tvar displayTimeRange = (new Date(timelineModal.displayEndDate)).getTime() - (new Date(timelineModal.displayStartDate)).getTime();\\n\\t\\t\\t\\t\\tvar timeLineType = 'day';\\n\\t\\t\\t\\t\\tvar TEN_DAY_UTC_NUM = 1000 * 60 * 60 * 24 * 10;\\n\\t\\t\\t\\t\\tvar SEVENTY_DAY_UTC_NUM = 1000 * 60 * 60 * 24 * 70;\\n\\t\\t\\t\\t\\tif (displayTimeRange > TEN_DAY_UTC_NUM) {\\n\\t\\t\\t\\t\\t\\tif (displayTimeRange > SEVENTY_DAY_UTC_NUM) {\\n\\t\\t\\t\\t\\t\\t\\ttimeLineType = 'month';\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\ttimeLineType = 'week';\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif ($scope[\\\"pm_historypm_timeline\\\"]) {\\n\\t\\t\\t\\t\\t\\tvar options = {\\n\\t\\t\\t\\t\\t\\t\\t\\\"dstStart\\\" : dstStart,\\n\\t\\t\\t\\t\\t\\t\\t\\\"dstEnd\\\" : dstEnd,\\n\\t\\t\\t\\t\\t\\t\\t\\\"displayStartDateDst\\\" : timelineModal.isDisplayStartDst,\\n\\t\\t\\t\\t\\t\\t\\t\\\"displayEndDateDst\\\" : timelineModal.isDisplayEndDst,\\n\\t\\t\\t\\t\\t\\t\\t\\\"displayStartDate\\\" : timelineModal.displayStartDate,\\n\\t\\t\\t\\t\\t\\t\\t\\\"displayEndDate\\\" : timelineModal.displayEndDate,\\n\\t\\t\\t\\t\\t\\t\\t\\\"minDate\\\" : timelineModal.minDate,\\n\\t\\t\\t\\t\\t\\t\\t\\\"maxDate\\\" : timelineModal.maxDate,\\n\\t\\t\\t\\t\\t\\t\\t\\\"stepInterval\\\" : timelineModal.stepInterval,\\n\\t\\t\\t\\t\\t\\t\\t\\\"selectedStartDateDst\\\" : timelineModal.isSelectedStartDst,\\n\\t\\t\\t\\t\\t\\t\\t\\\"selectedEndDateDst\\\" : timelineModal.isSelectedEndDst,\\n\\t\\t\\t\\t\\t\\t\\t\\\"selectedStartDate\\\" : timelineModal.selectedStartDate,\\n\\t\\t\\t\\t\\t\\t\\t\\\"selectedEndDate\\\" : timelineModal.selectedEndDate,\\n\\t\\t\\t\\t\\t\\t\\t\\\"type\\\" : timeLineType,\\n\\t\\t\\t\\t\\t\\t\\t\\\"dstDuration\\\" : duration / 60000\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t$scope[\\\"pm_historypm_timeline\\\"].setOption(options);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t}\\n\\t},\\n\\t\\n\\tparseDate = function (dateStr) {\\n\\t\\tvar index = dateStr.indexOf('DST');\\n\\t\\tvar hasDst = (index !== -1);\\n\\t\\t\\n\\t\\treturn [hasDst ? dateStr.slice(0, index - 1) : dateStr, hasDst];\\n\\t},\\n\\t\\n\\tgetServerDateByUtc = function(dateUtc){\\n\\t    return new Date(dateUtc);\\n\\t}\\n\\tgetServerDate = function (dateStr) {\\n\\t\\tvar p = /(\\\\d{4})-(\\\\d{2})-(\\\\d{2}) (\\\\d{2}):(\\\\d{2}):(\\\\d{2})/;\\n\\t\\tvar matches = p.exec(dateStr);\\n\\t\\t\\n\\t\\tif (!matches)\\n\\t\\t\\treturn new Date(0);\\n\\t\\t\\n\\t\\tvar year = parseInt(matches[1], 10);\\n\\t\\tvar month = parseInt(matches[2], 10);\\n\\t\\tvar day = parseInt(matches[3], 10);\\n\\t\\tvar hour = parseInt(matches[4], 10);\\n\\t\\tvar minute = parseInt(matches[5], 10);\\n\\t\\tvar second = parseInt(matches[6], 10);\\n\\t\\t\\n\\t\\treturn new Date(year, month - 1, day, hour, minute, second);\\n\\t},\\n\\t\\n\\t// 两处调用均在(queryHistoryTimeData)\\n\\tinitTimeline = function (dstStart, dstEnd, dstOffset) {\\n\\t\\t// 初始化全局拖动条(时间)\\n\\t\\tinitGlobalChartSlider(dstStart, dstEnd, dstOffset);\\n\\t},\\n\\t\\n\\t// 校验自定义时间(调用)\\n\\tisCustomizeTimeRangeMoreThanThreshold = function (startTime, endTime) {\\n\\t\\tvar startDate = new Date(startTime);\\n\\t\\tvar maxDate = new Date(startDate.getFullYear() + 1, startDate.getMonth(), startDate.getDate(), startDate.getHours(), startDate.getMinutes());\\n\\t\\treturn endTime > maxDate.getTime();\\n\\t},\\n\\t\\n\\t//  校验自定义时间\\n\\tgetCustomizeTimeRangeInvalidMsg = function (startTime, endTime) {\\n\\t\\tvar curTime;\\n\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\ta : 'b'\\n\\t\\t\\t})\\n\\t\\t}, function (time) {\\n\\t\\t\\tcurTime = time.utcTime;\\n\\t\\t}, function () {\\n\\t\\t\\treturn true;\\n\\t\\t}, {\\n\\t\\t\\t\\\"async\\\" : false\\n\\t\\t});\\n\\t\\t\\n\\t\\tif (curTime) {\\n\\t\\t\\tif (startTime > curTime) {\\n\\t\\t\\t\\treturn $scope.i18n.invalid_cus_timerange_start_time_in_future;\\n\\t\\t\\t}\\n\\t\\t\\tif (endTime > curTime) {\\n\\t\\t\\t\\treturn $scope.i18n.invalid_cus_timerange_end_time_in_future;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\tif (startTime > endTime) {\\n\\t\\t\\treturn $scope.i18n.invalid_cus_timerange_start_after_end;\\n\\t\\t}\\n\\t\\tif (startTime === endTime) {\\n\\t\\t\\treturn $scope.i18n.invalid_cus_timerange_start_equals_end;\\n\\t\\t}\\n\\t\\tif (isCustomizeTimeRangeMoreThanThreshold(startTime, endTime)) {\\n\\t\\t\\treturn $scope.i18n.invalid_cus_timerange_timerange_too_long;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn \\\"\\\";\\n\\t},\\n\\t\\n\\t/**\\n\\t * 查询历史性能数据\\n\\t */\\n\\tqueryHistoryTimeData = function () {\\n\\t\\t// 校验自定义时间\\n\\t\\tif (timeSpace === TIME_SPACE.CUSTOMIZE) {\\n\\t\\t\\tif ($scope.cusStartTime && $scope.cusEndTime) {\\n\\t\\t\\t\\tvar cusStartTime = $scope.cusStartTime.getUTCDateTime();\\n\\t\\t\\t\\tvar cusEndTime = $scope.cusEndTime.getUTCDateTime();\\n\\t\\t\\t\\tvar errorMsg = getCustomizeTimeRangeInvalidMsg(cusStartTime, cusEndTime);\\n\\t\\t\\t\\tif (!!errorMsg) {\\n\\t\\t\\t\\t\\t$('#errorContainerDiv').remove();\\n\\t\\t\\t\\t\\twindow.iemp.ui.pm.msgbox.alert(errorMsg);\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 禁用时间线\\n\\t\\tif ($scope.pm_historypm_timeline) {\\n\\t\\t\\t$scope.pm_historypm_timeline.attr('ngDisabled', true);\\n\\t\\t}\\n\\t\\tqueryTimeRange = getTimeRangeArr();\\n\\t\\t// 禁用搜索按钮\\n\\t\\tsetBtnStatus({\\n\\t\\t\\t\\\"search\\\" : true,\\n\\t\\t\\t\\\"timerange\\\" : true,\\n\\t\\t\\t\\\"showSavePortletDialog\\\" : true,\\n\\t\\t\\t\\\"exports\\\" : true\\n\\t\\t});\\n\\t\\t// 显示加载中提示框\\n\\t\\t// TODO 现在的resource处理机制先不弹出loading提示框\\n\\t\\t// 显示加载中面板\\n\\t\\tDOMS.panelLoading.show();\\n\\t\\t// 隐藏欢迎面板\\n\\t\\tDOMS.panelWelcome.hide();\\n\\t\\t// 隐藏木有数据面板\\n\\t\\tDOMS.panelNoData.hide();\\n\\t\\t// 隐藏错误面板\\n\\t\\tDOMS.panelError.hide();\\n\\t\\t// 隐藏分页器\\n\\t\\tDOMS.paginator.hide();\\n\\t\\t\\n\\t\\tisShowPaginator = false;\\n\\t\\t\\n\\t\\t// 清除之前的数据\\n\\t\\tclearCharts();\\n\\t\\t\\n\\t\\t// clear map that remember which series of the charts shold be hidden\\n\\t\\tchart_series_map = [];\\n\\t\\t\\n\\t\\t// \\n\\t\\tvar hasCollectObject = false;\\n\\t\\t$.each(mos, function (index, mo) {\\n\\t\\t\\tif (!!mo.displayValue) {\\n\\t\\t\\t\\thasCollectObject = true;\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\t// mos,measTypes都没啥用\\n\\t\\tmos = $.extend(true, [], (hasCollectObject && isShowCollectObjectsPanel) ? tempCollectObjects : tempMos);\\n\\t\\tmeasTypes = $.extend(true, [], tempMeasTypes);\\n\\t\\t\\n\\t\\t// 记录当前查询条件\\n\\t\\tlatestQueryCondition = {\\n\\t\\t\\t// 当前页码\\n\\t\\t\\t\\\"pageIndex\\\" : pageIndex,\\n\\t\\t\\t// 时间常量\\n\\t\\t\\t\\\"historyTimeRange\\\" : timeSpace,\\n\\t\\t\\t\\\"beginTime\\\" : new Date().valueOf(),\\n\\t\\t\\t\\\"endTime\\\" : new Date().valueOf(),\\n\\t\\t\\t\\\"isGetGraphicGroupData\\\" : true\\n\\t\\t};\\n\\t\\t\\n\\t\\tif (timeSpace === TIME_SPACE.CUSTOMIZE) {\\n\\t\\t\\tif ($scope.cusStartTime && $scope.cusEndTime) {\\n\\t\\t\\t\\tlatestQueryCondition.beginTime = $scope.cusStartTime.getUTCDateTime();\\n\\t\\t\\t\\tlatestQueryCondition.endTime = $scope.cusEndTime.getUTCDateTime();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tlatestQueryCondition.beginTime = getClientTime(beginTime - new Date().getTimezoneOffset() * 60000, zoneOffset, dstOffSet);\\n\\t\\t\\t\\tlatestQueryCondition.endTime = getClientTime(endTime - new Date().getTimezoneOffset() * 60000, zoneOffset, dstOffSet);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\tif (timeSpace / TIME_SPACE.DAYS_OF_ONE_MONTH >= 1) {\\n\\t\\t\\tlatestQueryCondition.beginTime = getTimeRangeStartTimeArr();\\n\\t\\t\\tlatestQueryCondition.endTime = getTimeRangeEndTimeArr();\\n\\t\\t}\\n\\t\\t\\n\\t\\tif ($.isArray(moIndexs) && moIndexs.length > 0) {\\n\\t\\t\\tlatestQueryCondition.mo2Index = JSON.stringify(moIndexs);\\n\\t\\t}\\n\\t\\telse if(obj2Index && obj2Index.length > 0)\\n\\t\\t{\\n\\t\\t\\t// 按对象(选择资源),后台参数是mo2Index\\n\\t\\t\\tlatestQueryCondition.mo2Index = JSON.stringify(obj2Index);\\n\\t\\t}\\n\\t\\telse if (dn2Index && dn2Index.length > 0)\\n\\t\\t{\\n\\t\\t\\t// 按设备(选择资源),后台参数是dn2AggrType\\n\\t\\t\\tlatestQueryCondition.dn2AggrType = JSON.stringify(getDn2Index());\\n\\t\\t\\t// 遍历取得mos和indexIds\\n\\t\\t\\tvar mosDevice = [];\\n\\t\\t\\tvar IndexIdsDevice = [];\\n\\t\\t\\tfor(i = 0;i<dn2Index.length;i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar moDevice = {\\n\\t\\t\\t\\t\\tdn:dn2Index[i].dn\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isContainMo(mosDevice, moDevice))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmosDevice.push(moDevice);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif(!contain(IndexIdsDevice, dn2Index[i].indexId ))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tIndexIdsDevice.push(dn2Index[i].indexId);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tlatestQueryCondition.mos = JSON.stringify(mosDevice);\\n\\t\\t\\tlatestQueryCondition.indexIds = IndexIdsDevice.join(ARR_SAPERATOR);\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tlatestQueryCondition.mos = JSON.stringify(getMos());\\n\\t\\t\\tlatestQueryCondition.indexIds = getMeasTypeIds().join(ARR_SAPERATOR);\\n\\t\\t}\\n\\t\\t\\n\\t\\tqueryTimeRange = getTimeRangeArr();\\n\\t\\t\\n\\t\\tdestroyGlobalChartSlider();\\n\\t\\t\\n\\t\\t// 先把上一次的请求停掉\\n\\t\\tif (jqXHR) {\\n\\t\\t\\tjqXHR.abort();\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 增加了一个参数,后台判断查询来自历史性能\\n\\t\\tlatestQueryCondition.pmViewPage = \\\"historyPm\\\";\\n        \\n        // 增加了一个参数，后台判断查询是否需要按时间间隔来查询\\n        latestQueryCondition.isQueryOriginal = isHistoryQueryTimeIntervalEnable();\\n\\t\\t\\n\\t\\t// 默认面板，调用获取历史性能数据接口获取数据\\n\\t\\tjqXHR = window.iemp.ui.pm.resource.HistoryRes.post({\\n\\t\\t\\t\\t\\\"param\\\" : JSON.stringify(latestQueryCondition)\\n\\t\\t\\t}, function (result, textStatus, jqXHR, objTmp, data) {\\n\\t\\t\\t\\tgetIndexesInfo(result, function (result) {\\n\\t\\t\\t\\t\\tif (data.resultDesc) {\\n\\t\\t\\t\\t\\t\\thandleServerError(data.resultDesc);\\n\\t\\t\\t\\t\\t\\tdealMonitorDataExpect();\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tlatestQueryCondition.beginTime = result.startTime;\\n\\t\\t\\t\\t\\tlatestQueryCondition.endTime = result.endTime;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tisEmptyChart = false;\\n\\t\\t\\t\\t\\tgetPortletLegend();\\n\\t\\t\\t\\t\\thandleHistoryData(result);\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (result && $.isArray(result.groupQueryData) && result.groupQueryData.length > 0) {\\n\\t\\t\\t\\t\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\t\\t\\t\\ttimestamp : result.startTime\\n\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t}, function (time) {\\n\\t\\t\\t\\t\\t\\t\\tglobalDstOffset = time.dstOffSet;\\n\\t\\t\\t\\t\\t\\t\\tvar dstStartDate;\\n\\t\\t\\t\\t\\t\\t\\tvar dstEndDate;\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tif (!time.dstStartTime) {\\n\\t\\t\\t\\t\\t\\t\\t\\tdstStartDate = new Date(0);\\n\\t\\t\\t\\t\\t\\t\\t\\tdstEndDate = new Date(0);\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tdstStartDate = getServerDateByUtc(time.dstStartTime);\\n\\t\\t\\t\\t\\t\\t\\t\\tdstStartDate = new Date(dstStartDate.getTime() - time.dstOffSet);\\n\\t\\t\\t\\t\\t\\t\\t\\tdstEndDate = getServerDateByUtc(time.dstEndTime);\\n\\t\\t\\t\\t\\t\\t\\t\\tdstEndDate = new Date(dstEndDate.getTime() + time.dstOffSet);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tif ((dstStartDate.getFullYear() === dstEndDate.getFullYear()) ||\\n\\t\\t\\t\\t\\t\\t\\t\\t(time.dstStartTime <= result.startTime && time.dstEndTime >= result.startTime)) {\\n\\t\\t\\t\\t\\t\\t\\t\\tinitTimeline(dstStartDate, dstEndDate, time.dstOffSet);\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar tmpDate = new Date(result.startTime);\\n\\t\\t\\t\\t\\t\\t\\t\\ttmpDate.setFullYear(tmpDate.getFullYear() + 1);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\twindow.iemp.ui.pm.resource.ServerTimeRes.get({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttimestamp : tmpDate.getTime()\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t\\t\\t\\t\\t}, function (time2) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdstStartDate = getServerDateByUtc(time2.dstStartTime);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdstStartDate = new Date(dstStartDate.getTime() - time2.dstOffSet);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdstEndDate = getServerDateByUtc(time2.dstEndTime);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdstEndDate = new Date(dstEndDate.getTime() + time2.dstOffSet);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tinitTimeline(dstStartDate, dstEndDate, time2.dstOffSet);\\n\\t\\t\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (1 < result.totalPage) {\\n\\t\\t\\t\\t\\t\\t// 显示分页器\\n\\t\\t\\t\\t\\t\\tsetPaginator(result);\\n\\t\\t\\t\\t\\t\\tif (isShowPaginator) {\\n\\t\\t\\t\\t\\t\\t\\tDOMS.paginator.show();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// 隐藏分页器\\n\\t\\t\\t\\t\\t\\tDOMS.paginator.hide();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}, function (desc) {\\n\\t\\t\\t\\t// 处理错误\\n\\t\\t\\t\\thandleServerError(desc);\\n\\t\\t\\t\\t// 画个空图\\n\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t\\t// 隐藏分页器\\n\\t\\t\\t\\tDOMS.paginator.hide();\\n\\t\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 处理服务器错误\\n\\t */\\n\\thandleServerError = function (desc) {\\n\\t\\tif ($scope.pm_historypm_timeline) {\\n\\t\\t\\t$scope.pm_historypm_timeline.attr('ngDisabled', false);\\n\\t\\t}\\n\\t\\t// 设置错误面板的信息\\n\\t\\tDOMS.panelError.html(desc ? utils.encodeHtml(desc) : $scope.i18n.server_error_content).show();\\n\\t\\t// 隐藏加载中面板\\n\\t\\tDOMS.panelLoading.hide();\\n\\t\\t// 隐藏没有数据面板\\n\\t\\tDOMS.panelNoData.hide();\\n\\t\\t// 隐藏欢迎面板\\n\\t\\tDOMS.panelWelcome.hide();\\n\\t\\t// 显示错误面板\\n\\t\\tDOMS.panelError.show();\\n\\t\\t// 设置按钮\\n\\t\\tsetBtnStatus({\\n\\t\\t\\t\\\"search\\\" : true,\\n\\t\\t\\t\\\"exports\\\" : true,\\n\\t\\t\\t\\\"showSavePortletDialog\\\" : true\\t\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置扩展选择对象界面URL(initStatusQuery 第三个分支调用)\\n\\t */\\n\\tsetObjectSelectPageUrlByKey = function (resType) {\\n\\t\\t// 调用资源获取所有资源类型的详细信息\\n\\t\\twindow.iemp.ui.pm.resource.ResourceTypesRes.get({\\n\\t\\t\\tparam : JSON.stringify({})\\n\\t\\t}, function (result) {\\n\\t\\t\\t$.each(result, function (index, rType) {\\n\\t\\t\\t\\tif (rType.resourceTypeId === resType) {\\n\\t\\t\\t\\t\\tobjectSelectPageUrl = rType.historyDeviceSelectUrl;\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}, function (desc) {\\n\\t\\t\\t// TODO 获取资源类型详细信息失败\\n\\t\\t\\thandleServerError(desc);\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 根据URL参数获取对象参数(initStatus中调用)\\n\\t */\\n\\tgetMosParamsFromUrlParam = function (objects) {\\n\\t\\tvar cMos = [],\\n\\t\\ttemp = [];\\n\\t\\t\\n\\t\\ttry {\\n\\t\\t\\t// 把这个对象转成json\\n\\t\\t\\ttemp = JSON.parse(objects);\\n\\t\\t} catch (e) {\\n\\t\\t\\t\\n\\t\\t\\t// TODO 为了不改变接口，这里做了兼容，如果该字符串不是json格式，则认为只有一个对象\\n\\t\\t\\t// TODO 以后如果要兼容查询多个对象，则按json格式的字符串进行传输\\n\\t\\t\\ttemp = [objects];\\n\\t\\t}\\n\\t\\t\\n\\t\\t$.each(temp, function (objectIndex, object) {\\n\\t\\t\\tvar temp = object.split(\\\"~~\\\"),\\n\\t\\t\\tdn = temp[0],\\n\\t\\t\\tdisplayValue = undefined;\\n\\t\\t\\t\\n\\t\\t\\tif (temp.length > 1) {\\n\\t\\t\\t\\tdisplayValue = temp[1];\\n\\t\\t\\t}\\n\\t\\t\\tif (temp.length > 2) {\\n\\t\\t\\t\\tcMos.push({\\n\\t\\t\\t\\t\\t\\\"dn\\\" : dn,\\n\\t\\t\\t\\t\\t\\\"displayValue\\\" : displayValue,\\n\\t\\t\\t\\t\\t\\\"oid\\\" : temp[2]\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcMos.push({\\n\\t\\t\\t\\t\\t\\\"dn\\\" : dn,\\n\\t\\t\\t\\t\\t\\\"displayValue\\\" : displayValue\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tcMos[dn] = cMos[cMos.length - 1];\\n\\t\\t});\\n\\t\\t\\n\\t\\treturn cMos;\\n\\t},\\n\\t\\n\\t/**\\n\\t * 根据URL参数获取指标参数(initStatus中调用)\\n\\t */\\n\\tgetMeasTypesParamFromUrlParam = function (indexs) {\\n\\t\\treturn $.map(indexs.split(\\\",\\\"), function (el) {\\n\\t\\t\\treturn parseInt(el, 10);\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 根据对象参数获取对象详细信息((initStatus中调用))\\n\\t */\\n\\tgetMoInfoesFromCMos = function (cMos, callback) {\\n\\t\\t// 加上dn的索引\\n\\t\\t$.each(cMos, function (index, cmo) {\\n\\t\\t\\tcMos[cmo.dn] = cmo;\\n\\t\\t});\\n\\t\\t\\n\\t\\t// 调用资源获取对象的详细信息\\n\\t\\twindow.iemp.ui.pm.resource.MosRes.post({\\n\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\\"basicCondition\\\" : {\\n\\t\\t\\t\\t\\t\\\"dn\\\" : {\\n\\t\\t\\t\\t\\t\\t\\\"operator\\\" : \\\"in\\\",\\n\\t\\t\\t\\t\\t\\t\\\"value\\\" : JSON.stringify($.map(cMos, function (el) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn el.dn;\\n\\t\\t\\t\\t\\t\\t\\t}))\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"displayValue\\\" : {\\n\\t\\t\\t\\t\\t\\t\\\"operator\\\" : \\\"in\\\",\\n\\t\\t\\t\\t\\t\\t\\\"value\\\" : JSON.stringify(cMos)\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"relateCondition\\\" : {},\\n\\t\\t\\t\\t\\\"sortCondition\\\" : [],\\n\\t\\t\\t\\t\\\"fields\\\" : [],\\n\\t\\t\\t\\t\\\"pageNum\\\" : 1,\\n\\t\\t\\t\\t\\\"pageSize\\\" : 1000\\n\\t\\t\\t})\\n\\t\\t}, function (result) {\\n\\t\\t\\t// 校验返回参数是否合法\\n\\t\\t\\tif (result && $.isArray(result.moInfos) && result.moInfos.length > 0) {\\n\\t\\t\\t\\t$.each(result.moInfos, function (index, moInfo) {\\n\\t\\t\\t\\t\\tresult.moInfos[moInfo.dn] = result.moInfos[index];\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 获取mos\\n\\t\\t\\t\\tmos = tempCollectObjects = tempMos = $.map(cMos, function (cMo) {\\n\\t\\t\\t\\t\\t\\tvar displayValue = cMo.displayValue,\\n\\t\\t\\t\\t\\t\\toid = cMo.oid,\\n\\t\\t\\t\\t\\t\\tmo = null,\\n\\t\\t\\t\\t\\t\\tdn = cMo.dn;\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// 获取测量对象的displayValue\\n\\t\\t\\t\\t\\t\\tif (result.moInfos[dn]) {\\n\\t\\t\\t\\t\\t\\t\\tmo = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"dn\\\" : dn,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : displayValue ? displayValue : \\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"oid\\\" : oid,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"ip\\\" : result.moInfos[dn].ip,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"company\\\" : result.moInfos[dn].vendor,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"type\\\" : result.moInfos[dn].neType,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\" : result.moInfos[dn].name\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\treturn mo;\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tmos = tempMos = $.grep(mos, function (mo) {\\n\\t\\t\\t\\t\\t\\treturn !!mo;\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 调用回调函数\\n\\t\\t\\t\\tif ($.isFunction(callback)) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thandleServerError($scope.i18n.ne_object_not_exist);\\n\\t\\t\\t\\t// 画一个空图\\n\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t}\\n\\t\\t}, function (desc) {\\n\\t\\t\\thandleServerError(desc);\\n\\t\\t\\t// 画一个空图\\n\\t\\t\\tdrawEmptyChart();\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 根据指标参数获取指标详细信息(initStatus中调用)\\n\\t */\\n\\tgetMeasTypeInfoesFromCMeasType = function (indexKeys, cMeasTypes, count, callback) {\\n\\t\\tvar indexs = [],\\n\\t\\ttemp = [];\\n\\t\\t\\n\\t\\tif (indexKeys) {\\n\\t\\t\\tutils.getIndexIdsByKeys(indexKeys, function (indexes) {\\n\\t\\t\\t\\tcMeasTypes = $.map(indexes, function (index) {\\n\\t\\t\\t\\t\\t\\tif ($.isNumeric(index.indexId)) {\\n\\t\\t\\t\\t\\t\\t\\treturn index.indexId;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\thandler();\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\t$.each(cMeasTypes, function (index, measTypeId) {\\n\\t\\t\\t\\tif ($.inArray(measTypeId, temp) < 0) {\\n\\t\\t\\t\\t\\ttemp.push(measTypeId);\\n\\t\\t\\t\\t\\tif (temp.length >= 10) {\\n\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\tcMeasTypes = temp;\\n\\t\\t\\thandler();\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunction handler() {\\n\\t\\t\\t// 调用资源获取指标的详细信息\\n\\t\\t\\twindow.iemp.ui.pm.resource.CollectIndexesRes.get({\\n\\t\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\t\\\"basicCondition\\\" : {\\n\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : {\\n\\t\\t\\t\\t\\t\\t\\t\\\"operator\\\" : \\\"in\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"value\\\" : JSON.stringify(cMeasTypes)\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"relateCondition\\\" : {},\\n\\t\\t\\t\\t\\t\\\"sortCondition\\\" : [],\\n\\t\\t\\t\\t\\t\\\"fields\\\" : [],\\n\\t\\t\\t\\t\\t\\\"pageNum\\\" : 1,\\n\\t\\t\\t\\t\\t\\\"pageSize\\\" : 1000\\n\\t\\t\\t\\t})\\n\\t\\t\\t}, function (result) {\\t\\t\\t\\t\\n\\t\\t\\t\\t// 判断返回的数据是否合法\\n\\t\\t\\t\\tif (result && $.isArray(result.indexes) && result.indexes.length > 0) {\\n\\t\\t\\t\\t\\tconstructMeasInfoMap(result);\\n\\t\\t\\t\\t\\t// 取第一个指标组的资源类型作为整个的资源类型\\n\\t\\t\\t\\t\\tresourceType = result.indexes[0].resourceTypeId;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t// 获取指标信息\\n\\t\\t\\t\\t\\tmeasTypes = tempMeasTypes = $.map(result.indexes, function (index) {\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"id\\\" : index.indexId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\" : index.indexName,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"unit\\\" : index.indexUnit,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"dataType\\\" : index.dataType,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"resourceTypeId\\\" : index.resourceTypeId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexGroupId\\\" : index.indexGroupId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexGroupName\\\" : index.indexGroupName\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tmeasTypes = tempMeasTypes = $.grep(measTypes, function (el) {\\n\\t\\t\\t\\t\\t\\t\\treturn el.dataType !== \\\"STRING\\\" && el.dataType !== \\\"ENUM\\\";\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (cMeasTypes.length && cMeasTypes.length < measTypes.length) {\\n\\t\\t\\t\\t\\t\\tmeasTypes = tempMeasTypes = measTypes.slice(0, count);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t// 调用回调函数\\n\\t\\t\\t\\t\\tif ($.isFunction(callback)) {\\n\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// 画一个空图\\n\\t\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, function (desc) {\\n\\t\\t\\t\\thandleServerError(desc);\\n\\t\\t\\t\\t// 画一个空图\\n\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunction constructMeasInfoMap(r) {\\n\\t\\t\\tmeasInfo_map = r;\\n\\t\\t\\t$.each(measInfo_map.indexes, function (i, index) {\\n\\t\\t\\t\\tmeasInfo_map.indexes[\\\"indexId_\\\" + index.indexId] = index;\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\t\\n\\t},\\n\\t\\n\\t/**\\n\\t * 根据dn、资源类型获取指标详细信息(initStatus中调用)\\n\\t */\\n\\tgetMeasTypeInfoesFromDn = function (indexKeys, dn, displayValue, resType, count, callback) {\\n\\t\\tvar basicCondition = {\\n\\t\\t\\t\\\"dn\\\" : {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : dn\\n\\t\\t\\t},\\n\\t\\t\\t\\\"displayValue\\\" : {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : displayValue ? displayValue : undefined\\n\\t\\t\\t},\\n\\t\\t\\t\\\"resType\\\" : {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : resType\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\t\\n\\t\\tvar aUrl = window.location.search;\\n\\t\\tif ($.isNumeric(utils.getUrlParam(\\\"pollerId\\\", aUrl))) {\\n\\t\\t\\tbasicCondition.pollerId = {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : parseInt(utils.getUrlParam(\\\"pollerId\\\", aUrl), 10)\\n\\t\\t\\t};\\n\\t\\t\\tbasicCondition.isOnlyDisplayByPollerId = {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : true\\n\\t\\t\\t};\\n\\t\\t} else {\\n\\t\\t\\tbasicCondition.pollerId = {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : -1\\n\\t\\t\\t};\\n\\t\\t\\tbasicCondition.isOnlyDisplayByPollerId = {\\n\\t\\t\\t\\t\\\"operator\\\" : \\\"=\\\",\\n\\t\\t\\t\\t\\\"value\\\" : false\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 调用资源获取该dn对应的指标信息\\n\\t\\twindow.iemp.ui.pm.resource.CollectIndexesBindedByColObjRes.get({\\n\\t\\t\\t\\\"param\\\" : JSON.stringify({\\n\\t\\t\\t\\t\\\"basicCondition\\\" : basicCondition,\\n\\t\\t\\t\\t\\\"relateCondition\\\" : {\\n\\t\\t\\t\\t\\t\\\"field1\\\" : {\\n\\t\\t\\t\\t\\t\\t\\\"firstField\\\" : \\\"dn\\\",\\n\\t\\t\\t\\t\\t\\t\\\"secondField\\\" : \\\"displayValue\\\",\\n\\t\\t\\t\\t\\t\\t\\\"operator\\\" : \\\"&&\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"field2\\\" : {\\n\\t\\t\\t\\t\\t\\t\\\"firstField\\\" : \\\"field1\\\",\\n\\t\\t\\t\\t\\t\\t\\\"secondField\\\" : \\\"resType\\\",\\n\\t\\t\\t\\t\\t\\t\\\"operator\\\" : \\\"&&\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"sortCondition\\\" : [],\\n\\t\\t\\t\\t\\\"fields\\\" : [],\\n\\t\\t\\t\\t\\\"pageNum\\\" : 1,\\n\\t\\t\\t\\t\\\"pageSize\\\" : 1000\\n\\t\\t\\t})\\n\\t\\t}, function (result) {\\n\\t\\t\\t// 判断返回的数据是否合法\\n\\t\\t\\tif ($.isArray(result) && result.length > 0) {\\n\\t\\t\\t\\t// 记录资源类型\\n\\t\\t\\t\\tresourceType = resType;\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 根据id取指标信息\\n\\t\\t\\t\\tgetMeasTypeInfoesFromCMeasType(indexKeys, result, count, function () {\\n\\t\\t\\t\\t\\t// 调用回调函数\\n\\t\\t\\t\\t\\tif ($.isFunction(callback)) {\\n\\t\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// 画一个空图\\n\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t}\\n\\t\\t}, function (desc) {\\n\\t\\t\\thandleServerError(desc);\\n\\t\\t\\t// 画一个空图\\n\\t\\t\\tdrawEmptyChart();\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取空图的数据结构(handleHistoryData(用此返回值做参数))\\n\\t */\\n\\tgetEmptyChartData = function () {\\n\\t\\tvar groupQueryData = [];\\n\\t\\t\\n\\t\\tgroupQueryData.push([{\\n\\t\\t\\t\\t\\t\\\"dn\\\" : \\\"fake_dn\\\",\\n\\t\\t\\t\\t\\t\\\"displayValue\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\\"neName\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\\"indexId\\\" : \\\"fake_indexId\\\",\\n\\t\\t\\t\\t\\t\\\"indexName\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\\"indexUnit\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\\"indexValues\\\" : []\\n\\t\\t\\t\\t}\\n\\t\\t\\t]);\\n\\t\\t\\n\\t\\treturn {\\n\\t\\t\\t\\\"groupQueryData\\\" : groupQueryData\\n\\t\\t};\\n\\t},\\n\\t\\n\\t/**\\n\\t * 为了搜索的需求，当查询不到对象对应的指标的时候画个空图\\n\\t */\\n\\tdrawEmptyChart = function () {\\n\\t\\t// 隐藏欢迎面板\\n\\t\\tDOMS.panelWelcome.hide();\\n\\t\\t// 隐藏木有数据面板\\n\\t\\tDOMS.panelNoData.hide();\\n\\t\\t// 隐藏分页器\\n\\t\\tDOMS.paginator.hide();\\n\\t\\t\\n\\t\\tisShowPaginator = false;\\n\\t\\t\\n\\t\\tisEmptyChart = true;\\n\\t\\t\\n\\t\\t// TODO\\n\\t\\tlatestQueryCondition = {\\n\\t\\t\\t// 对象\\n\\t\\t\\t\\\"mos\\\" : \\\"\\\",\\n\\t\\t\\t// 指标\\n\\t\\t\\t\\\"indexIds\\\" : \\\"\\\",\\n\\t\\t\\t// 开始时间\\n\\t\\t\\t\\\"beginTime\\\" : new Date().valueOf() - 24 * 60 * 60 * 1000,\\n\\t\\t\\t// 结束时间\\n\\t\\t\\t\\\"endTime\\\" : new Date().valueOf()\\n\\t\\t};\\n\\t\\t\\n\\t\\thandleHistoryData(getEmptyChartData());\\n\\t\\t\\n\\t\\t// TODO\\n\\t\\tsetBtnStatus();\\n\\t\\t\\n\\t\\t// 隐藏slider\\n\\t\\tdestroyGlobalChartSlider();\\n\\t\\t\\n\\t\\t// 调用重置iframe大小\\n\\t\\tutils.resizeFrame();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 按照初始化状态进行查询\\n\\t */\\n\\tinitStatusQuery = function () {\\n\\t\\tif ($.isArray(moIndexs) && moIndexs.length > 0) {\\n\\t\\t\\tqueryHistoryTimeData();\\n\\t\\t\\t// 设置按钮状态\\n\\t\\t\\tsetBtnStatus();\\n\\t\\t} else if (mos.length === 0 || measTypes.length == 0) {\\n\\t\\t\\tDOMS.panelWelcome.hide();\\n\\t\\t\\t\\n\\t\\t\\t// TODO 画个空图\\n\\t\\t\\tdrawEmptyChart();\\n\\t\\t} else {\\n\\t\\t\\t// 设置显示(已删)setMeasTypes();\\n\\t\\t\\t\\n\\t\\t\\t// 先判断选的是网元还是测量对象\\n\\t\\t\\tvar hasCollectObject = false;\\n\\t\\t\\t$.each(mos, function (index, mo) {\\n\\t\\t\\t\\tif (!!mo.displayValue) {\\n\\t\\t\\t\\t\\thasCollectObject = true;\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\tif (!hasCollectObject || !isShowCollectObjectsPanel) {\\n\\t\\t\\t\\tselectNes();\\n\\t\\t\\t\\ttempMos = mos;\\n\\t\\t\\t\\t// 创建dn2Index,将tempMos作参数,并将dn2index传给按设备页面;\\n\\t\\t\\t\\tcreateDn2Index(tempMos, tempMeasTypes);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tselectCollectObject();\\n\\t\\t\\t\\ttempCollectObjects = mos;\\n\\t\\t\\t\\t// 创建Obj2Index,将tempCollectObjects作参数,并将Obj2Index传给按设备页面;\\n\\t\\t\\t\\tcreateObj2Index(tempCollectObjects, tempMeasTypes);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t// 按照初始状态查询\\n\\t\\t\\t// 调用查询方法查询数据曲线图\\n\\t\\t\\tqueryHistoryTimeData();\\n\\t\\t\\t\\n\\t\\t\\t// 根据资源类型的key获取选择对象的url (扩展用的)\\n\\t\\t\\tsetObjectSelectPageUrlByKey(resourceType);\\n\\t\\t\\t\\n\\t\\t\\t// 设置按钮状态\\n\\t\\t\\tsetBtnStatus();\\n\\t\\t\\t\\n\\t\\t\\t// 判断是否需要显示选择测量对象面板\\n\\t\\t\\tsetSelectCollectObjectPanel();\\n\\t\\t}\\n\\t},\\n\\t\\n\\t// 仅在(设置\\\"选择测量对象\\\"面板)时调用\\n\\tgetResourceTypeById = function (resourceTypeId, callback) {\\n\\t\\tcallback = $.isFunction(callback) ? callback : $.noop;\\n\\t\\t\\n\\t\\twindow.iemp.ui.pm.resource.ResourceTypesRes.get({\\n\\t\\t\\t\\\"param\\\" : JSON.stringify({})\\n\\t\\t}, function (result) {\\n\\t\\t\\tif (!result) {\\n\\t\\t\\t\\tresult = [];\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t$.each(result, function (index, resType) {\\n\\t\\t\\t\\tif (resType.resourceTypeId === resourceTypeId) {\\n\\t\\t\\t\\t\\tcallback(resType);\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}, function () {\\n\\t\\t\\tcallback();\\n\\t\\t});\\n\\t},\\n\\t\\n\\t/**\\n\\t * 初始化选择测量对象面板\\n\\t */\\n\\t/* initSelectCollectObjectsPanel */\\n\\t\\n\\tinitSelectCollectObjectsPanel = function () {\\n\\t\\tisShowCollectObjectsPanel = true;\\n\\t\\tsetSelectCollectObjectPanel();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置选择测量对象面板(第一点,为啥要后台呀)\\n\\t * 1、如果后台没有配置选择测量对象的配置项，不显示选择测量对象面板\\n\\t * 2、如果没有选择指标，不显示选择测量对象面板\\n\\t * 3、如果选择的指标对应的资源类型产品扩展了选择资源的界面，不显示选择测量对象面板\\n\\t * 4、除了以上三种场景，均显示选择测量对象面板\\n\\t */\\n\\tsetSelectCollectObjectPanel = function () {\\n\\n\\t},\\n\\t\\n\\tcreateMoIndexs = function (moIndexes, moIndexsArgs, callback) {\\n\\t\\tif (moIndexes) {\\n\\t\\t\\tvar indexKeys = $.map(moIndexes.split(\\\"|||\\\"), function (moIndex) {\\n\\t\\t\\t\\t\\tvar resourceTypeId = moIndex.split(\\\"~~\\\")[1];\\n\\t\\t\\t\\t\\tvar indexGroupKey = moIndex.split(\\\"~~\\\")[2];\\n\\t\\t\\t\\t\\tvar indexKey = moIndex.split(\\\"~~\\\")[3];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (resourceTypeId && indexGroupKey && indexKey) {\\n\\t\\t\\t\\t\\t\\treturn resourceTypeId + \\\"~~\\\" + indexGroupKey + \\\"~~\\\" + indexKey;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}).join(\\\"|||\\\");\\n\\t\\t\\t\\n\\t\\t\\tutils.getIndexIdsByKeys(indexKeys, function (indexes) {\\n\\t\\t\\t\\tmoIndexs = $.map(moIndexes.split(\\\"|||\\\"), function (moIndex) {\\n\\t\\t\\t\\t\\t\\tif (moIndex) {\\n\\t\\t\\t\\t\\t\\t\\tvar els = moIndex.split(\\\"~~\\\");\\n\\t\\t\\t\\t\\t\\t\\tvar dn = els[0];\\n\\t\\t\\t\\t\\t\\t\\tvar indexId = indexes[els[1] + \\\"~~\\\" + els[2] + \\\"~~\\\" + els[3]].indexId;\\n\\t\\t\\t\\t\\t\\t\\tvar displayValue = els[4];\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tif (dn && $.isNumeric(indexId)) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"dn\\\" : dn,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : indexId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : displayValue\\n\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tcallback();\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tmoIndexs = $.map(moIndexsArgs.split(\\\"|||\\\"), function (el) {\\n\\t\\t\\t\\t\\tif (el) {\\n\\t\\t\\t\\t\\t\\tvar els = el.split(\\\"~~\\\");\\n\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\\"dn\\\" : els[0],\\n\\t\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : els[1],\\n\\t\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : els[2]\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\n\\t\\t\\tcallback();\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * [getCompatibleHistoryTimeRange 兼容以前老的监控视图实现。老的用-2、0、1和2来分别标识最近六小时、\\n\\t * 最近一天、最近三天和最近一周，且将该字段存于框架的数据库中。新的需求要加上最近一小时、最近三小时、\\n\\t * 最近十二小时，老的机制没有办法扩展。新实现标识为小时的倍数，且不依赖按钮的顺序。以后保存监控视图\\n\\t * 改用historyTimeRange，不再用timeRange字段。]\\n\\t * @param  {[type]} timeRange [时间段]\\n\\t * @return {[type]}           [将老的实现中timeRange字段值转换成新的historyTimeRange的值]\\n\\t */\\n\\tgetCompatibleHistoryTimeRange = function (timeRange) {\\n\\t\\tvar result;\\n\\t\\t\\n\\t\\tswitch (timeRange) {\\n\\t\\tcase  - 2:\\n\\t\\t\\tresult = TIME_SPACE.LAST_SIX_HOURS;\\n\\t\\t\\tbreak;\\n\\t\\tcase 0:\\n\\t\\t\\tresult = TIME_SPACE.LAST_ONE_DAY;\\n\\t\\t\\tbreak;\\n\\t\\tcase 1:\\n\\t\\t\\tresult = TIME_SPACE.LAST_THREE_DAY;\\n\\t\\t\\tbreak;\\n\\t\\tcase 2:\\n\\t\\t\\tresult = TIME_SPACE.LAST_ONE_WEEK;\\n\\t\\t\\tbreak;\\n\\t\\tdefault:\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn result;\\n\\t},\\n\\tgetDataInfoByCache=function(dataKey){\\n\\t\\t\\tvar result=\\\"\\\";\\n\\t\\t\\tsetting = {\\n\\t\\t\\turl : \\\"/rest/i2000/pm/topn/linkHistoy/getData\\\",\\n\\t\\t\\tasync : false,\\n\\t\\t\\tdataType : \\\"text\\\",\\n\\t\\t\\tdata : {\\n\\t\\t\\t\\t\\\"linkHistoryDataId\\\" : dataKey\\n\\t\\t\\t},\\n\\t\\t\\tsuccess : function (serverInfo) {\\n\\t\\t\\t\\tresult=serverInfo;\\n\\t\\t\\t},\\n\\t\\t\\terror : function (jqXHR, textStatus, errorThrown, errorCallback) {\\n\\t\\t\\t\\tconsole.log(\\\"request error\\\");\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\tiemp.http.get(setting);\\n\\t\\treturn result;\\n\\t},\\n\\t/**\\n\\t * 初始化状态\\n\\t */\\n\\tinitStatus = function () {\\n\\t\\t// 判断是否是框架传入的参数\\n\\t\\tvar aUrl = window.location.search;\\n\\t\\t\\n\\t\\tif (iemp && iemp.portlet && $.isFunction(iemp.portlet.getData)) {\\n\\t\\t\\taUrl = iemp.portlet.getData();\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 获取对象参数\\n\\t\\tvar objects = window.iemp.ui.pm.Utils.getUrlParam(\\\"objects\\\", aUrl) || window.iemp.ui.pm.Utils.getUrlParam(\\\"resources\\\", aUrl),\\n\\t\\t// TODO 使用旧接口\\n\\t\\t// 获取指标参数\\n\\t\\tindexs = window.iemp.ui.pm.Utils.getUrlParam(\\\"indexs\\\", aUrl),\\n\\t\\tindexKeys = window.iemp.ui.pm.Utils.getUrlParam(\\\"indexes\\\", aUrl)\\n\\t\\t\\t// 获取资源类型\\n\\t\\t\\tresType = window.iemp.ui.pm.Utils.getUrlParam(\\\"resType\\\", aUrl),\\n\\t\\t// 获取时间范围参数\\n\\t\\ttimeRange = parseInt(window.iemp.ui.pm.Utils.getUrlParam(\\\"timeRange\\\", aUrl), 10),\\n\\t\\t//获取时间范围参数新的接口用\\n\\t\\thistoryTimeRange = !objects ? TIME_SPACE.LAST_ONE_HOUR : (parseInt(window.iemp.ui.pm.Utils.getUrlParam(\\\"timeRange\\\", aUrl), 10) || TIME_SPACE.LAST_ONE_HOUR),\\n\\t\\t// 显示指标个数\\n\\t\\tcount = $.isNumeric(window.iemp.ui.pm.Utils.getUrlParam(\\\"count\\\", aUrl)) ? parseInt(window.iemp.ui.pm.Utils.getUrlParam(\\\"count\\\", aUrl), 10) : 10,\\n\\t\\t// 对象\\n\\t\\tcMos = [],\\n\\t\\t// 指标\\n\\t\\tcMeasTypes = [],\\n\\t\\t// 开始时间\\n\\t\\tcBeginTime = $.isNumeric(window.iemp.ui.pm.Utils.getUrlParam(\\\"startTime\\\", aUrl)) ? parseInt(window.iemp.ui.pm.Utils.getUrlParam(\\\"startTime\\\", aUrl), 10) : new Date().valueOf(),\\n\\t\\t// 结束时间;\\n\\t\\tcEndTime = $.isNumeric(window.iemp.ui.pm.Utils.getUrlParam(\\\"endTime\\\", aUrl)) ? parseInt(window.iemp.ui.pm.Utils.getUrlParam(\\\"endTime\\\", aUrl), 10) : new Date().valueOf();\\n\\t\\t\\n\\t\\tvar moIndexsArgs = window.iemp.ui.pm.Utils.getUrlParam(\\\"moIndexs\\\", aUrl);\\n\\t\\tvar moIndexes = window.iemp.ui.pm.Utils.getUrlParam(\\\"moIndexes\\\", aUrl);\\n\\t\\tvar comefrom = window.iemp.ui.pm.Utils.getUrlParam(\\\"from\\\", aUrl);\\n\\t\\t\\n\\t\\t// heyuanguang\\n\\t\\t//获取监控视图传过来的数据\\n\\t\\tvar monitorPortletID = window.iemp.ui.pm.Utils.getUrlParam(\\\"monitorPortletID\\\", aUrl);\\n\\t\\t\\n\\t\\t// 判断有无传入时间条件\\n\\t\\tif ($.isNumeric(timeRange) && $.isNumeric(getCompatibleHistoryTimeRange(timeRange))) {\\n\\t\\t\\ttimeSpace = getCompatibleHistoryTimeRange(timeRange);\\n\\t\\t} else {\\n\\t\\t\\tif ($.isNumeric(historyTimeRange)) {\\n\\t\\t\\t\\ttimeSpace = historyTimeRange;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 如果传不合法的参数，默认展示最近一个小时\\n\\t\\tif (!$.isNumeric(timeSpace)) {\\n\\t\\t\\ttimeSpace = TIME_SPACE.LAST_ONE_HOUR;\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar selected = DOMS.containerTimeRange.find(\\\"a[time-space=\\\" + timeSpace + \\\"]\\\");\\n\\t\\t$(selected).addClass(\\\"a4\\\");\\n\\t\\t$(selected).closest(\\\"span\\\").siblings(\\\"span\\\").find(\\\"a\\\").removeClass(\\\"a4\\\");\\n\\t\\t\\n\\t\\tif (moIndexsArgs || moIndexes) {\\n\\t\\t\\t// 通过moIndexes 或 moIndexsArgs 构造\\n\\t\\t\\tcreateMoIndexs(moIndexes, moIndexsArgs, function () {\\n\\t\\t\\t\\t// 在这里查询\\n\\t\\t\\t\\tinitStatusQuery();\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse if (monitorPortletID && monitorPortletID != null) {\\n\\t\\t\\t\\tvar monitorData = null;\\n\\t\\t\\t\\t// Topn 比较特殊，数据不是存在portlet的data属性 \\n\\t\\t\\t\\tif(comefrom === \\\"topnMonitorView\\\")\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tvar mapKey= window.iemp.ui.pm.Utils.getUrlParam(\\\"mapKey\\\", tUrl)\\n\\t\\t\\t\\t\\tvar resCond=getDataInfoByCache(mapKey);\\n\\t\\t\\t\\t\\tvar tUrl = window.location.search;\\n\\t\\t\\t\\t\\tvar timeId = window.iemp.ui.pm.Utils.getUrlParam(\\\"topnTimeIndex\\\", tUrl);\\n\\t\\t\\t\\t\\t//var resCond = window.opener.getTopnResourceCondition(monitorPortletID, timeId);\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif(resCond)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tresCond=JSON.parse(resCond);\\n\\t\\t\\t\\t\\t\\tvar monitorViewParseData = $.map(resCond, function (el) {\\n\\t\\t\\t\\t\\t\\t\\tif(isHistoryQueryTimeIntervalEnable())\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"dn\\\" : el.dn,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : el.indexId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : el.displayValue ? el.displayValue : \\\"\\\",   // 不能为undefined\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"aggrType\\\" : el.aggrType,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"displayPeriod\\\" : 300\\n\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"dn\\\" : el.dn,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : el.indexId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"displayValue\\\" : el.displayValue ? el.displayValue : \\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"aggrType\\\" : el.aggrType\\n\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tif(monitorViewParseData)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tmonitorData = JSON.stringify(monitorViewParseData);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// 如果原首页portlet被关\\n\\t\\t\\t\\t\\t\\twindow.iemp.ui.pm.Utils.windowLocation(\\\"/pm/themes/default/pm/app/history_pm_alone.html?curMenuId=com.iemp.app.pm.historypm\\\", window.parent);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmonitorData = getMonitorDataByPortletId(monitorPortletID);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif(monitorData)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t// 独立开分支\\n\\t\\t\\t\\t\\tdealDataFromMonitorView(monitorData, indexs);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\telse {\\n\\t\\t\\t// 判断有没有提供对象参数\\n\\t\\t\\tif (objects) {\\n\\t\\t\\t\\t// 获取对象结构\\n\\t\\t\\t\\tcMos = getMosParamsFromUrlParam(objects);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 根据对象参数获取对象的详细信息\\n\\t\\t\\t\\tgetMoInfoesFromCMos(cMos, function () {\\n\\t\\t\\t\\t\\t// 判断有没有传入指标参数\\n\\t\\t\\t\\t\\tif (indexs || indexKeys) {\\n\\t\\t\\t\\t\\t\\t// 获取指标id集合\\n\\t\\t\\t\\t\\t\\tcMeasTypes = getMeasTypesParamFromUrlParam(indexs || \\\"\\\");\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// 根据指标参数获取指标详细信息\\n\\t\\t\\t\\t\\t\\tgetMeasTypeInfoesFromCMeasType(indexKeys, cMeasTypes, cMeasTypes.length, function () {\\n\\t\\t\\t\\t\\t\\t\\t// 按照初始状态查询\\n\\t\\t\\t\\t\\t\\t\\tinitStatusQuery();\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t} else if (resType && cMos.length === 1) {\\n\\t\\t\\t\\t\\t\\t// 传入了资源类型，并且只有一个对象，则调用根据dn获取指标的接口\\n\\t\\t\\t\\t\\t\\tgetMeasTypeInfoesFromDn(indexKeys, cMos[0].dn, cMos[0].displayValue, resType, count, function () {\\n\\t\\t\\t\\t\\t\\t\\t// 按照初始状态查询\\n\\t\\t\\t\\t\\t\\t\\tinitStatusQuery();\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t//如果是从监控视图跳转过来，则默认显示空图\\n\\t\\t\\t\\tif (comefrom === \\\"monitorView\\\" || comefrom === \\\"topnMonitorView\\\") {\\n\\t\\t\\t\\t\\tdrawEmptyChart();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 设置显示(已删)setMeasTypes();setMos();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 显示对应查询面板(无调用)\\n\\t */\\n\\tshowTabPanel = function (target) {\\n\\t\\tif (!target) {\\n\\t\\t\\t// 如果没有提供目标，以默认目标为准\\n\\t\\t\\ttarget = \\\"defaultPanel\\\";\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 隐藏相关面板\\n\\t\\tDOMS.panelError.hide();\\n\\t\\tDOMS.panelLoading.hide();\\n\\t\\t\\n\\t\\t// 显示对应面板\\n\\t\\tDOMS.containerTabPanels.find(\\\"#\\\" + target).show().siblings(\\\".tab-panel\\\").hide();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 获取选中面板的target(无调用)\\n\\t */\\n\\tgetSelectedTabTarget = function () {\\n\\t\\treturn DOMS.containerTabs.find(\\\"input[name=tabTitlesRadio]:checked\\\").closest(\\\"span\\\").attr(\\\"target-panel\\\");\\n\\t},\\n\\t\\n\\t/**\\n\\t * 初始化查询扩展标签(只在main方法调用)\\n\\t */\\n\\tinitQueryTabs = function () {\\n\\t\\t// 调用远程资源获取扩展信息\\n\\t\\twindow.iemp.ui.pm.resource.HistoryExtendcond.get({\\n\\t\\t\\t\\\"param\\\" : \\\"{}\\\"\\n\\t\\t}, function (result) {\\n\\t\\t\\tvar maxNameLen = 25;\\n\\t\\t\\tvar length = DOMS.containerTabs.closest(\\\"td\\\").width();\\n\\t\\t\\t\\n\\t\\t\\tif (length < 1000) {\\n\\t\\t\\t\\tmaxNameLen = 15;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmaxNameLen = 25;\\n\\t\\t\\t}\\n\\t\\t\\tif ($.isArray(result) && result.length) {\\n\\t\\t\\t\\t// 扩展信息有效，遍历苦熬战信息\\n\\t\\t\\t\\tvar tr = '<tr\\\"><td width=\\\"25%\\\"></td><td width=\\\"25%\\\"></td><td width=\\\"25%\\\"></td><td width=\\\"25%\\\"></td></tr>';\\n\\t\\t\\t\\tvar iCount = 0;\\n\\t\\t\\t\\t$.each(result, function (index, extendCond) {\\n\\t\\t\\t\\t\\t// 获取页签DOM结构\\n\\t\\t\\t\\t\\tvar tab = getQueryExtTabDom(extendCond.key, extendCond.name, extendCond.url, maxNameLen);\\n\\t\\t\\t\\t\\tif (index < 4) {\\n\\t\\t\\t\\t\\t\\tDOMS.containerTabs.find(\\\"table tr:eq(0) > td:eq(\\\" + (index + 1) + \\\")\\\").append(tab);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tiCount = index % 4;\\n\\t\\t\\t\\t\\t\\tif (iCount == 0) {\\n\\t\\t\\t\\t\\t\\t\\tDOMS.containerTabs.find(\\\"table\\\").append(tr);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tDOMS.containerTabs.find(\\\"table tr:eq(\\\" + Math.floor((index / 4)) + \\\") > td:eq(\\\" + (iCount) + \\\")\\\").append(tab);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t$('#PM_HistoryPm_Div_NavhlListTit').show();   // 标签都干掉了\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$('#PM_HistoryPm_Div_NavhlListTit').hide();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t},\\n\\t\\n\\t// 只有getAllThreshold用到\\n\\tcontainsObj = function (array, obj) {\\n\\t\\tif (!array || array.length == 0) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\t\\n\\t\\tfor (var index in array) {\\n\\t\\t\\tif (array[index] === obj || array[index].toString() === obj) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\t// 导出历史数据时用到\\n\\tgetAllThreshold = function (charts) {\\n\\t\\tvar indexIds = [];\\n\\t\\tif (charts && $.isArray(charts)) {\\n\\t\\t\\t$.each(charts, function (index, chart) {\\n\\t\\t\\t\\tif (chart.seriesList) {\\n\\t\\t\\t\\t\\tif (chart.seriesList.series && $.isArray(chart.seriesList.series)) {\\n\\t\\t\\t\\t\\t\\t$.each(chart.seriesList.series, function (i, serie) {\\n\\t\\t\\t\\t\\t\\t\\tif (!containsObj(indexIds, serie.indexId)) {\\n\\t\\t\\t\\t\\t\\t\\t\\tindexIds.push(serie.indexId);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\tvar thresholds = {};\\n\\t\\tvar queryCondition = [];\\n\\t\\t$.each(indexIds, function (i, indexId) {\\n\\t\\t\\tvar indexInfo = {\\n\\t\\t\\t\\t\\\"indexId\\\" : indexId,\\n\\t\\t\\t\\t\\\"indexName\\\" : ''\\n\\t\\t\\t};\\n\\t\\t\\tqueryCondition.push(JSON.stringify(indexInfo));\\n\\t\\t});\\n\\t\\tthresholds = queryThreshold(queryCondition);\\n\\t\\treturn thresholds;\\n\\t}\\n\\t\\n\\tqueryThreshold = function (indexInfos) {\\n\\t\\tvar result = null;\\n\\t\\tvar setting = {\\n\\t\\t\\turl : \\\"/rest/i2kpm/threshold\\\",\\n\\t\\t\\tasync : false,\\n\\t\\t\\tdataType : \\\"json\\\",\\n\\t\\t\\tdata : {\\n\\t\\t\\t\\t\\\"param\\\" : JSON.stringify(indexInfos)\\n\\t\\t\\t},\\n\\t\\t\\tsuccess : function (data) {\\n\\t\\t\\t\\tresult = data.result;\\n\\t\\t\\t},\\n\\t\\t\\terror : function (e) {\\n\\t\\t\\t\\t// 获取阈值失败\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\tiemp.http.post(setting);\\n\\t\\treturn result;\\n\\t}\\n\\t\\n\\t/**\\n\\t * 导出历史数据\\n\\t */\\n\\texportToCVS = function () {\\n\\t\\tvar thresholds = getAllThreshold(charts);\\n\\t\\tif ($.isFunction(window.iemp.ui.pm.history.Util.exportData)) {\\n\\t\\t\\tif ($.isFunction(iemp.http.updateRand)) {\\n\\t\\t\\t\\t$scope.exportURL = \\\"/pm/pmDownload?roarand=\\\" + encodeURIComponent(iemp.http.updateRand());\\n\\t\\t\\t\\t$(\\\"#exportForm\\\").attr(\\\"action\\\", $scope.exportURL);\\n\\t\\t\\t}\\n\\t\\t\\t\\n            window.iemp.ui.pm.history.Util.exportData(charts, thresholds, \\\"#exportForm\\\", initTimeZone, null, function ($form) {\\n                var ids = $.map(tempMeasTypes, function (el) { return el.id; }).join(ARR_SAPERATOR);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tvar mos;\\n\\t\\t\\t\\tif (tempMos.length) {\\n\\t\\t\\t\\t\\tmos = $.map(tempMos, function (el) {\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tdn : el.dn\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t} else if (tempCollectObjects.length) {\\n\\t\\t\\t\\t\\tmos = $.map(tempCollectObjects, function (el) {\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tdn : el.dn,\\n\\t\\t\\t\\t\\t\\t\\t\\tdisplayValue : el.displayValue\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tmos = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t$form.find('#exportIndexeIds').attr('value', ids);\\n\\t\\t\\t\\t$form.find('#exportMos').attr('value', JSON.stringify(mos));\\n\\t\\t\\t});\\n\\t\\t}\\n\\t};\\n\\t\\t\\n\\t$(\\\"body\\\").bind({\\n\\t\\tmousedown : function (event) {\\n\\t\\t\\tvar elm = event.srcElement || event.target;\\n\\t\\t\\tif (elm.id == \\\"PM_MonitorView_Span_Setting\\\") {\\n\\t\\t\\t\\tmonitorSettingHandler();\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tif (elm.id == \\\"PM_Setting_Div\\\") {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tif (elm.id == \\\"pm_main_body\\\" || !isSettingDiv(elm)) {\\n\\t\\t\\t\\thideMonitorSettingDiv();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\t\\n\\tfunction isSettingDiv(elm){\\n\\t     if(elm.parentNode.id == \\\"PM_Setting_Div\\\"){\\n\\t\\t      return true;\\n\\t\\t }else if(elm.parentNode.id == \\\"pm_main_body\\\"){\\n\\t\\t      return false;\\n\\t\\t }else{\\n\\t\\t     return isSettingDiv(elm.parentNode);\\n\\t\\t }\\n\\t}\\n\\t\\n\\tvar monitorSettingHandler = function(){\\n\\t\\t if($(\\\"#PM_Setting_Div\\\").css(\\\"display\\\")==\\\"none\\\"){\\n\\t\\t\\t$(\\\"#PM_Setting_Div\\\").show();\\n\\t\\t\\t$scope.pm_monitorView_layout.attr(\\\"display\\\",true, true);   // 这个在前面\\n\\t\\t\\t$scope.pm_monitorView_layout.setCheckedByValue(LAYOUT);\\n\\n\\t\\t    // pm_yAxis_sync_radio,YAXIS_SYN\\t\\t\\t\\n\\t\\t }\\n\\t\\t else {\\n\\t\\t\\t$(\\\"#PM_Setting_Div\\\").hide();\\n\\t\\t }\\n\\t}\\n\\t\\n\\tfunction hideMonitorSettingDiv() {\\n\\t\\t$(\\\"#PM_Setting_Div\\\").hide();\\n\\t}\\n\\t\\n\\tvar LAYOUT = null;\\n\\t//布局常量\\n\\tvar MONITOR_LAYOUT =  {\\n\\t    CURVE:1,\\n\\t\\tFORM:2,\\n\\t\\tCURVE_AND_FORM:3\\n\\t};\\n\\t\\n\\t//Y轴同步常量\\n\\tvar MAX_YAXIS = {\\n\\t    SYN: 1,\\n\\t\\tNOT_SYN: 2\\n\\t};\\n\\teval(\\\"$('#btn_historyDetails').click(function (event){okhandler();})\\\");\\n    eval(\\\"$('#btn_export').click(function (event){dataExportAction();})\\\");\\n\\n\\t//layout\\n\\t$scope.pm_monitorView_layout_radio_ListValues = {\\n\\t\\tcurve: {\\n\\t\\t\\tchecked: false,\\n\\t\\t\\tlabel: $scope.i18n.curve_radio_label,\\n\\t\\t\\tvalue: MONITOR_LAYOUT.CURVE\\n\\t\\t},\\n\\t\\tform: {\\n\\t\\t\\tchecked: false,\\n\\t\\t\\tlabel: $scope.i18n.form_radio_label,\\n\\t\\t\\tvalue: MONITOR_LAYOUT.FORM\\n\\t\\t},\\n\\t\\tboth: {\\n\\t\\t\\tchecked: true,\\n\\t\\t\\tlabel: $scope.i18n.both_radio_label,\\n\\t\\t\\tvalue: MONITOR_LAYOUT.CURVE_AND_FORM\\n\\t\\t}\\n\\t};\\n    \\n    //yAxis_sync\\n\\t$scope.pm_yAxis_sync_radio_ListValues = {\\n\\t\\tYES: {\\n\\t\\t\\tchecked: true,\\n\\t\\t\\tlabel: 'Yes',\\n\\t\\t\\tvalue: MAX_YAXIS.SYN\\n\\t\\t},\\n\\t\\tNO: {\\n\\t\\t\\tchecked: false,\\n\\t\\t\\tlabel: 'No',\\n\\t\\t\\tvalue: MAX_YAXIS.NOT_SYN\\n\\t\\t}\\n\\t};\\n\\t\\n    $scope.layoutClickHandler = function(id, key) {\\n\\t\\tLAYOUT=$scope.pm_monitorView_layout.getCheckedValue();\\n\\t\\tsetLayout(LAYOUT);\\n\\t\\t// saveUserMonitorSetting;\\n\\t};\\n\\n\\t$scope.yAxisClickHandler=function(id,key){\\n        YAXIS_SYN=$scope.pm_yAxis_sync_radio.getCheckedValue();\\n\\t\\t// saveUserMonitorSetting;\\n\\t};\\n\\t\\n\\tvar setLayout = function(layout){\\n\\t\\t    if(MONITOR_LAYOUT.CURVE == parseInt(layout,10)){\\n\\t\\t\\t\\t// set margin\\n\\t\\t\\t\\t$(\\\".PM_HistoryPm_Div_TableContainer_s\\\").css(\\\"margin-left\\\",\\\"20px\\\");\\n\\t\\t\\t\\t$(\\\".PM_HistoryPm_Div_ChartContainer_s\\\").css(\\\"margin-right\\\",\\\"20px\\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// set width\\n\\t\\t\\t\\t$(\\\".history_chart\\\").css(\\\"width\\\",\\\"100%\\\");\\n\\t\\t\\t\\t$(\\\".history_chart\\\").css(\\\"display\\\",\\\"block\\\");\\n\\t\\t\\t\\t$(\\\".history_box\\\").css(\\\"display\\\",\\\"none\\\");\\n\\t\\t\\t} else if(MONITOR_LAYOUT.FORM == parseInt(layout,10)) {\\n\\t\\t\\t\\t// set margin\\n\\t\\t\\t\\t$(\\\".PM_HistoryPm_Div_TableContainer_s\\\").css(\\\"margin-left\\\",\\\"20px\\\");\\n\\t\\t\\t\\t$(\\\".PM_HistoryPm_Div_ChartContainer_s\\\").css(\\\"margin-right\\\",\\\"20px\\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// set width\\n\\t\\t\\t\\t$(\\\".history_box\\\").css(\\\"width\\\",\\\"100%\\\");\\n\\t\\t\\t\\t$(\\\".history_chart\\\").css(\\\"display\\\",\\\"none\\\");\\n\\t\\t\\t\\t$(\\\".history_box\\\").css(\\\"display\\\",\\\"block\\\");\\n\\t\\t\\t} else{\\n\\t\\t\\t\\t// set margin\\n\\t\\t\\t\\t$(\\\".PM_HistoryPm_Div_TableContainer_s\\\").css(\\\"margin-left\\\",\\\"25px\\\");\\n\\t\\t\\t\\t$(\\\".PM_HistoryPm_Div_ChartContainer_s\\\").css(\\\"margin-right\\\",\\\"0px\\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// set width\\n\\t\\t\\t    $(\\\".history_chart\\\").css(\\\"width\\\",\\\"50%\\\");\\n\\t\\t\\t\\t$(\\\".history_box\\\").css(\\\"width\\\",\\\"50%\\\");\\n\\t\\t\\t\\t$(\\\".history_box\\\").css(\\\"display\\\",\\\"block\\\");\\n\\t\\t\\t\\t$(\\\".history_chart\\\").css(\\\"display\\\",\\\"block\\\");\\n\\t\\t\\t}\\n\\t\\t\\tLAYOUTCHANGE = true;\\n\\t\\t\\tresizeAction();\\n\\t\\t\\tLAYOUTCHANGE = false;\\n\\t}\\n\\t\\n\\tvar saveUserMonitorSetting = function(){\\n\\t    var condition = {\\n\\t\\t\\t\\t\\\"moduleName\\\": \\\"PM.monitorView\\\"\\n\\t\\t\\t}\\n\\t\\tcondition[MONITOR_SETTING_KEY] =  JSON.stringify({\\n\\t\\t\\tlayout:LAYOUT,\\n\\t\\t\\tyAxisSyn:YAXIS_SYN,\\n\\t\\t\\tcounterAdjust:COUNTER_ADJUST\\n\\t\\t});\\n        window.iemp.ui.pm.resource.PmProfileRes.put({\\n\\t\\t\\t\\\"param\\\":JSON.stringify(condition)\\n\\t\\t},(function (result) { \\n\\t\\t     \\n\\t\\t}),(function (desc) {                \\n\\t\\t}));\\n\\t}\\n\\t\\n\\t/**\\n\\t * 获取历史性能数据保存的日期范围\\n\\t */\\t\\n\\tgetHistoryDateRange = function(){\\n\\t\\tvar daterangestr = new Array(2);\\n\\t\\tvar setting = {\\n\\t\\t\\turl : \\\"/rest/i2000/pm/ui/gethistorydaterange\\\",\\n\\t\\t\\tasync : false,\\n\\t\\t\\tdataType : \\\"text\\\",\\n\\t\\t\\tdata : null,\\n\\t\\t\\tsuccess : function (serverInfo) {\\n\\t\\t\\t//后台返回来的历史性能保存时间范围\\n\\t\\t\\t\\tif (serverInfo) {\\n\\t\\t\\t\\t\\tvar arr=JSON.parse(serverInfo);\\n\\t\\t\\t\\t\\tdaterangestr = arr;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t},\\n\\t\\t\\terror : function (e) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\tiemp.http.get(setting);\\n\\t\\treturn daterangestr;\\n\\t};\\n    \\n    /**\\n\\t * 获取历史性能按时间间隔查询是否启用\\n\\t */\\t\\n\\t var isTimeIntervalEnable; \\n\\tisHistoryQueryTimeIntervalEnable = function(){\\n\\t\\tif(isTimeIntervalEnable != null)\\n\\t\\t{\\n\\t\\t\\treturn isTimeIntervalEnable;\\n\\t\\t}\\n\\t\\tvar isEnable = false;\\n\\t\\tvar setting = {\\n\\t\\t\\turl : \\\"/rest/i2000/pm/ui/isHistoryQueryTimeIntervalEnable\\\",\\n\\t\\t\\tasync : false,\\n\\t\\t\\tdataType : \\\"text\\\",\\n\\t\\t\\tdata : null,\\n\\t\\t\\tsuccess : function (serverInfo) {\\n\\t\\t\\t\\tif (serverInfo) {\\n                    isEnable = serverInfo;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\terror : function (e) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t};\\n\\t\\tiemp.http.get(setting);\\n\\t\\tisTimeIntervalEnable = (isEnable === \\\"true\\\" ? true : false);\\n\\t\\treturn isTimeIntervalEnable;\\n\\t};\\n\\t\\n\\t// zoom\\n\\t\\n\\t/******* 分页相关 **********/\\n\\t\\n\\t/**\\n\\t * 分页事件处理\\n\\t */\\n\\tvar gotoPage = function (aIndex, aSize) {\\n\\t\\tpageIndex = aIndex;\\n\\t\\t\\n\\t\\tqueryHistoryTimeData();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置分页器\\n\\t */\\n\\tsetPaginator = function (result) {\\n\\t\\tif ($scope.eviewPagination && !paginator) {\\n\\t\\t\\tpaginator = true;\\n\\t\\t\\t$scope.eviewPagination.attr(\\\"curPage\\\", {\\n\\t\\t\\t\\t\\\"pageIndex\\\" : 1,\\n\\t\\t\\t\\t\\\"isStopCallbackInvoke\\\" : true\\n\\t\\t\\t});\\n\\t\\t\\t$scope.eviewPagination.attr(\\\"totalRecords\\\", result.totalPage * 20);\\n\\t\\t}\\n\\t\\tisShowPaginator = true;\\n\\t},\\n\\t\\n\\t/**\\n\\t *  选中设备\\n\\t */\\n\\tselectNes = function () {\\n\\t\\t// 清空(按)测量对象\\n\\t\\ttempCollectObjects = [];\\n\\n\\t\\t// 初始化按钮\\n\\t\\tsetBtnStatus();\\n\\t\\t// 设置输入框内容 setMos();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 选中测量对象\\n\\t */\\n\\tselectCollectObject = function () {\\n\\t\\t// 清空(按)设备\\n\\t\\ttempMos = [];\\n\\t\\t\\n\\t\\t// 初始化按钮\\n\\t\\tsetBtnStatus();\\n\\t\\t// 设置输入框内容 setMos();\\n\\t},\\n\\t\\n\\t/**\\n\\t * 设置按钮状态\\n\\t */\\n\\tsetBtnStatus = function (options) {\\n\\t\\toptions = options || {};\\n\\t\\t\\n\\t\\tvar isShowSavePortletDialogDisabled = !!options.showSavePortletDialog || charts.length === 0 || charts.length !== 1 || isEmptyChart;\\n\\t\\tvar isExportDisabled = !!options.exports || charts.length === 0 || isEmptyChart;\\n\\t\\tvar isSearchDisabled = !!options.search || ((tempCollectObjects.length === 0 && tempMos.length === 0) || tempMeasTypes.length === 0);\\n\\t\\tvar isDisableTimeRange = !!options.timerange;\\n\\t\\t\\n\\t\\ttry {\\n\\t\\t\\tif (getTimeRangeArr() === TIME_SPACE.CUSTOMIZE && $scope.cusStartTime && $scope.cusEndTime) {\\n\\t\\t\\t\\tisSearchDisabled = isSearchDisabled || !$scope.cusStartTime.getUTCDateTime() || !$scope.cusEndTime.getUTCDateTime();\\n\\t\\t\\t\\tif (!$scope.cusStartTime.isValid()) {\\n\\t\\t\\t\\t\\tisSearchDisabled = !$scope.cusStartTime.isValid();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (!$scope.cusEndTime.isValid()) {\\n\\t\\t\\t\\t\\tisSearchDisabled = !$scope.cusEndTime.isValid()\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} catch (e) {\\n\\t\\t\\tconsole.log(\\\"getUTCDateTime failed\\\", e);\\n\\t\\t}\\n\\t\\t\\n\\t\\tsetBtnShowSavePortletDialogDisabled(isShowSavePortletDialogDisabled);\\n\\t\\tsetBtnExportDisabled(isExportDisabled);\\n\\t\\tsetBtnSearchDisabled(isSearchDisabled);\\n\\t\\tsetBtnTimeRangeDisabled(isDisableTimeRange);\\n\\t\\t// setting buttonn status is same to exportDataBtn\\n\\t\\tsetBtnSettingDisabled(isExportDisabled);\\n\\t},\\n\\t\\t\\n\\tsetBtnsDisable = function()\\n\\t{\\n\\t\\tsetBtnStatus({\\n\\t\\t\\t\\\"search\\\" : true,\\n\\t\\t\\t\\\"timerange\\\" : true,\\n\\t\\t\\t\\\"showSavePortletDialog\\\" : true,\\n\\t\\t\\t\\\"exports\\\" : true\\n\\t\\t});\\n\\t},\\n\\t\\t\\n\\tsetBtnsEnable = function()\\n\\t{\\n\\t\\tsetBtnStatus();\\n\\t},\\t\\n\\t\\n\\t/******* 分页相关 **********/\\n\\t\\n\\t/******* 私有方法定义结束 **********/\\n\\t\\n\\t/******* 公共（scope）属性定义开始 *********/\\n\\t\\n\\t/******* 公共（scope）属性定义结束 *********/\\n\\t\\n\\t/******* 公共（scope）方法定义开始 **********/\\n\\t\\n\\t/******* 公共（scope）方法定义结束 **********/\\n\\t\\n\\t/******* App入口定义开始 ************/\\n\\t/**\\n\\t * App入口\\n\\t */\\n\\tmain = function () {\\n\\t\\taddHelpId();\\n\\t\\t/******* R3 New Add   **********/\\n\\t\\t// 异步加载iframe\\n\\t\\tdealAsyncIframe();\\n\\t\\t// 设置资源选择面板默认为收缩\\n\\t\\t\\n\\t\\tcollapseClick();\\n\\t\\t\\n\\t\\t// 设置radio默认选中按设备\\n\\t\\t$scope.selectResourceType.setCheckedByValue(1);\\n\\t\\t// inital settingPanel \\n\\t\\tsetSettingPanel();\\n\\n\\t\\t/******* 事件定义开始 **********/\\n\\t\\tsetEventsHandlers(\\\".iemp_main\\\", {\\n\\t\\t\\t\\n\\t\\t\\t// 选择时间范围\\n\\t\\t\\t\\\"click a[name='timeRangeItem']\\\" : function (evt) {\\n\\t\\t\\t\\tvar isTimeIntervalEnable = isHistoryQueryTimeIntervalEnable();\\n\\t\\t\\t\\t// 原先的面板展开时，禁用时间选项点击，针对只有一个自定义时间的时，用isTimeIntervalEnable加以处理\\n\\t\\t\\t\\tif (isDisabledTimeRangeSearch && !isTimeIntervalEnable) {  \\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tevt.preventDefault();\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tselectedTimeRangeItem = $(this);\\n\\t\\t\\t\\ttimeSpace = parseInt($(this).attr(\\\"time-space\\\"), 10);\\n\\t\\t\\t\\t// 设置样式\\n\\t\\t\\t\\t$(this).addClass(\\\"a4\\\");\\n\\t\\t\\t\\t$(this).closest(\\\"span\\\").siblings(\\\"span\\\").find(\\\"a\\\").removeClass(\\\"a4\\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif(!isTimeIntervalEnable)   // 此值默认需是false，否则需同步修改\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tsetBtnStatus();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (timeSpace === TIME_SPACE.CUSTOMIZE) {\\n\\t\\t\\t\\t\\tif(isTimeIntervalEnable && $(\\\"#customizeTimeRangeContainer\\\").is(\\\":visible\\\")) // 当前是展示的\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// 这段针对isTimeIntervalEnable\\n\\t\\t\\t\\t\\t\\t$(this).removeClass(\\\"a4\\\");\\n\\t\\t\\t\\t\\t\\ttimeSpace = 1;\\n\\t\\t\\t\\t\\t\\t// 当前是展示的，改为隐藏\\n\\t\\t\\t\\t\\t\\t$(\\\"#customizeTimeRangeContainer\\\").hide();\\n\\t\\t\\t\\t\\t\\t$(\\\"#customizeTimeRangeToLabel\\\").hide();\\n\\t\\t\\t\\t\\t\\t// 要不要立即查询呢？\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t$(\\\"#customizeTimeRangeContainer\\\").show();\\n\\t\\t\\t\\t\\tif (!$scope.cusEndTime && !$scope.cusStartTime) {\\n\\t\\t\\t\\t\\t\\t$(\\\"#customizeTimeRangeToLabel\\\").hide();\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tiemp.util.getServerTimeInfo(\\\"\\\", function (data) {\\n\\t\\t\\t\\t\\t\\t\\tvar daterange = getHistoryDateRange();\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tvar tempZone = getTimezone(initTimeZone);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t//初始化时间控件  这个时间控件还有问题。valid验证和chang事件\\n\\t\\t\\t\\t\\t\\t\\tvar dtc = new eview.widgets.DateTimeComponent($(\\\"#cusStartTime\\\"));\\n\\t\\t\\t\\t\\t\\t\\tdtc.setCalenderType(\\\"datetime\\\");\\n\\t\\t\\t\\t\\t\\t\\tdtc.setDateformat(\\\"yyyy-mm-dd hh:mm\\\");\\n\\t\\t\\t\\t\\t\\t\\tdtc.setTimeformat('hh:mm');\\n\\t\\t\\t\\t\\t\\t\\tdtc.on(\\\"change\\\", null, $scope.cusTimeChangedHandler);\\n\\t\\t\\t\\t\\t\\t\\t$scope.cusStartTime = dtc;\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tvar parameter = {\\n\\t\\t\\t\\t\\t\\t\\t\\ttype : \\\"datetime\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\tdateFormat : \\\"yyyy-mm-dd hh:mm\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\ttimeFormat : \\\"hh:mm\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\ttimezone : tempZone,\\n\\t\\t\\t\\t\\t\\t\\t\\tdefaultDate : data.utcTime,\\n\\t\\t\\t\\t\\t\\t\\t\\ttimezoneId : data.timeZoneId,\\n\\t\\t\\t\\t\\t\\t\\t\\tmaxDate : daterange[1],\\n\\t\\t\\t\\t\\t\\t\\t\\tminDate : daterange[0]\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tdtc.setDateTimeParameters(parameter);\\n\\t\\t\\t\\t\\t\\t\\tdtc.update();\\n\\t\\t\\t\\t\\t\\t\\t$('#cusStartTime').css('display', 'inline-block');\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tvar dtc2 = new eview.widgets.DateTimeComponent($(\\\"#cusEndTime\\\"));\\n\\t\\t\\t\\t\\t\\t\\tdtc2.setCalenderType(\\\"datetime\\\");\\n\\t\\t\\t\\t\\t\\t\\tdtc2.setDateformat(\\\"yyyy-mm-dd hh:mm\\\");\\n\\t\\t\\t\\t\\t\\t\\tdtc2.setTimeformat('hh:mm');\\n\\t\\t\\t\\t\\t\\t\\tdtc2.on(\\\"change\\\", null, $scope.cusTimeChangedHandler);\\n\\t\\t\\t\\t\\t\\t\\t$scope.cusEndTime = dtc2;\\n\\t\\t\\t\\t\\t\\t\\tdtc2.setDateTimeParameters(parameter);\\n\\t\\t\\t\\t\\t\\t\\tdtc2.update();\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tif(!isTimeIntervalEnable)  // 针对后台配置项的，默认false\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\tsetBtnStatus();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t$('#cusStartTime').css('display', 'inline-block');\\n\\t\\t\\t\\t\\t\\t\\t$('#cusEndTime').css('display', 'inline-block');\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t$(\\\"#customizeTimeRangeToLabel\\\").show();\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t$(\\\"#customizeTimeRangeContainer\\\").hide();\\n\\t\\t\\t\\t\\t\\tif(!canQueryHistoryData())\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t//\\n\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t// 查数据\\n\\t\\t\\t\\t\\t\\tqueryHistoryTimeData();\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\n\\t\\t\\t//产品扩展\\n\\t\\t\\t//TODO\\n\\t\\t\\t\\\"change #tabTitiles input[type='radio'][name='tabTitlesRadio']\\\" : function (evt) {\\n\\t\\t\\t\\tvar key = $(this).find(\\\"+label\\\").attr(\\\"for\\\");\\n\\t\\t\\t\\tif (key != 'one1') {\\n\\t\\t\\t\\t\\t$(\\\"#PM_HistoryPm_Div_3\\\").hide();\\n\\t\\t\\t\\t\\t$(\\\"#PM_HistoryPm_Div_2\\\").hide();\\n\\t\\t\\t\\t\\t$(DOMS.extendIFrame).attr(\\\"src\\\", $(this).find(\\\"+label\\\").attr(\\\"src\\\"));\\n\\t\\t\\t\\t\\t$(DOMS.extendIFrame).closest(\\\"div\\\").show();\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t$(DOMS.extendIFrame).attr(\\\"src\\\", \\\"\\\");\\n\\t\\t\\t\\t\\t$(DOMS.extendIFrame).closest(\\\"div\\\").hide();\\n\\t\\t\\t\\t\\t$(\\\"#PM_HistoryPm_Div_3\\\").show();\\n\\t\\t\\t\\t\\t$(\\\"#PM_HistoryPm_Div_2\\\").show();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tutils.resizeFrame();\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\t/******* 事件定义结束 **********/\\n\\t\\t$(DOMS.extendIFrame).closest(\\\"div\\\").hide();\\n\\t\\t// 初始化时间范围\\n\\t\\tinitTimeRange(function () {\\n\\t\\t\\t// 获取初始化信息并设置初始化状态\\n\\t\\t\\tinitStatus();\\n\\t\\t});\\n\\t\\t\\n\\t\\t// 初始化查询扩展标签\\n\\t\\t// initQueryTabs;\\n\\t\\t\\n\\t\\t// 初始化选择测量对象面板\\n\\t\\tinitSelectCollectObjectsPanel();\\n\\t\\t\\n\\t\\t// 初始化按钮\\n\\t\\tsetBtnStatus();\\n\\t\\t\\n\\t\\twindow.iemp.ui.pm.Utils.setActiveMenu(\\\"com.iemp.app.pm.historypm\\\");\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\t// zh env\\n\\t\\tif ($scope.i18n.index_label.length < 10) {\\n\\t\\t\\t$(\\\"#PM_HistoryPm_Table_Query\\\").find(\\\".pm_common_td_queryLabel\\\").find(\\\"label\\\").addClass(\\\"labelWidth\\\")\\n\\t\\t}\\n\\t};\\n\\t\\n\\t/******* App入口定义开始 ************/\\n\\t\\n\\t/******* 初始化开始 **********/\\n\\t// 初始化\\n\\t$(document).ready(function () {\\n\\t\\taddHelpId();\\n\\t\\t// resource select Panel\\n\\t\\tsetResourcePanelColse();\\n\\t\\t\\n\\t\\t// paginator \\n\\t\\tDOMS.paginator.hide();\\n\\t\\t\\n\\t\\t// customize TimeRange \\n\\t\\t$(\\\"#customizeTimeRangeContainer\\\").hide();\\n\\t\\t\\n\\t\\t// timeLine\\n\\t\\tresizeTimeLineWidth();\\t\\n\\t\\t\\n\\t\\t// radio-list \\n\\t\\tsetRadioListMargin()\\n\\t\\t\\n        var windowHeight=$(window).height()-20;\\n        $(\\\"#PM_HistoryPm_Div_Content\\\").attr(\\\"style\\\",\\\"height:\\\"+windowHeight+\\\"px;display:block\\\");\\n\\t});\\n\\t\\n\\tsetTimeout(function () {\\n\\t\\tmain();\\n\\t}, 20)\\n\\t\\n\\t// 将main函数放在onload就可以了,至于iframe加载机制\\n\\t$(window).load(function () {\\n\\t\\t\\n\\t});\\n\\t\\n\\t// 显示\\n\\t$scope.inited = true;\\n\\t$(\\\".iemp_content\\\").show();\\n\\t\\n\\tvalidation.showError(function (el) {\\n\\t\\tvalidation.shortcuts.showTip($(el));\\n\\t});\\n\\tvalidation.hideError(function () {\\n\\t\\tvalidation.shortcuts.hideTip();\\n\\t});\\n\\tsetTimeout(function () {\\n\\t\\t$(\\\"#portletTitle\\\").focus();\\n\\t}, 200);\\n\\t\\n\\t/************ 画图相关 ***************/\\n\\tif ($.isFunction(window.iemp.ui.pm.history.Util.chartHelper)) {\\n\\t\\twindow.iemp.ui.pm.history.Util.chartHelper($scope, null, false, true);\\n\\t}\\n\\t/************ 画图相关 ***************/\\n\\t\\n\\t$scope.timelineModal = {\\n\\t\\t\\\"minDate\\\" : new Date(),\\n\\t\\t\\\"maxDate\\\" : new Date(),\\n\\t\\t\\\"displayStartDateDst\\\" : false,\\n\\t\\t\\\"displayStartDate\\\" : new Date(),\\n\\t\\t\\\"displayEndDateDst\\\" : false,\\n\\t\\t\\\"displayEndDate\\\" : new Date(),\\n\\t\\t\\\"selectedStartDateDst\\\" : false,\\n\\t\\t\\\"selectedStartDate\\\" : new Date(),\\n\\t\\t\\\"selectedEndDateDst\\\" : false,\\n\\t\\t\\\"selectedEndDate\\\" : new Date()\\n\\t};\\n\\tvar prvTime;\\n\\t$scope.listenerExt = {\\n\\t\\tchange : function (e) {\\n\\t\\t\\tif (prvTime === e) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tprvTime = e;\\n\\t\\t\\tchartSliderChangeHandler(e);\\n\\t\\t}\\n\\t}\\n\\n\\t\\n\\t$scope.onPageChanged = function (args) {\\n\\t\\tif (args) {\\n\\t\\t\\tgotoPage(args.currentPage);\\n\\t\\t}\\n\\t};\\n\\t\\n\\t$scope.cusTimeChangedHandler = function () {\\n\\t\\tif(!isCollapsePanelOpen)\\n\\t\\t{\\n\\t\\t\\tsetBtnStatus();  // 面板展开，按钮不生效\\n\\t\\t}\\n\\t};\\n\\t\\n\\t// 查询按钮\\n\\t$scope.clickSearchHandler = function () {\\n\\t\\t// 重设页码(不需要重设分页器)\\n\\t\\t// 不需要重设分页器 pageIndex = 1;\\n\\t\\tpaginator = true;\\n\\t\\t// 查数据\\n\\t\\t\\n\\t\\t// 从资源选择页面取值,并相应赋值\\n\\t\\t// getSelectedResource;\\n\\t\\t\\n\\t\\tqueryHistoryTimeData();\\n\\t};\\n\\t\\n\\t// 打开另存为portlet对话框\\n\\t$scope.clickSavePortletHandler = function () {\\n\\t\\tshowSavePortletDialog();\\n\\t};\\n\\t\\n\\t// 导出按钮\\n\\t$scope.clickExportHandler = function () {\\n\\t\\texportToCVS();\\n\\t};\\n\\t\\n\\t\\t// 设置按钮按钮\\n\\t$scope.clickSettingHandler = function () {\\n\\t\\tmonitorSettingHandler();\\n\\t};\\n\\t\\n\\t/**\\n\\t * 暴露给产品的API\\n\\t */\\n\\twindow.drawData = function (data) {\\n\\t\\tDOMS.panelWelcome.hide();\\n\\t\\tDOMS.panelLoading.hide();\\n\\t\\tDOMS.paginator.hide();\\n\\t\\tdestroyGlobalChartSlider();\\n\\t\\t\\n\\t\\tif ($.isArray(data) && data.length > 0) {\\n\\t\\t\\tDOMS.panelNoData.hide();\\n\\t\\t\\t\\n\\t\\t\\tcharts = window.iemp.ui.pm.history.Util.getHistoryChartsExt(data);\\n\\t\\t\\t$scope.$digest();\\n\\t\\t} else {\\n\\t\\t\\tDOMS.panelNoData.show();\\n\\t\\t}\\n\\t\\t\\n\\t\\t$(document).triggerHandler(\\\"ajaxComplete\\\");\\n\\t};\\n\\t\\n\\tvar resizeAction = function () {\\n\\t\\tvar changeFlag = false;\\n\\t\\tif ($.isArray(chartComps)) {\\n\\t\\t\\t$.each(chartComps, function (i, comp) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tvar chartId = charts[i].id;\\n\\t\\t\\t\\t\\tvar width = $(window).width(),\\n\\t\\t\\t\\t\\theight = $(window).height();\\n\\t\\t\\t\\t\\tif (!window.prevChartSize[chartId]) {\\n\\t\\t\\t\\t\\t\\twindow.prevChartSize[chartId] = {\\n\\t\\t\\t\\t\\t\\t\\t\\\"width\\\" : -1\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (width != window.prevChartSize[chartId].width) {\\n\\t\\t\\t\\t\\t\\twindow.prevChartSize[chartId].width = width;\\n\\t\\t\\t\\t\\t\\tchangeFlag = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (changeFlag || LAYOUTCHANGE) {\\n\\t\\t\\t\\t\\t\\tvar timeDisplayInfos = charts[i].timeDisplayInfos;\\n\\t\\t\\t\\t\\t\\tvar data = comp.eviewAxes.getAxes()[0].getAxisData();\\n\\t\\t\\t\\t\\t\\tvar timeRange = [data[0].value, data[data.length - 1].value];\\n\\t\\t\\t\\t\\t\\tvar xAxesData = window.iemp.ui.pm.history.Util.getXAxesData(timeRange, timeDisplayInfos, \\\".pm_common_chart_container\\\");\\n\\t\\t\\t\\t\\t\\tcomp.setAxesData(charts[i].axes[0].id, xAxesData, true); //true here means do not replot\\n\\t\\t\\t\\t\\t\\tcomp.rerender();\\n\\t\\t\\t\\t\\t\\tfor(var i=0;i<tableIdArrCache.length;i++){\\n\\t\\t\\t\\t\\t\\t\\teview.getWidget(\\\"#\\\"+tableIdArrCache[i]+\\\"\\\")[0].rerender();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tconsole.log(\\\"resize wrong:\\\", e);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\t\\n\\t$(window).resize(function () {\\n\\t\\tclearTimeout(window.resizeTimerNoNgRepeat);\\n\\t\\twindow.resizeTimerNoNgRepeat = setTimeout(function () {\\n\\t\\t\\t\\tresizeAction();\\n\\t\\t\\t}, 100);\\n\\t\\t\\n\\t\\t// timeLine\\n\\t\\tresizeTimeLineWidth();\\n\\t\\t\\t\\n\\t\\t// radio-list \\n\\t\\tsetRadioListMargin();\\n\\t}); \\n\\t\\n\\tfunction resizeTimeLineWidth()\\n\\t{\\n\\t\\tvar windowWidth = $(window).width();\\n\\t\\tvar timeLineWidth = windowWidth - 46;\\n\\t\\t\\n\\t\\tif(last_TimeLine_length !== timeLineWidth)\\n\\t\\t{\\n\\t\\t\\tlast_TimeLine_length = timeLineWidth;\\n\\t\\t\\t// after it, will go to .resize() again \\n\\t\\t\\t$scope.pm_historypm_timeline.attr('width', timeLineWidth);\\n\\t\\t}\\n\\n\\t}\\n\\t\\n\\tfunction setRadioListMargin()\\n\\t{\\n\\t\\t// radio-list \\n\\t\\t$(document).find(\\\"#selectResourceTypebyObject\\\").css(\\\"margin-left\\\", 15);\\n\\t\\t$(document).find(\\\"#pm_monitorView_layoutform\\\").css(\\\"margin-left\\\", 20);\\n\\t\\t$(document).find(\\\"#pm_monitorView_layoutboth\\\").css(\\\"margin-left\\\", 20);\\n\\t}\\n\\t\\n\\t/******* 初始化结束 **********/\\n\\t$(window).unload(function () {\\n\\t\\t$(window).unbind();\\n\\t\\t$(\\\"a[name='timeRangeItem']\\\").unbind();\\n\\t\\t$(\\\"#tabTitiles input[type='radio'][name='tabTitlesRadio']\\\").unbind();\\n\\t\\t$(\\\"#pm_history_input_byNes\\\").unbind();\\n\\t\\t$(\\\"#pm_history_input_byObjects\\\").unbind();\\n\\t\\t $(document).unbind().off();\\n\\t\\t $(document).find('*').unbind().off();\\n\\t\\t\\n\\t\\tif ($scope.cusStartTime && $.isFunction($scope.cusStartTime.destroy)) {\\n\\t\\t\\t$scope.cusStartTime.destroy();\\n\\t\\t}\\n\\t\\tif ($scope.cusEndTime && $.isFunction($scope.cusEndTime.destroy)) {\\n\\t\\t\\t$scope.cusEndTime.destroy();\\n\\t\\t}\\n\\t\\tif ($scope.pm_historypm_timeline && $.isFunction($scope.pm_historypm_timeline.destroy)) {\\n\\t\\t\\t$scope.pm_historypm_timeline.destroy();\\n\\t\\t}\\n\\t\\ttimeRangeItemObj = null;\\n\\t\\tutils = null;\\n\\t\\t$scope.i18n.export_label = null;\\n\\t\\t$scope.i18n.by_nes_radio_label = null;\\n\\t\\t$scope.i18n.by_nes_label = null;\\n\\t\\t$scope.i18n.by_objects_radio_label = null;\\n\\t\\t$scope.i18n.by_objects_label = null;\\n\\t\\t$scope.i18n.index_label = null;\\n\\t\\t$scope.i18n = null;\\n\\t\\thistoryTranslator = null;\\n\\t\\tpollerTranslator = null;\\n\\t\\trealtimeTranslator = null;\\n\\t\\tvalidation = null;\\n\\t\\tdialog = null;\\n\\t\\tselectViewResourceDialog = null;\\n\\t\\tjqXHR = null;\\n\\t\\tHTML_TEMPLATES = null;\\n\\t\\tCHART_TEMPLATE = null;\\n\\t\\tDOMS.containerCharts = null;\\n\\t\\tDOMS.textMos = null;\\n\\t\\tDOMS.containerTimeRange = null;\\n\\t\\tDOMS.panelWelcome = null;\\n\\t\\tDOMS.panelLoading = null;\\n\\t\\tDOMS.panelNoData = null;\\n\\t\\tDOMS.panelError = null;\\n\\t\\tDOMS.containerGlobalChartSlider = null;\\n\\t\\tDOMS.containerTabs = null;\\n\\t\\tDOMS.containerTabPanels = null;\\n\\t\\tDOMS.paginator = null;\\n\\t\\tDOMS.extendIFrame = null;\\n\\t\\tDOMS = null;\\n\\t\\tTIME_SPACE = null;\\n\\t\\trender = null;\\n\\t\\tmos = null;\\n\\t\\tmeasTypes = null;\\n\\t\\ttempMos = null;\\n\\t\\ttempCollectObjects = null;\\n\\t\\ttempMeasTypes = null;\\n\\t\\ttimeSpace = null;\\n\\t\\tselectedTimeRangeItem = null;\\n\\t\\tcharts = null;\\n\\t\\tmsgBox = null;\\n\\t\\ttimeRanges = null;\\n\\t\\tglobalChartSlider = null;\\n\\t\\tlatestQueryCondition = null;\\n\\t\\tqueryTimeRange = null;\\n\\t\\tpaginator = null;\\n\\t\\tmoIndexs = null;\\n\\t\\tchartComps = null;\\n\\t});\\n\\t/********************************************************  iemp end ***************************************************/\\n\\t\\n\\t/********************************************************  NEW ADD ***************************************************/\\n\\t// 进历史页面，资源选择面板默认收缩\\n\\tvar setResourcePanelColse = function()\\n\\t{\\n\\t\\t// 隐藏面板内容\\n\\t\\t$(document).find(\\\"#historyCollapsePanel\\\").hide();\\n\\t\\t//换收缩面板图标\\n\\t\\t$(\\\"#collapse_btn\\\").removeAttr(\\\"class\\\");\\n\\t\\tsetTimeout(function(){\\n\\t\\twaitExcuteChangeImg(false);\\n\\t\\t},1);\\n\\t\\t// 修改标志位\\n\\t\\tisCollapsePanelOpen = false;\\n\\t}\\n\\t\\n\\t// 收缩面板点击事件\\n\\twindow.collapseClick = function () \\n\\t{\\n\\t\\tif(needAyncFrame)\\n\\t\\t{\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (isCollapsePanelOpen) {\\n\\t\\t\\t// 隐藏面板内容\\n\\t\\t\\t$(document).find(\\\"#historyCollapsePanel\\\").hide();\\n\\t\\t\\t//换收缩面板图标\\n\\t\\t\\t$(\\\"#collapse_btn\\\").removeAttr(\\\"class\\\");\\n\\t\\t\\tsetTimeout(function(){\\n\\t\\t\\twaitExcuteChangeImg(false);\\n\\t\\t\\t},1);\\n\\t\\t\\t// 修改标志位\\n\\t\\t\\tisCollapsePanelOpen = false;\\n\\t\\t\\t\\n\\t\\t\\t// 重新设置按钮状态\\n\\t\\t\\tsetBtnsEnable();\\n\\t\\t\\t\\n\\t\\t\\t// TODO 重新enable缩放条\\n\\t\\t\\tif ($scope.pm_historypm_timeline) {\\n\\t\\t\\t\\t$scope.pm_historypm_timeline.attr('disabled', false);\\n\\t\\t\\t\\t$(\\\"#pm_historypm_timeline\\\").removeClass(\\\"timeLineDisableBackground\\\");\\n\\t\\t\\t}\\n\\t\\t\\n\\t\\t} else {\\n\\t\\t\\t// 显示选择资源面板\\n\\t\\t\\t$(document).find(\\\"#historyCollapsePanel\\\").show();\\n\\t\\t\\t//换收缩面板图标\\n\\t\\t\\t$(\\\"#collapse_btn\\\").removeAttr(\\\"class\\\");\\n\\t\\t\\tsetTimeout(function(){\\n\\t\\t\\twaitExcuteChangeImg(true);\\n\\t\\t\\t},1);\\n\\t\\t\\t// 修改标志位\\n\\t\\t\\tisCollapsePanelOpen = true;\\n\\t\\t\\t\\n\\t\\t\\t// 面板打开, 设置按钮灰化\\n\\t\\t\\tsetBtnsDisable();\\n\\t\\t\\t\\n\\t\\t\\t// TODO 禁用缩放条\\n\\t\\t\\tif ($scope.pm_historypm_timeline) {\\n\\t\\t\\t\\t$scope.pm_historypm_timeline.attr('disabled', true);\\n\\t\\t\\t\\t$(\\\"#pm_historypm_timeline\\\").addClass(\\\"timeLineDisableBackground\\\");\\n\\t\\t\\t}\\n\\t\\t\\tif($(document).find(\\\"iframe\\\")[0].contentWindow.setDefaultSelectedLabel){\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.setDefaultSelectedLabel();\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.setDefaultSelectedLabel();\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t// 面板展开，重渲染radio-list\\n\\t\\t\\t$scope.selectResourceType.attr(\\\"display\\\",true, true);   // 这个在前面\\n\\t\\t}\\n\\t}\\n\\t\\n\\tvar waitExcuteChangeImg=function(boo){\\n\\t\\tif(boo){\\n\\t\\t$(\\\"#collapse_btn\\\").attr(\\\"class\\\",\\\"title_btn panel_open\\\");\\n\\t\\t}else{\\n\\t\\t$(\\\"#collapse_btn\\\").attr(\\\"class\\\",\\\"title_btn panel_close\\\");\\n\\t\\t}\\n\\t}\\n\\t// radio button\\n\\t$scope.radioListValues = {\\n\\t\\tbyDevice : {\\n\\t\\t\\tchecked : false,\\n\\t\\t\\tlabel : $scope.i18n.by_nes_radio_label,\\n\\t\\t\\tvalue : 1\\n\\t\\t},\\n\\t\\tbyObject : {\\n\\t\\t\\tchecked : true,\\n\\t\\t\\tlabel : $scope.i18n.by_objects_radio_label,\\n\\t\\t\\tvalue : 2\\n\\t\\t}\\n\\t};\\n\\t\\n\\t// 监听radio的事件\\n\\t$scope.listeners = {\\n\\t\\tchange : function () {\\n\\t\\t\\tif ($scope.selectResourceType.getCheckedValue() == 1) {\\n\\t\\t\\t\\t$('#measObject_selecct').hide();\\n\\t\\t\\t\\t$('#device_selecct').show();\\n\\t\\t\\t\\t// 标定当前资源选择页为“按设备”\\n\\t\\t\\t\\tselectPageFlag = \\\"byDevicePage\\\";\\n\\t\\t\\t\\t// a bug, protect it \\n\\t\\t\\t\\tif($(document).find(\\\"iframe\\\")[0].contentWindow)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif($(document).find(\\\"iframe\\\")[0].contentWindow.setDefaultSelectedLabel)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.setDefaultSelectedLabel();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif($(document).find(\\\"iframe\\\")[0].contentWindow.setWidthByOuter)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// reset page width\\n\\t\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.setWidthByOuter();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t$('#device_selecct').hide();\\n\\t\\t\\t\\t$('#measObject_selecct').show();\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 如果\\\"按对象\\\"页面还未曾初始化\\n\\t\\t\\t\\tif (!isSelectResourceInit) {\\n\\t\\t\\t\\t\\tisSelectResourceInit = true;\\n\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.setSelectResourceInit();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 标定当前资源选择页为“按对象”\\n\\t\\t\\t\\tselectPageFlag = \\\"byMeasObjectPage\\\";\\n\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.setDefaultSelectedLabel();\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif($(document).find(\\\"iframe\\\")[1].contentWindow)\\n\\t\\t\\t\\t{\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif($(document).find(\\\"iframe\\\")[1].contentWindow.setWidthByOuter)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// reset page width\\n\\t\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.setWidthByOuter();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tclick : function () {\\n\\t\\t\\t'just want to show that click event is valid';\\n\\t\\t}\\n\\t};\\n\\t\\n\\t// 确定\\n\\t$scope.confirmHandle = function () \\n\\t{\\n\\t\\t// 从资源选择页面取值,并相应赋值\\n\\t\\tvar selectedRes = getSelectedResource();\\n\\t\\t\\n\\t\\tif (selectedRes && selectedRes.length > 0) \\n\\t\\t{\\n\\t\\t\\t// 面板收缩\\n\\t\\t\\tcollapseClick();\\n\\t\\t\\t\\n\\t\\t\\t// 清空另个一个资源选择的缓存\\n\\t\\t\\tclearAnotherSelected();\\n\\t\\t\\t\\n\\t\\t\\t// 查询\\n\\t\\t\\tconfirmQueryHistoryData();\\n\\t\\t}\\n\\t\\t\\n\\t}\\n\\t\\n\\t// 取消\\n\\t$scope.cancelHandle = function () {\\n\\t\\t//清除相关数据还是恢复\\n\\t\\t// clearAnotherSelected;\\n\\t\\t\\n\\t\\t// 重新设置会回原先数据(记忆功能)\\n\\t\\tif (dn2Index && dn2Index.length > 0)\\n\\t\\t{\\n\\t\\t\\t// radio为按设备\\n\\t\\t\\t$scope.selectResourceType.setCheckedByValue(1);\\n\\t\\t\\tselectPageFlag = \\\"byDevicePage\\\";\\n\\t\\t\\t\\n\\t\\t\\t// 取详细信息\\n\\t\\t\\tvar tdeviceInfo = creatOldSelectedInfo(dn2Index, deviceAllInfo);\\n\\t\\t\\t\\n\\t\\t\\t// 设置按设备页面原先已选数据\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.setSelectedData(tdeviceInfo);\\n\\t\\t\\t\\n\\t\\t\\t// 安全起见,用清空方法\\n\\t\\t\\tisSelectResourceInit=false;\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.clearSelectedData();\\n\\t\\t\\t\\n\\t\\t\\t// 按对象面板隐藏\\n\\t\\t\\t$('#measObject_selecct').hide();\\n\\t\\t\\t$('#device_selecct').show();\\n\\t\\t}\\n\\t\\telse if(obj2Index && obj2Index.length > 0)\\n\\t\\t{\\n\\t\\t\\t// 先清空按对像页面的资源\\n\\t\\t\\t// 先清空 $(document).find(\\\"iframe\\\")[1].contentWindow.clearSelectedData();\\n\\t\\t\\t// 先清空 isSelectResourceInit=false;\\n\\t\\t\\t\\n\\t\\t\\t// radio为按对象\\n\\t\\t\\t$scope.selectResourceType.setCheckedByValue(2);\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.cancelHandleByHistory(obj2Index);\\n\\t\\t\\t\\n\\t\\t\\t// 安全起见,用清空方法\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.clearSelectedData();\\n\\t\\t\\t\\n\\t\\t\\t// 按设备面板隐藏\\n\\t\\t\\t$('#device_selecct').hide();\\n\\t\\t\\t$('#measObject_selecct').show();\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.clearSelectedData();\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.clearSelectedData();\\n\\t\\t\\t\\n\\t\\t\\t$scope.selectResourceType.setCheckedByValue(1);\\n\\t\\t\\tselectPageFlag = \\\"byDevicePage\\\";\\n\\t\\t\\t$('#measObject_selecct').hide();\\n\\t\\t\\t$('#device_selecct').show();\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 面板收缩\\n\\t\\tcollapseClick();\\n\\t}\\n\\t\\n\\t// 确定按钮的相关函数\\n\\t\\n\\t/**\\n\\t * 清除另一个资源选择页面的缓存\\n\\t */\\n\\tvar clearAnotherSelected = function () {\\n\\t\\t\\n\\t\\t// 如果是按设备页面\\n\\t\\tif (selectPageFlag == \\\"byDevicePage\\\") {\\n\\t\\t\\tisSelectResourceInit=false;\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.clearSelectedData();\\n\\t\\t} else {\\n\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.clearSelectedData();\\n\\t\\t}\\n\\t}\\n\\t\\n\\tvar confirmQueryHistoryData = function(){\\n\\t\\t// 重设页码\\n\\t\\tpageIndex = 1;\\n\\t\\tpaginator = false;\\n\\t\\t// 查数据\\n\\t\\tqueryHistoryTimeData();\\n\\t}\\n\\t\\n\\t// \\n\\tvar getDn2Index = function(){\\n\\t\\treturn dn2Index;\\n\\t}\\n\\t\\n\\t/**\\n\\t * 获取已选资源\\n\\t */\\n\\tfunction getSelectedResource() {\\n\\t\\tvar selectedResource;\\n\\t\\t// 如果是按设备页面\\n\\t\\tif (selectPageFlag == \\\"byDevicePage\\\") {\\n\\t\\t\\tselectedResource = $(document).find(\\\"iframe\\\")[0].contentWindow.getSelectedData();\\n\\t\\t\\t// 如果没有数据的就不往下执行\\n\\t\\t\\tif(!selectedResource || selectedResource.length == 0)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t// 赋给全局变量\\n\\t\\t\\tdn2Index = selectedResource;\\n\\t\\t\\t// 清空按对象\\n\\t\\t\\tobj2Index = [];\\n\\t\\t\\t\\n\\t\\t\\t// 赋给 tempMos,tempMeasTypes,清空tempCollectObjects,这一步是给导出cvs准备的\\n\\t\\t\\ttempMos = [];\\n\\t\\t\\ttempMeasTypes=[];\\n\\t\\t\\ttempCollectObjects=[];\\n\\t\\t\\t\\n\\t\\t\\t// 遍历获取到的已选资源dn2Index\\n\\t\\t\\tfor(var i =0;i<dn2Index.length;i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\t// 对象\\n\\t\\t\\t\\tvar tmoIndex = {\\n\\t\\t\\t\\t\\t\\\"dn\\\":dn2Index[i].dn\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpMos(tmoIndex))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempMos.push(tmoIndex);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 指标\\n\\t\\t\\t\\tvar tmeasType = {\\n\\t\\t\\t\\t\\t\\\"id\\\":dn2Index[i].indexId\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpMeasTypes(tmeasType))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempMeasTypes.push(tmeasType);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t// 给后续取详细信息用的\\n\\t\\t\\tdeviceAllInfo = $(document).find(\\\"iframe\\\")[0].contentWindow.getDeviceSelectedinfo();\\n\\t\\t\\t\\n\\t\\t} else {\\n\\t\\t\\tselectedResource = $(document).find(\\\"iframe\\\")[1].contentWindow.getSelectedData();\\n\\t\\t\\t// 如果没有数据的就不往下执行\\n\\t\\t\\tif(!selectedResource || selectedResource.length == 0)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\t// 赋给全局变量\\n\\t\\t\\tobj2Index = selectedResource;\\n\\t\\t\\t// 清空按设备\\n\\t\\t\\tdn2Index = [];\\n\\t\\t\\t\\n\\t\\t\\t// 赋给 tempCollectObjects,tempMeasTypes,清空tempMos,这一步是给导出cvs准备的\\n\\t\\t\\ttempMos = [];\\n\\t\\t\\ttempMeasTypes=[];\\n\\t\\t\\ttempCollectObjects=[];\\n\\t\\t\\t\\n\\t\\t\\t// 遍历获取到的已选资源obj2Index\\n\\t\\t\\tfor(var i =0;i<obj2Index.length;i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\t// 对象\\n\\t\\t\\t\\tvar tobjIndex = {\\n\\t\\t\\t\\t\\t\\\"dn\\\":obj2Index[i].dn,\\n\\t\\t\\t\\t\\t\\\"displayValue\\\":obj2Index[i].displayValue\\t\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpCollectObjects(tobjIndex))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempCollectObjects.push(tobjIndex);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 指标\\n\\t\\t\\t\\tvar tmeasType = {\\n\\t\\t\\t\\t\\t\\\"id\\\":obj2Index[i].indexId\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpMeasTypes(tmeasType))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempMeasTypes.push(tmeasType);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn selectedResource;\\n\\t}\\n\\t\\n\\t// 判断是否已包含mo\\n\\tfunction isInTmpMos(tmoIndex)\\n\\t{\\n\\t\\tif (tempMos)\\n\\t\\t{\\n\\t\\t\\tfor (var i = 0; i < tempMos.length; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\tif (tempMos[i].dn == tmoIndex.dn) {\\n\\t  \\t\\t\\t\\treturn true;\\n\\t  \\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\t// 判断是否已包含object\\n\\tfunction isInTmpCollectObjects(tobjIndex) \\n\\t{\\n\\t  \\tif (tempCollectObjects) \\n\\t\\t{\\n\\t  \\t\\tfor (var i = 0; i < tempCollectObjects.length; i++) \\n\\t\\t\\t{\\n\\t  \\t\\t\\tif (tempCollectObjects[i].dn == tobjIndex.dn && tempCollectObjects[i].displayValue == tobjIndex.displayValue) {\\n\\t  \\t\\t\\t\\treturn true;\\n\\t  \\t\\t\\t}\\n\\t  \\t\\t}\\n\\t  \\t}\\n\\t  \\treturn false;\\n\\t}\\n\\t\\n\\t// 判断是否已包含指标\\n\\tfunction isInTmpMeasTypes(tmeasType) \\n\\t{\\n\\t\\tif (tempMeasTypes) \\n\\t\\t{\\n\\t\\t\\tfor (var i = 0; i < tempMeasTypes.length; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\tif (tempMeasTypes[i].id == tmeasType.id) \\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\t\\n  \\tfunction creatOldSelectedInfo(dn2Index, deviceAllInfo)\\n\\t{\\n\\t\\tvar tDeviceInfo = [];\\n\\t\\tfor(var k = 0; k < dn2Index.length; k++)\\n\\t\\t{\\n\\t\\t\\tvar tinfo = {\\n\\t\\t\\t\\tdn:dn2Index[k].dn,\\n\\t\\t\\t\\tindexId:dn2Index[k].indexId,\\n\\t\\t\\t\\taggrType:dn2Index[k].aggrType,\\n\\t\\t\\t\\tneType:\\\" \\\",\\n\\t\\t\\t\\tneName:\\\" \\\",\\n\\t\\t\\t\\tneIP:\\\" \\\",\\n\\t\\t\\t\\tindexName:\\\" \\\",\\n\\t\\t\\t\\tindexGroupId:\\\" \\\",\\n\\t\\t\\t\\tindexGroupName:\\\" \\\"\\n\\t\\t\\t};\\n\\t\\t\\ttDeviceInfo.push(tinfo);\\n\\t\\t}\\n\\t\\t\\n\\t\\tif(deviceAllInfo && deviceAllInfo.length > 0)\\n\\t\\t{\\n\\t\\t\\tfor(var i = 0;i < tDeviceInfo.length; i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tfor(var j = 0;j < deviceAllInfo.length; j++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif(tDeviceInfo[i].dn == deviceAllInfo[j].dn && tDeviceInfo[i].indexId == deviceAllInfo[j].indexId)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\ttDeviceInfo[i].neType = deviceAllInfo[j].neType;\\n\\t\\t\\t\\t\\t\\ttDeviceInfo[i].neName = deviceAllInfo[j].neName;\\n\\t\\t\\t\\t\\t\\ttDeviceInfo[i].neIP = deviceAllInfo[j].neIP;\\n\\t\\t\\t\\t\\t\\ttDeviceInfo[i].indexName = deviceAllInfo[j].indexName;\\n\\t\\t\\t\\t\\t\\ttDeviceInfo[i].indexGroupName = deviceAllInfo[j].indexGroupName;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\treturn tDeviceInfo;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn tDeviceInfo;\\n\\t}\\n  \\n\\t// 通过传入的参数 tempCollectObjects\\n\\tvar createObj2Index = function (objsParam, measTypesParam)\\n\\t{\\n\\t\\t// 给按对象选择资源页面的\\n\\t\\tvar objResourceSelected = [];\\n\\t\\t\\n\\t\\t// 创建obj2Index\\n\\t\\tif (measTypesParam) {\\n\\t\\t\\tfor (i = 0; i < measTypesParam.length; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\t// 给 obj2Index 的\\n                if (isHistoryQueryTimeIntervalEnable()) {\\n                    var oneObj = {\\n                        \\\"dn\\\":objsParam[0].dn,\\n                        \\\"indexId\\\":measTypesParam[i].id,\\n                        \\\"displayValue\\\":objsParam[0].displayValue,\\n                        \\\"aggrType\\\":2,\\n                        \\\"displayPeriod\\\":300\\n                    };\\n                } else {\\n                    var oneObj = {\\n                        \\\"dn\\\":objsParam[0].dn,\\n                        \\\"indexId\\\":measTypesParam[i].id,\\n                        \\\"displayValue\\\":objsParam[0].displayValue,\\n                        \\\"aggrType\\\":2\\n                    };\\n                }\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tobj2Index.push(oneObj);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 给按对象选择资源页面的\\n\\t\\t\\t\\tvar oneObjResource = {\\n\\t\\t\\t\\t\\tdn:objsParam[0].dn,\\n\\t\\t\\t\\t\\t\\\"ip\\\": objsParam[0].ip,\\n\\t\\t\\t\\t\\t\\\"name\\\": objsParam[0].name,\\n\\t\\t\\t\\t\\t\\\"indexId\\\":measTypesParam[i].id,\\n\\t\\t\\t\\t\\t\\\"indexName\\\":measTypesParam[i].name,\\n\\t\\t\\t\\t\\t\\\"indexGroupId\\\":measTypesParam[i].indexGroupId,\\n\\t\\t\\t\\t\\t\\\"indexGroupName\\\":measTypesParam[i].indexGroupName,\\n\\t\\t\\t\\t\\t\\\"displayValue\\\":objsParam[0].displayValue,\\n\\t\\t\\t\\t\\t\\\"aggrType\\\":2\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tobjResourceSelected.push(oneObjResource);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 设置\\\"按对象\\\"选择资源的数据\\n\\t\\tselectPageFlag = \\\"byMeasObjectPage\\\";\\n\\t\\tsetSelectedData(objResourceSelected);\\n\\t}\\n\\t\\n\\t// 通过传入的参数 tempMos\\n\\tvar createDn2Index = function (nesParam, measTypesParam) \\n\\t{\\n\\t\\t// 给按设备选择资源页面的\\n\\t\\tvar neResourceSelected = [];\\n\\t\\t\\n\\t\\t// 创建dn2Index\\n\\t\\tif (measTypesParam) {\\n\\t\\t\\tfor (i = 0; i < measTypesParam.length; i++) \\n\\t\\t\\t{\\n\\t\\t\\t\\t// 给 dn2Index 的\\n                if (isHistoryQueryTimeIntervalEnable()) {\\n                    var oneNe = {\\n                        \\\"dn\\\":nesParam[0].dn,\\n                        \\\"indexId\\\":measTypesParam[i].id,\\n                        \\\"aggrType\\\":2,\\n                        \\\"displayPeriod\\\":300\\n                    };\\n                } else {\\n                    var oneNe = {\\n                        \\\"dn\\\":nesParam[0].dn,\\n                        \\\"indexId\\\":measTypesParam[i].id,\\n                        \\\"aggrType\\\":2\\n                    };\\n                }\\n\\t\\t\\t\\tdn2Index.push(oneNe);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 给按设备选择资源页面的\\n\\t\\t\\t\\tvar oneNeResource = {\\n\\t\\t\\t\\t\\t\\\"dn\\\":nesParam[0].dn,\\n\\t\\t\\t\\t\\t\\\"neIP\\\": nesParam[0].ip,\\n\\t\\t\\t\\t\\t\\\"neName\\\": nesParam[0].name,\\n\\t\\t\\t\\t\\t\\\"neType\\\": nesParam[0].type,\\n\\t\\t\\t\\t\\t\\\"indexId\\\":measTypesParam[i].id,\\n\\t\\t\\t\\t\\t\\\"indexName\\\":measTypesParam[i].name,\\n\\t\\t\\t\\t\\t\\\"indexGroupId\\\":measTypesParam[i].indexGroupId,\\n\\t\\t\\t\\t\\t\\\"indexGroupName\\\":measTypesParam[i].indexGroupName,\\n\\t\\t\\t\\t\\t\\\"aggrType\\\":2\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tneResourceSelected.push(oneNeResource);\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 设置\\\"按设备\\\"选择资源的数据\\n\\t\\tselectPageFlag = \\\"byDevicePage\\\";\\n\\t\\tdeviceAllInfo = neResourceSelected;\\n\\t\\tsetSelectedData(neResourceSelected);\\n\\t}\\n\\t\\n\\t// 点击时间组件\\n\\tfunction canQueryHistoryData()\\n\\t{\\n\\t\\tif ($.isArray(moIndexs) && moIndexs.length > 0) {\\n\\t\\t\\treturn true;;\\n\\t\\t}\\n\\t\\telse if(obj2Index && obj2Index.length > 0)\\n\\t\\t{\\n\\t\\t\\treturn true;;\\n\\t\\t}\\n\\t\\telse if (dn2Index && dn2Index.length > 0)\\n\\t\\t{\\n\\t\\t\\treturn true;;\\t\\n\\t\\t}\\n\\t\\telse if(mos.length > 0 && measTypes.length > 0){\\n\\t\\t\\treturn true;\\n\\t\\t} else{\\n\\t\\t\\t// 或者弹框\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\t\\t\\n\\t\\n\\tfunction getMonitorHistoryTimeRange(timeRange) \\n\\t{\\n\\t\\tvar result;\\n\\t\\t\\n\\t\\tswitch (timeRange) {\\n\\t\\t\\tcase 1:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_ONE_HOUR;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 3:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_THREE_HOURS;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 6:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_SIX_HOURS;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 12:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_TWELVE_HOURS;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 24:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_ONE_DAY;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 72:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_THREE_DAY;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 168:\\n\\t\\t\\t\\tresult = TIME_SPACE.LAST_ONE_WEEK;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tdefault:\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn result;\\n\\t}\\n\\t\\n\\tfunction dealTimeRange(timeRange) {\\n\\t\\t// 判断有无传入时间条件\\n\\t\\tif ($.isNumeric(timeRange) && $.isNumeric(getMonitorHistoryTimeRange(timeRange))) {\\n\\t\\t\\t timeSpace = getMonitorHistoryTimeRange(timeRange);\\n\\t\\t} else {\\n\\t\\t\\tif ($.isNumeric(historyTimeRange)) {\\n\\t\\t\\t\\ttimeSpace = historyTimeRange;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// 如果传不合法的参数，默认展示最近一个小时\\n\\t\\tif (!$.isNumeric(timeSpace)) {\\n\\t\\t\\ttimeSpace = TIME_SPACE.LAST_ONE_HOUR;\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar selected = DOMS.containerTimeRange.find(\\\"a[time-space=\\\" + timeSpace + \\\"]\\\");\\n\\t\\t$(selected).addClass(\\\"a4\\\");\\n\\t\\t$(selected).closest(\\\"span\\\").siblings(\\\"span\\\").find(\\\"a\\\").removeClass(\\\"a4\\\");\\n\\t}\\n\\t\\n\\tfunction dealTempMeasTypesAndMos(isContainCollectObject, dataFromView)\\n\\t{\\n\\t\\tif(isContainCollectObject)\\n\\t\\t{\\n\\t\\t\\ttempMos = [];\\n\\t\\t\\ttempCollectObjects = [];\\n\\t\\t\\ttempMeasTypes = [];\\n\\t\\t\\tfor(var i =0;i<dataFromView.length;i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\t// 对象\\n\\t\\t\\t\\tvar tmoIndexView = {\\n\\t\\t\\t\\t\\t\\\"dn\\\":dataFromView[i].dn\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpMos(tmoIndexView))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempMos.push(tmoIndexView);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 指标\\n\\t\\t\\t\\tvar tmeasTypeView = {\\n\\t\\t\\t\\t\\t\\\"id\\\":dataFromView[i].indexId\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpMeasTypes(tmeasTypeView))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempMeasTypes.push(tmeasTypeView);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\ttempMos = [];\\n\\t\\t\\ttempCollectObjects = [];\\n\\t\\t\\ttempMeasTypes = [];\\n\\t\\t\\tfor(var i =0;i<dataFromView.length;i++)\\n\\t\\t\\t{\\n\\t\\t\\t\\t// 对象\\n\\t\\t\\t\\tvar tObjIndexView = {\\n\\t\\t\\t\\t\\t\\\"dn\\\":dataFromView[i].dn,\\n\\t\\t\\t\\t\\t\\\"displayValue\\\":dataFromView[i].displayValue\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpCollectObjects(tObjIndexView))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempCollectObjects.push(tObjIndexView);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 指标\\n\\t\\t\\t\\tvar tmeasTypeView = {\\n\\t\\t\\t\\t\\t\\\"id\\\":dataFromView[i].indexId\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tif(!isInTmpMeasTypes(tmeasTypeView))\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\ttempMeasTypes.push(tmeasTypeView);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction dealMonitorDataExpect()\\n\\t{\\n\\t\\tif(needAyncFrame)\\n\\t\\t{\\n\\t\\t\\tneedAyncFrame = false;\\n\\t\\t\\tvar tmpDocument = $(\\\"#deviceFrame\\\");\\n\\t\\t\\tif(!tmpDocument || tmpDocument.length == 0)\\n\\t\\t\\t{\\n\\t\\t\\t\\t$(\\\"#device_selecct\\\").append(devFrameAsync);\\n\\t\\t\\t\\t$(\\\"#measObject_selecct\\\").append(objFrameAsync);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t\\n\\tvar getMonitorDataByPortletId = function (hisPortletId) {\\n\\t\\tvar thisPortlet = null;\\n\\t\\t\\n\\t\\tif (iemp && iemp.portlet && $.isFunction(iemp.portlet.getPortlet)) {\\n\\t\\t\\tthisPortlet = iemp.portlet.getPortlet(hisPortletId);\\n\\t\\t}\\n\\t\\t\\n\\t\\tif (!thisPortlet) {\\n\\t\\t\\tvar noPortletData = null;\\n\\t\\t\\tconsole.log(\\\"get portlet failed, portletId:\\\", hisPortletId);\\n\\t\\t\\tdealMonitorDataExpect();\\n\\t\\t\\treturn noPortletData;\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar monitorUrl = thisPortlet.data;\\n\\t\\tvar monitoryViewMoIndexs = window.iemp.ui.pm.Utils.getUrlParam(\\\"moIndexs\\\", monitorUrl);\\n\\t\\t\\n\\t\\tvar monitorViewParseData = $.map(monitoryViewMoIndexs.split(\\\"|||\\\"), function (el) {\\n\\t\\t\\t\\tif (el) {\\n\\t\\t\\t\\t\\tvar els = el.split(\\\"~~\\\");\\n                    if (isHistoryQueryTimeIntervalEnable()) {\\n                        return {\\n                            \\\"dn\\\" : els[0],\\n                            \\\"indexId\\\" : els[1],\\n                            \\\"displayValue\\\" : els[2],\\n                            \\\"aggrType\\\" : 2,\\n                            \\\"displayPeriod\\\" : 300\\n                        };\\n                    } else {\\n                        return {\\n                            \\\"dn\\\" : els[0],\\n                            \\\"indexId\\\" : els[1],\\n                            \\\"displayValue\\\" : els[2],\\n                            \\\"aggrType\\\" : 2\\n                        };\\n                    }\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\t\\t\\n\\t\\tif (!monitorViewParseData) {\\n\\t\\t\\tvar noPortletData = null;\\n\\t\\t\\tconsole.log(\\\"get portlet failed, portletId:\\\", hisPortletId);\\n\\t\\t\\tdealMonitorDataExpect();\\n\\t\\t\\treturn noPortletData;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn JSON.stringify(monitorViewParseData);\\n\\t}\\n\\t\\n\\t// 处理从监控视图跳转过来的数据\\n\\tvar dealDataFromMonitorView = function(monitorViewData, indexsDatas)\\n\\t{\\n\\t\\t\\n\\t\\t//\\n\\t\\tvar aUrl = window.location.search;\\n\\t\\ttimeRange = parseInt(window.iemp.ui.pm.Utils.getUrlParam(\\\"timeRange\\\", aUrl), 10);\\n\\t\\t\\n\\t\\t// \\n\\t\\tdealTimeRange(timeRange);\\n\\t\\t\\n\\t\\tvar viewDatas = JSON.parse(monitorViewData);\\n\\t\\t// 判断有没有测量对象\\n\\t\\tvar containCollectObject = true;\\n\\t\\t$.each(viewDatas, function (index, viewData) {\\n\\t\\t\\tif (!!viewData.displayValue) {\\n\\t\\t\\t\\tcontainCollectObject = true;\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\t\\n\\t\\t// set tempMos,tempCollectObjects,tempMeasTypes\\n\\t\\tdealTempMeasTypesAndMos(containCollectObject, viewDatas);\\n\\t\\t\\n\\t\\t//  如果有测量对象\\n\\t\\tif(containCollectObject)\\n\\t\\t{\\n\\t\\t\\tobj2Index = [];\\n\\t\\t\\tobj2Index = viewDatas;\\n\\t\\t\\t\\n\\t\\t\\t// 设置\\\"按对象\\\"选择资源的数据\\n\\t\\t\\tselectPageFlag = \\\"byMeasObjectPage\\\";\\n\\t\\t\\tsetSelectedData(obj2Index);\\n\\t\\t\\t\\n\\t\\t\\t// 调用查询函数, 直接查询\\n\\t\\t\\tqueryHistoryTimeData();\\n\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tvar monitorViewSelectData = [];\\n\\t\\t\\t\\n\\t\\t\\t// 仅仅为了获取网元详细信息\\n\\t\\t\\tgetMoInfoesFromCMos(viewDatas, function () {\\n\\t\\t\\t\\t// 取得下面两个参数\\n\\t\\t\\t\\ttempCollectObjects = [];\\n\\t\\t\\n\\t\\t\\t\\tfor(var i = 0;i<viewDatas.length;i++)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tfor(var j = 0;j<tempMos.length;j++)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tif(tempMos[j].dn == viewDatas[i].dn)\\n\\t\\t\\t\\t\\t\\t{\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t// 给按设备选择资源页面的\\n\\t\\t\\t\\t\\t\\t\\tvar aNe = {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"dn\\\" : tempMos[j].dn,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"neIP\\\" : tempMos[j].ip,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"neName\\\" : tempMos[j].name,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"neType\\\" : tempMos[j].type,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexId\\\" : viewDatas[i].indexId,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexName\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexGroupId\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"indexGroupName\\\" : \\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"aggrType\\\" : viewDatas[i].aggrType\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\tmonitorViewSelectData.push(aNe);\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// 然后,仅仅为了获取指标详细信息\\n\\t\\t\\t\\tvar tMeasTypes = getMeasTypesParamFromUrlParam(indexsDatas || \\\"\\\");\\n\\t\\t\\t\\tgetMeasTypeInfoesFromCMeasType(\\\"\\\", tMeasTypes, tMeasTypes.length, function () {\\n\\t\\t\\t\\t\\t// 遍历已选信息,为其赋指标详细信息\\n\\t\\t\\t\\t\\tfor (var i = 0; i < monitorViewSelectData.length; i++) \\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tfor (var j = 0; j < tempMeasTypes.length; j++)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tif (tempMeasTypes[j].id == monitorViewSelectData[i].indexId) \\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\tmonitorViewSelectData[i].indexName = tempMeasTypes[j].name;\\n\\t\\t\\t\\t\\t\\t\\t\\tmonitorViewSelectData[i].indexGroupId = tempMeasTypes[j].indexGroupId;\\n\\t\\t\\t\\t\\t\\t\\t\\tmonitorViewSelectData[i].indexGroupName = tempMeasTypes[j].indexGroupName;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t// 完成指标详细信息后,将已选数据传给\\\"按设备\\\"页面\\n\\t\\t\\t\\t\\t// 设置\\\"按设备\\\"选择资源的数据\\n\\t\\t\\t\\t\\tselectPageFlag = \\\"byDevicePage\\\";\\n\\t\\t\\t\\t\\t// dn2Index 信息太少\\n\\t\\t\\t\\t\\tsetSelectedData(monitorViewSelectData);\\n\\t\\t\\t\\t\\t// 顺便将详细信息存于此，后续cancel按钮有用\\n\\t\\t\\t\\t\\tdeviceAllInfo = monitorViewSelectData;\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t});\\n\\t\\t\\t\\n\\n \\t\\t\\t// 设置查询历史数据的参数(应放在前面)\\t\\n\\t\\t\\tdn2Index = [];\\n\\t\\t\\t// viewDatas 中含displayValue的话,要去除\\n\\t\\t\\tfor(var i = 0; i < viewDatas.length; i++)\\n\\t\\t\\t{\\n                if (isHistoryQueryTimeIntervalEnable()) {\\n                    var tDnIndex = {\\n                        \\\"dn\\\":viewDatas[i].dn,\\n                        \\\"indexId\\\":viewDatas[i].indexId,\\n                        \\\"aggrType\\\":viewDatas[i].aggrType,\\n                        \\\"displayPeriod\\\":300\\n                    }\\n                } else {\\n                    var tDnIndex = {\\n                        \\\"dn\\\":viewDatas[i].dn,\\n                        \\\"indexId\\\":viewDatas[i].indexId,\\n                        \\\"aggrType\\\":viewDatas[i].aggrType\\n                    }\\n                }\\n\\t\\t\\t\\tdn2Index.push(tDnIndex);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t// 调用查询函数, 直接查询\\n\\t\\t\\tqueryHistoryTimeData();\\n\\t\\t}\\n\\t\\t\\n\\t}\\n\\t\\n\\t/**\\n\\t * 设置数据\\n\\t */\\n\\tvar setSelectedDataToFrame = function () {\\n\\t\\twindow.iFrameSetDataTimeInt = setInterval(function () {\\n\\t\\t\\t\\tif ($(document).find(\\\"iframe\\\")[0].contentWindow.setSelectedData && $(document).find(\\\"iframe\\\")[1].contentWindow.setSelectedData && selectedDataToFrame) {\\n\\t\\t\\t\\t\\tif (selectPageFlag == \\\"byDevicePage\\\") {\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[0].contentWindow.setSelectedData(selectedDataToFrame);\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// 如果\\\"按对象\\\"页面还未曾初始化\\n\\t\\t\\t\\t\\t\\tif (!isSelectResourceInit) {\\n\\t\\t\\t\\t\\t\\t\\tisSelectResourceInit = true;\\n\\t\\t\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.setSelectResourceInit();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// 隐藏面板\\n\\t\\t\\t\\t\\t\\t$scope.selectResourceType.setCheckedByValue(1);\\n\\t\\t\\t\\t\\t\\t$('#measObject_selecct').hide();\\n\\t\\t\\t\\t\\t\\t$('#device_selecct').show();\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t// 如果\\\"按对象\\\"页面还未曾初始化\\n\\t\\t\\t\\t\\t\\tif (!isSelectResourceInit) {\\n\\t\\t\\t\\t\\t\\t\\tisSelectResourceInit = true;\\n\\t\\t\\t\\t\\t\\t\\t$(document).find(\\\"iframe\\\")[1].contentWindow.setSelectedData(selectedDataToFrame);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t// 隐藏面板\\n\\t\\t\\t\\t\\t\\t$scope.selectResourceType.setCheckedByValue(2);\\n\\t\\t\\t\\t\\t\\t$('#device_selecct').hide();\\n\\t\\t\\t\\t\\t\\t$('#measObject_selecct').show();\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tneedAyncFrame = false;\\n\\t\\t\\t\\t\\tclearInterval(window.iFrameSetDataTimeInt);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}, 500);\\n\\t\\t\\n\\t}\\n\\t\\n\\t/**\\n\\t * 设置数据\\n\\t */\\n\\tvar setSelectedData = function (selectedData) {\\n\\t\\t// a bug for change to async iframe\\n\\t\\tif(!selectedData)\\n\\t\\t{\\n\\t\\t\\tselectedData = [];\\n\\t\\t}\\n\\t\\t\\n\\t\\tselectedDataToFrame = selectedData;\\n\\t}\\n\\t\\n\\tfunction dealAsyncIframe()\\n\\t{\\n\\t\\tvar aUrl = window.location.search;\\n\\t\\t\\n\\t\\tvar objsIframe = window.iemp.ui.pm.Utils.getUrlParam(\\\"objects\\\", aUrl) || window.iemp.ui.pm.Utils.getUrlParam(\\\"resources\\\", aUrl);\\n\\t\\tvar moIndexsArgsIframe = window.iemp.ui.pm.Utils.getUrlParam(\\\"moIndexs\\\", aUrl);\\n\\t\\tvar moIndexesIframe = window.iemp.ui.pm.Utils.getUrlParam(\\\"moIndexes\\\", aUrl);\\t\\t\\n\\t\\tvar monitorDataIframe = window.iemp.ui.pm.Utils.getUrlParam(\\\"monitorPortletID\\\", aUrl);\\n\\t\\t\\n\\t\\tif(objsIframe || moIndexsArgsIframe || moIndexesIframe || monitorDataIframe)\\n\\t\\t{\\n\\t\\t\\tneedAyncFrame = true;\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\t\\t$(\\\"#device_selecct\\\").append(devFrameAsync);\\n\\t\\t\\t\\t$(\\\"#measObject_selecct\\\").append(objFrameAsync);\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunction dealIframeAfterChart() \\n\\t{\\n\\t\\tif (needAyncFrame) \\n\\t\\t{\\n\\t\\t\\twindow.dealIframeAfterChart = setTimeout(function(){\\n\\t\\t\\t$(\\\"#device_selecct\\\").append(devFrameAsync);\\n\\t\\t\\t$(\\\"#measObject_selecct\\\").append(objFrameAsync);\\n\\t\\t\\tsetSelectedDataToFrame();\\n\\t\\t\\t}, 500);\\n\\t\\t}\\n\\t\\t\\n\\t}\\n\\t\\n\\t// 为 Js 写的数组判断函数\\n\\tfunction isContainMo(moArray, aMo) \\n\\t{\\n\\t\\tfor (var i = 0; i < moArray.length; i++)\\n\\t\\t{\\n\\t\\t\\tif (moArray[i].dn == aMo.dn)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\t// 为 Js 写的数组判断函数\\n\\tfunction contain(array, s) \\n\\t{\\n\\t\\tfor (var i = 0; i < array.length; i++)\\n\\t\\t{\\n\\t\\t\\tif (array[i] == s)\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\t\\n\\t// 设置两个iframe高度\\n\\twindow.setDeviceIframeHieght = function(selectLength)\\n\\t{\\n\\t\\tif(selectLength>1)\\n\\t\\t{\\n\\t\\t\\tif(selectLength > 10)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar newHeight = 695 + 7 * 30;\\n\\t\\t\\t\\t$(\\\"#deviceFrame\\\").css(\\\"height\\\", newHeight);\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar newHeight = 635 + ((selectLength - 1) * 30);\\n\\t\\t\\t\\t$(\\\"#deviceFrame\\\").css(\\\"height\\\", newHeight);\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\t$(\\\"#deviceFrame\\\").css(\\\"height\\\", 635);\\n\\t\\t}\\n\\t}\\n\\t\\n\\t// 设置两个iframe高度\\n\\twindow.setObjIframeHieght = function(selectLength)\\n\\t{\\n\\t\\tif(selectLength>1)\\n\\t\\t{\\n\\t\\t\\tif(selectLength > 10)\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar newHeight = 695 + 7 * 30;\\n\\t\\t\\t\\t$(\\\"#measObjectFrame\\\").css(\\\"height\\\", newHeight);\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tvar newHeight = 635 + ((selectLength - 1) * 30);\\n\\t\\t\\t\\t$(\\\"#measObjectFrame\\\").css(\\\"height\\\", newHeight);\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\t$(\\\"#measObjectFrame\\\").css(\\\"height\\\", 635);\\n\\t\\t}\\n\\t}\\n\\t\\n\\t\\n\\t/********************************************* IT4 Begin ****************************************************/\\n\\t\\n\\tvar renderTable = function(data, chart, i){\\n\\t\\tvar HISTORY_TABLE_TEMPLATE  = '<eview:table id=\\\"{{portletName}}_historyDataTable\\\" listeners=\\\"listeners\\\" height=\\\"{{minTabHeight}} \\\"scroll=\\\"false\\\" enable-tooltip =\\\"true\\\" display-length=\\\"10\\\" dataset=\\\"tableData\\\" row-id-field=\\\"rowId\\\">';\\n\\t\\t\\tHISTORY_TABLE_TEMPLATE += '   <eview:table-column id=\\\"expandId\\\" column-type=\\\"expandrow\\\"></eview:table-column>';\\n\\t\\t\\tHISTORY_TABLE_TEMPLATE += '   <eview:table-column id=\\\"neNameId\\\" caption=\\\"neNameAndMeasIndex\\\" enable-tooltip =\\\"true\\\" sortable=\\\"true\\\"></eview:table-column>';\\n\\t\\t\\tHISTORY_TABLE_TEMPLATE += '   <eview:table-column id=\\\"measObjectId\\\" caption=\\\"measureObject\\\" enable-tooltip =\\\"true\\\" sortable=\\\"true\\\"></eview:table-column>';\\n\\t\\t\\tHISTORY_TABLE_TEMPLATE += '   <eview:table-column id=\\\"valueId\\\" caption=\\\"indexValue\\\" enable-tooltip =\\\"true\\\" sortable=\\\"true\\\"></eview:table-column>';\\n\\t\\t\\tHISTORY_TABLE_TEMPLATE += '   <eview:table-column id=\\\"timeId\\\" caption=\\\"time\\\" enable-tooltip =\\\"true\\\" sortable=\\\"true\\\"></eview:table-column>';\\n\\t\\t\\tHISTORY_TABLE_TEMPLATE += '</eview:table>';\\n\\t\\t\\n\\t\\t    HISTORY_TABLE_TEMPLATE = window.iemp.ui.pm.Utils.compile(HISTORY_TABLE_TEMPLATE);\\n\\t\\t\\n\\t\\tvar minTableHeight = 400;\\n\\t\\tif(data && data.groupQueryData && data.groupQueryData[i])\\n\\t\\t{\\n\\t\\t\\tminTableHeight = 25 + data.groupQueryData[i].length * 31 + 63 + 10 + 5;\\n\\t\\t}\\n\\t\\t\\t\\n\\t\\tvar detailTableHtml = HISTORY_TABLE_TEMPLATE({\\n\\t\\t    'portletName':i,\\n\\t\\t\\t'minTabHeight':minTableHeight\\n\\t\\t});\\n\\t\\t\\n\\t\\t// 清除表格数据 clearTableByAPI;\\n\\t\\t\\n\\t\\tvar controllerId = \\\"historyPm_tableController_\\\" + i;\\n\\t\\t\\n\\t\\tvar tabHtmlId = \\\"#\\\" + \\\"PM_HistoryPm_TableContainer_\\\" + i;\\n\\t\\t\\n\\t\\t$(tabHtmlId).html(detailTableHtml);\\n\\t\\t\\n\\t\\tvar hisTableScope = null;\\n\\t\\t\\n\\t    eview.createController(controllerId, ['$scope'], function($scope) {\\n\\t\\t    hisTableScope = $scope;\\n\\t\\t\\t$scope.neNameAndMeasIndex = iemp.i18n.translate(\\\"com.huawei.i2000.pm.pollerMgr.ne.name\\\") + \\\"/\\\" + iemp.i18n.translate(\\\"com.huawei.oms.pm.history_pm.index_label\\\");\\n\\t\\t\\t$scope.measureObject = iemp.i18n.translate(\\\"com.huawei.i2000.pm.pollerMgr.measObject\\\");\\n\\t\\t\\t$scope.indexValue = iemp.i18n.translate(\\\"com.huawei.oms.pm.history_pm.value_tip_label\\\");\\n\\t\\t\\t$scope.time = iemp.i18n.translate('com.huawei.i2000.pm.history.table.time');\\n\\t\\t\\t\\n\\t\\t\\t$scope.tableData = getTableData(data, i);\\n\\t\\t\\t\\n\\n\\t\\t\\t$scope.listeners = {\\n\\t\\t\\t\\t\\\"expand-handler\\\": function(event) {\\n\\t\\t\\t\\t\\t// 在此处添加行展开的内容\\n\\t\\t\\t\\t\\tvar DETAILS_TABLE_TEMPLATE  = '<div id=\\\"{{portletName}}_expandDivId\\\" class=\\\"expandDiv\\\" style=\\\"overflow-x:auto;\\\">';\\n\\t\\t\\t\\t\\t    DETAILS_TABLE_TEMPLATE += '<table>';\\n\\t\\t\\t\\t\\t    DETAILS_TABLE_TEMPLATE += '\\t<tr>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t\\t<th>{{collectTime}}</th>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t\\t{{#each indexValues}}<td>{{this.timestampStr}}</td>{{/each}}';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t</tr>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t<tr>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t\\t<th>{{indexName}}</th>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t\\t{{#each indexValues}}<td>{{this.indexValue}}</td>{{/each}}';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '\\t</tr>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '</table>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE += '</div>';\\n\\t\\t\\t\\t\\t\\tDETAILS_TABLE_TEMPLATE = window.iemp.ui.pm.Utils.compile(DETAILS_TABLE_TEMPLATE); \\n                    var DETAILS_EMPTY_TEMPLATE = '<div id=\\\"{{portletName}}_expandDivId\\\" style=\\\"height: 28px;text-align: center;line-height:28px;\\\">{{historyTableNoData}}</div>';\\n                        DETAILS_EMPTY_TEMPLATE = window.iemp.ui.pm.Utils.compile(DETAILS_EMPTY_TEMPLATE);\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar html = \\\"\\\";\\n\\t\\t\\t\\t\\tif(event.rowData.indexValues && event.rowData.indexValues.length>0){\\n\\t\\t\\t\\t\\t\\thtml = DETAILS_TABLE_TEMPLATE({\\n\\t\\t\\t\\t\\t\\t    \\\"collectTime\\\":iemp.i18n.translate('com.huawei.i2000.pm.history.table.time'),\\n\\t\\t\\t\\t\\t\\t\\t\\\"portletName\\\": i,\\n\\t\\t\\t\\t\\t\\t\\t\\\"indexName\\\": event.rowData.indexName,\\n\\t\\t\\t\\t\\t\\t\\t\\\"indexValues\\\": event.rowData.indexValues\\n\\t\\t\\t\\t\\t\\t});\\t\\n\\t\\t\\t\\t\\t}else{\\n\\t\\t\\t\\t\\t    html = DETAILS_EMPTY_TEMPLATE({\\n\\t\\t\\t\\t\\t\\t    \\\"portletName\\\": i,\\n\\t\\t\\t\\t\\t\\t\\t\\\"historyTableNoData\\\":iemp.i18n.translate('com.huawei.i2000.pm.history.table.nodata.description')\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t$('#' + event.expandDivId).append(html);\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"collapse-handler\\\": function(event) {\\n\\t\\t\\t\\t\\t// 如果业务生成的内容比较复杂，需要在此处做相关的销毁\\n\\t\\t\\t\\t\\t$('#'+ i + '_expandrow').remove();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"select\\\": function(event){\\n\\t\\t\\t\\t\\tvar rowId = event.data.rowData.rowId;\\n\\t\\t\\t\\t\\tif (chartComps && chartComps.length > 0){\\n\\t\\t\\t\\t\\t\\t$.each(chartComps, function(index, chartComp){\\n\\t\\t\\t\\t\\t\\t\\tif(!chartComp.chart || !chartComp.chart.seriesList){\\n\\t\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\tvar series = chartComp.chart.seriesList.getChildren(rowId);\\n\\t\\t\\t\\t\\t\\t\\tif(series){\\n\\t\\t\\t\\t\\t\\t\\t\\tseries.select();\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\n\\t\\t// 启动标签编译，tableController为dom节点的id\\n\\t\\teview.bootstrap(tabHtmlId);\\n\\t\\t\\n\\t\\t// save the scope in a array\\n\\t\\tHISTORTTABLESCOPEARRAY.push(hisTableScope);\\n\\t\\t\\n\\t\\t// register listener for series to table\\n\\t\\tchart.listeners.seriesselect = function (evt) {\\n\\t\\t\\tvar rowId = evt.data.seriesId;\\n\\t\\t\\t// chartId\\n\\t\\t\\tvar sourceId = evt.data.sourceId;\\n\\t\\t\\t\\n\\t\\t\\tvar chartIdnum = null;\\n\\t\\t\\tvar tableId = \\\"_historyDataTable\\\";\\n\\t\\t\\tif (sourceId) {\\n\\t\\t\\t\\t// which chart\\n\\t\\t\\t\\tchartIdnum = sourceId.split(\\\"iemp_real_time_pm_chart_\\\");\\n\\t\\t\\t\\ttableId = chartIdnum[1] + \\\"_historyDataTable\\\";\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tvar numIndex = parseInt(chartIdnum[1]);\\n\\t\\t\\t\\n\\t\\t\\tif (HISTORTTABLESCOPEARRAY[numIndex] && HISTORTTABLESCOPEARRAY[numIndex][tableId]) {\\n\\t\\t\\t\\tHISTORTTABLESCOPEARRAY[numIndex][tableId].setRowSelection([rowId], true);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t\\n\\tvar LAYOUTCHANGE = false;\\n\\tvar TABLEID = null;\\n\\tvar HISTORTTABLESCOPEARRAY = [];\\n\\tvar expandHtml = '<img src=\\\"/pm/themes/default/pm/app/img/collapsed.png\\\" />';\\n\\tvar collapseHtml = '<img src=\\\"/pm/themes/default/pm/app/img/expanded.png\\\" />';\\n\\t\\n\\tvar getTableData = function(data, index, expandRowId){\\n\\t\\tvar tableDataSet = [];\\n\\t\\tif(data.groupQueryData && data.groupQueryData.length>0){\\n\\t\\t    // 仅遍历单个 $.each(data.groupQueryData,function(index){\\n\\t\\t\\t    if(data.groupQueryData[index] && data.groupQueryData[index].length>0){\\n\\t\\t\\t\\t     $.each(data.groupQueryData[index],function(objectIndex){\\n\\t\\t\\t\\t\\t     var object = data.groupQueryData[index][objectIndex];\\n\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t\\t// 不需要这么复杂 var rowId = object.dn + \\\"~~\\\" + object.indexId + \\\"~~\\\" + object.displayValue;\\n\\t\\t\\t\\t\\t\\t var rowId = \\\"iemp_real_time_pm_chart_\\\" + index + \\\"_series_\\\" + objectIndex;\\n\\t\\t\\t\\t\\t\\t var rowData = {\\n\\t\\t\\t\\t\\t\\t     \\\"rowId\\\": rowId,\\n\\t\\t\\t\\t\\t\\t\\t \\\"expandId\\\": {\\n\\t\\t\\t\\t\\t\\t\\t     expanded: expandRowId && expandRowId==rowId,\\n\\t\\t\\t\\t\\t\\t\\t\\t expand:expandHtml,\\n\\t\\t\\t\\t\\t\\t\\t\\t collapse:collapseHtml\\n\\t\\t\\t\\t\\t\\t\\t  },\\n\\t\\t\\t\\t\\t\\t\\t \\\"neNameId\\\": object.neName+'/'+object.indexName,\\n\\t\\t\\t\\t\\t\\t\\t \\\"measObjectId\\\": object.displayValue,\\n\\t\\t\\t\\t\\t\\t\\t \\\"indexName\\\": object.indexName,\\n\\t\\t\\t\\t\\t\\t\\t \\\"indexValues\\\": object.indexValues\\n\\t\\t\\t\\t\\t\\t };\\n\\t\\t\\t\\t\\t\\t getLastIndexValue(object,rowData);\\n\\t\\t\\t\\t\\t\\t tableDataSet.push(rowData);\\n\\t\\t\\t\\t\\t });   \\n\\t\\t\\t\\t}\\n\\t\\t\\t// }\\n\\t\\t\\treturn tableDataSet;\\n\\t\\t}\\n\\t}\\n\\t\\n\\t//get the latest index value\\n\\tvar getLastIndexValue = function(object,rowData){\\n\\t    if(!object || !object.indexValues || object.indexValues.length == 0){\\n\\t\\t    rowData.valueId = $scope.i18n.hisTableNoData;\\n\\t\\t\\trowData.timeId = \\\"\\\";\\n\\t\\t}else{\\n\\t\\t    var lastIndex = object.indexValues.length - 1;\\n\\t\\t\\trowData.valueId = object.indexValues[lastIndex].indexValue;\\n\\t\\t\\trowData.timeId = object.indexValues[lastIndex].timestampStr;\\n\\t\\t}\\n\\t}\\n\\t\\n\\tvar setSettingPanel = function()\\n\\t{\\n\\t\\t// layout\\n\\t\\tLAYOUT = MONITOR_LAYOUT.CURVE;\\n\\t\\t$scope.pm_monitorView_layout.setCheckedByValue(MONITOR_LAYOUT.CURVE);\\n\\t}\\n\\t\\n\\t// save the series should be hidden\\n\\tfunction setChartSeriesMap(e) \\n\\t{\\n\\t\\tfor (var i = 0; i < chart_series_map.length; i++) \\n\\t\\t{\\n\\t\\t\\tif (e.chartId === chart_series_map[i].chartId && e.seriesId === chart_series_map[i].seriesId) \\n\\t\\t\\t{\\n\\t\\t\\t\\tchart_series_map[i].isHide = e.checkedLegend;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar tempCSMap = {\\n\\t\\t\\t\\\"chartId\\\" : e.chartId,\\n\\t\\t\\t\\\"isHide\\\" : e.checkedLegend,\\n\\t\\t\\t\\\"seriesId\\\" : e.seriesId\\n\\t\\t};\\n\\t\\n\\t\\tchart_series_map.push(tempCSMap);\\n\\t}\\n\\t\\n\\t// make the series of chart to be hidden\\n\\tfunction handleChartSeries() \\n\\t{\\n\\t\\tfor(var j = 0; j < chartComps.length; j++)\\n\\t\\t{\\n\\t\\t\\tfor(var k = 0; k < chart_series_map.length; k++)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif(chartComps[j].chartId === chart_series_map[k].chartId &&  chart_series_map[k].isHide)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tvar array = [];\\n\\t\\t\\t\\t\\tarray.push(chart_series_map[k].seriesId);\\n\\t\\t\\t\\t\\tchartComps[j].hideSeries(array);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t\\n\\t// portlet title tips, use eview tips\\n\\tvar tip = null;\\n\\t\\t\\n\\tvar addTip = function(text, position) {\\n\\t\\tif(!text || text === \\\"\\\" || text === \\\"                      \\\")\\t\\n\\t\\t{\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\t\\t\\n\\t\\tif (!tip) {\\n\\t\\t\\ttip = new eview.Tips();\\n\\t\\t}\\n\\t\\ttip.setMsg(text);\\n\\t\\ttip.setElement(position);\\n\\t\\ttip.show();\\n\\t\\treturn;\\n\\t}\\n\\t\\n\\tvar removeTip = function() {\\n\\t\\tif (tip) {\\n\\t\\t\\ttip.hide();\\n\\t\\t}\\n\\t}\\n\\t\\n\\tvar initTemplateTips = function () {\\n\\t\\t$(\\\".iemp_zbox_tit_text\\\").mouseover(function () {\\n\\t\\t\\tif(this)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif(!this.textContent)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t \\tthis.textContent = this.innerText ? this.innerText : this.outerText;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\taddTip(this.textContent, this);\\n\\t\\t});\\n\\t\\t\\n\\t\\t$(\\\".iemp_zbox_tit_text\\\").mouseleave(function () {\\n\\t\\t\\tremoveTip();\\n\\t\\t});\\n\\t}\\n}\\n\\n//增加帮助id\\nvar addHelpId = function () {\\n\\teview.widgets.Help.create({\\n\\t\\ttipId : \\\"oms.pm.history.helpid\\\"\\n\\t});\\n}\\n\\nfunction allContentCilck(event)\\n{\\t\\t\\n    var id;\\n    if (navigator.userAgent.indexOf(\\\"Firefox\\\")!=-1)\\n    {\\n        id=event.originalTarget.id;\\n    }else\\n    {\\n        id=event.srcElement.id;\\n    }\\n    if (0==id.indexOf('chooseDateRangeHelp'))\\n    {\\n        scope_.chooseDateRangeHelpContent.attr(\\\"display\\\",true);\\n        var daterange = getHistoryDateRange();\\n        var days = daterange[2];\\n        var helpTips = iemp.i18n.translate('com.huawei.oms.pm.history_pm.range.tips') + \\\" \\\" + parseInt(days, 10) + \\\" \\\" + iemp.i18n.translate('com.huawei.oms.pm.history_pm.range.tips.days');\\n        scope_.chooseDateRangeHelpContent.attr(\\\"text\\\",helpTips);\\n    }else\\n    {\\n        scope_.chooseDateRangeHelpContent.attr(\\\"display\\\",false);\\n    }\\n}\\n\\n\\n\\n\",\"contentType\":\"text/javascript\",\"loadedState\":\"loaded\"},\"https://39.134.87.216:31943/pm/themes/default/pm/app/js/history_pm_alone.js\",\"https://39.134.87.216:31943/portal.ui/MenuInfoServlet?jsonp=callback\",\"https://39.134.87.216:31943/rest/i18n?module=com.huawei.i2000.app.pm\"]");
user_pref("devtools.inspector.activeSidebar", "computedview");
user_pref("devtools.inspector.show-three-pane-tooltip", false);
user_pref("devtools.inspector.three-pane-first-run", false);
user_pref("devtools.netmonitor.panes-network-details-height", 469);
user_pref("devtools.netmonitor.panes-network-details-width", 507);
user_pref("devtools.netmonitor.persistlog", true);
user_pref("devtools.onboarding.telemetry.logged", true);
user_pref("devtools.performance.recording.interval", 1000);
user_pref("devtools.telemetry.tools.opened.version", "{\"DEVTOOLS_SCREEN_RESOLUTION_ENUMERATED_PER_USER\":\"61.0.2\"}");
user_pref("devtools.toolbox.host", "right");
user_pref("devtools.toolbox.previousHost", "bottom");
user_pref("devtools.toolbox.sidebar.width", 365);
user_pref("devtools.toolbox.tabsOrder", "inspector,webconsole,jsdebugger,styleeditor,performance,memory,netmonitor,storage,accessibility");
user_pref("devtools.toolsidebar-height.inspector", 572);
user_pref("devtools.toolsidebar-width.inspector", 700);
user_pref("devtools.toolsidebar-width.inspector.splitsidebar", 350);
user_pref("distribution.MozillaOnline.bookmarksProcessed", true);
user_pref("distribution.iniFile.exists.appversion", "64.0");
user_pref("distribution.iniFile.exists.value", true);
user_pref("dom.push.userAgentID", "f7b93c6c424d41e38ebb4e45359172cb");
user_pref("experiments.activeExperiment", false);
user_pref("extensions.blocklist.lastModified", "Thu, 27 Dec 2018 00:21:48 GMT");
user_pref("extensions.blocklist.pingCountTotal", 47);
user_pref("extensions.blocklist.pingCountVersion", 2);
user_pref("extensions.cpmanager.tracking.notification.show", false);
user_pref("extensions.cpmanager@mozillaonline.com.active_time", "1527414855168");
user_pref("extensions.cpmanager@mozillaonline.com.fxa.initstep", 3);
user_pref("extensions.cpmanager@mozillaonline.com.pocketButtonRemoved2", true);
user_pref("extensions.cpmanager@mozillaonline.com.screenshotButtonRemoved", true);
user_pref("extensions.cpmanager@mozillaonline.com.uuid", "{4b0d1534-751f-47f7-af49-c483aaa24e2f}");
user_pref("extensions.databaseSchema", 27);
user_pref("extensions.getAddons.cache.lastUpdate", 1545920722);
user_pref("extensions.getAddons.databaseSchema", 5);
user_pref("extensions.installedDistroAddon.cehomepage@mozillaonline.com", true);
user_pref("extensions.installedDistroAddon.cpmanager@mozillaonline.com", true);
user_pref("extensions.lastAppBuildId", "20181206201918");
user_pref("extensions.lastAppVersion", "64.0");
user_pref("extensions.lastPlatformVersion", "64.0");
user_pref("extensions.pendingOperations", false);
user_pref("extensions.pocket.enabled", false);
user_pref("extensions.screenshots.disabled", true);
user_pref("extensions.systemAddonSet", "{\"schema\":1,\"addons\":{}}");
user_pref("extensions.webcompat.perform_injections", true);
user_pref("extensions.webcompat.perform_ua_overrides", true);
user_pref("extensions.webextensions.uuids", "{\"cehomepage@mozillaonline.com\":\"dae25f82-b7dc-4591-b2c0-83029320b8ac\",\"cpmanager@mozillaonline.com\":\"a9528414-fe99-4608-83cb-10f89b2c28d6\",\"webcompat@mozilla.org\":\"81fb50f9-bc22-4497-b2ee-4c6a4682bdc7\",\"formautofill@mozilla.org\":\"e62271bb-5ca3-447f-972f-d81ce10419e8\",\"fxmonitor@mozilla.org\":\"69d61461-0daa-47d3-afc0-8947623b5006\",\"screenshots@mozilla.org\":\"3beaeb01-0b87-474d-a98f-47dc9ec584d5\",\"webcompat-reporter@mozilla.org\":\"fa098b3c-4056-42ab-a2a1-6b81c604f7a7\"}");
user_pref("findbar.highlightAll", true);
user_pref("gecko.handlerService.migrated", true);
user_pref("general.warnOnAboutConfig", false);
user_pref("identity.fxaccounts.auth.uri", "https://api-accounts.firefox.com.cn/v1");
user_pref("identity.fxaccounts.autoconfig.uri", "https://accounts.firefox.com.cn");
user_pref("identity.fxaccounts.remote.oauth.uri", "https://oauth.firefox.com.cn/v1");
user_pref("identity.fxaccounts.remote.profile.uri", "https://profile.firefox.com.cn/v1");
user_pref("identity.fxaccounts.remote.root", "https://accounts.firefox.com.cn");
user_pref("identity.sync.tokenserver.uri", "https://sync.firefox.com.cn/token/1.0/sync/1.5");
user_pref("idle.lastDailyNotification", 1545494523);
user_pref("layers.mlgpu.sanity-test-failed", false);
user_pref("lightweightThemes.usedThemes", "[]");
user_pref("media.gmp-gmpopenh264.abi", "x86_64-msvc-x64");
user_pref("media.gmp-gmpopenh264.lastUpdate", 1539877975);
user_pref("media.gmp-gmpopenh264.version", "1.7.1");
user_pref("media.gmp-manager.buildID", "20181206201918");
user_pref("media.gmp-manager.lastCheck", 1545921221);
user_pref("media.gmp-widevinecdm.abi", "x86_64-msvc-x64");
user_pref("media.gmp-widevinecdm.lastUpdate", 1545920728);
user_pref("media.gmp-widevinecdm.version", "4.10.1146.0");
user_pref("media.gmp.storage.version.observed", 1);
user_pref("media.hardware-video-decoding.failed", false);
user_pref("moa.ntab.useDefaultDials", true);
user_pref("moa.ntab.useSecure", true);
user_pref("moa.partnerbookmark.signature", "MIGTMA0GCSqGSIb3DQEBDQUAA4GBAMMnFuRlLm1sqCq9UvQZVnWXL6Pf0WUVzh/M4nVjzaunQXsqrj0zTIArwGO2fd4PlmMo3Sss66NfRwS7hcUyhdRXJ+evr1RZvcdfFee4pe04l0seTuQdSm8TzVgzIpB9Hy2t0L/+mnXELZJjOS4TgE5SIQT2ShT1oQdsRO7QNAOf");
user_pref("moa.partnerbookmark.tempfixversion", 429073);
user_pref("network.cookie.prefsMigrated", true);
user_pref("network.http.throttle.version", 2);
user_pref("network.predictor.cleaned-up", true);
user_pref("pdfjs.enabledCache.initialized", true);
user_pref("pdfjs.enabledCache.state", true);
user_pref("pdfjs.migrationVersion", 2);
user_pref("pdfjs.previousHandler.alwaysAskBeforeHandling", true);
user_pref("places.database.lastMaintenance", 1545494524);
user_pref("places.history.expiration.transient_current_max_pages", 112348);
user_pref("plugin.disable_full_page_plugin_for_types", "application/pdf");
user_pref("pref.privacy.disable_button.tracking_protection_exceptions", false);
user_pref("privacy.sanitize.pending", "[]");
user_pref("privacy.sanitize.timeSpan", 0);
user_pref("sanity-test.advanced-layers", true);
user_pref("sanity-test.device-id", "0x0fc6");
user_pref("sanity-test.driver-version", "22.21.13.8541");
user_pref("sanity-test.running", false);
user_pref("sanity-test.version", "20181206201918");
user_pref("security.disable_button.openCertManager", false);
user_pref("security.enterprise_roots.enabled", true);
user_pref("security.sandbox.content.tempDirSuffix", "{e2a060ff-5205-4791-a871-5783cd650ed2}");
user_pref("security.sandbox.plugin.tempDirSuffix", "{f4d77cc7-4dbc-4b21-a3fe-7a373305ca43}");
user_pref("services.blocklist.addons.checked", 1545923459);
user_pref("services.blocklist.clock_skew_seconds", -1);
user_pref("services.blocklist.gfx.checked", 1545923459);
user_pref("services.blocklist.last_etag", "\"1528408770328\"");
user_pref("services.blocklist.last_update_seconds", 1530434737);
user_pref("services.blocklist.onecrl.checked", 1545923459);
user_pref("services.blocklist.pinning.checked", 1545923459);
user_pref("services.blocklist.plugins.checked", 1545923459);
user_pref("services.settings.clock_skew_seconds", -265);
user_pref("services.settings.last_update_seconds", 1545923459);
user_pref("services.settings.main.fxmonitor-breaches.last_check", 1545436325);
user_pref("services.settings.main.language-dictionaries.last_check", 1545923459);
user_pref("services.settings.main.onboarding.last_check", 1545923459);
user_pref("services.settings.main.sites-classification.last_check", 1545923459);
user_pref("services.settings.main.tippytop.last_check", 1545923459);
user_pref("services.sync.clients.lastSync", "0");
user_pref("services.sync.clients.lastSyncLocal", "0");
user_pref("services.sync.declinedEngines", "addons,history,passwords,prefs,tabs");
user_pref("services.sync.engine.addons", false);
user_pref("services.sync.engine.history", false);
user_pref("services.sync.engine.passwords", false);
user_pref("services.sync.engine.prefs", false);
user_pref("services.sync.engine.tabs", false);
user_pref("services.sync.globalScore", 0);
user_pref("services.sync.nextSync", 0);
user_pref("services.sync.tabs.lastSync", "0");
user_pref("services.sync.tabs.lastSyncLocal", "0");
user_pref("signon.importedFromSqlite", true);
user_pref("storage.vacuum.last.index", 0);
user_pref("storage.vacuum.last.places.sqlite", 1545494524);
user_pref("toolkit.startup.last_success", 1545923376);
user_pref("toolkit.telemetry.cachedClientID", "ae25e929-4536-4a1d-a08c-69a3f9a80bae");
user_pref("toolkit.telemetry.previousBuildID", "20181206201918");
user_pref("toolkit.telemetry.reportingpolicy.firstRun", false);
